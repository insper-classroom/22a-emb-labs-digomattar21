
OLED1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006ca4  00400000  00400000  00010000  2**6
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  00406ca4  00406ca4  00016ca4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .relocate     000009d0  20400000  00406cac  00020000  2**3
                  CONTENTS, ALLOC, LOAD, CODE
  3 .bss          00000300  204009d0  0040767c  000209d0  2**2
                  ALLOC
  4 .stack        00002000  20400cd0  0040797c  000209d0  2**0
                  ALLOC
  5 .heap         00000200  20402cd0  0040997c  000209d0  2**0
                  ALLOC
  6 .ARM.attributes 0000002e  00000000  00000000  000209d0  2**0
                  CONTENTS, READONLY
  7 .comment      00000059  00000000  00000000  000209fe  2**0
                  CONTENTS, READONLY
  8 .debug_info   00017a25  00000000  00000000  00020a57  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 000035ee  00000000  00000000  0003847c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00005508  00000000  00000000  0003ba6a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_aranges 00000850  00000000  00000000  00040f72  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000008b0  00000000  00000000  000417c2  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_macro  0002100e  00000000  00000000  00042072  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_line   0000e437  00000000  00000000  00063080  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    0009012a  00000000  00000000  000714b7  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_frame  00001e34  00000000  00000000  001015e4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00400000 <exception_table>:
  400000:	d0 2c 40 20 8d 11 40 00 89 11 40 00 89 11 40 00     .,@ ..@...@...@.
  400010:	89 11 40 00 89 11 40 00 89 11 40 00 00 00 00 00     ..@...@...@.....
	...
  40002c:	89 11 40 00 89 11 40 00 00 00 00 00 89 11 40 00     ..@...@.......@.
  40003c:	89 11 40 00 89 11 40 00 89 11 40 00 89 11 40 00     ..@...@...@...@.
  40004c:	89 11 40 00 89 11 40 00 89 11 40 00 89 11 40 00     ..@...@...@...@.
  40005c:	89 11 40 00 89 11 40 00 00 00 00 00 ed 0c 40 00     ..@...@.......@.
  40006c:	01 0d 40 00 15 0d 40 00 89 11 40 00 89 11 40 00     ..@...@...@...@.
  40007c:	89 11 40 00 29 0d 40 00 3d 0d 40 00 89 11 40 00     ..@.).@.=.@...@.
  40008c:	89 11 40 00 89 11 40 00 89 11 40 00 89 11 40 00     ..@...@...@...@.
  40009c:	89 11 40 00 89 11 40 00 89 11 40 00 89 11 40 00     ..@...@...@...@.
  4000ac:	89 11 40 00 89 11 40 00 89 11 40 00 89 11 40 00     ..@...@...@...@.
  4000bc:	89 11 40 00 89 11 40 00 89 11 40 00 89 11 40 00     ..@...@...@...@.
  4000cc:	89 11 40 00 00 00 00 00 89 11 40 00 00 00 00 00     ..@.......@.....
  4000dc:	89 11 40 00 89 11 40 00 89 11 40 00 89 11 40 00     ..@...@...@...@.
  4000ec:	89 11 40 00 89 11 40 00 89 11 40 00 89 11 40 00     ..@...@...@...@.
  4000fc:	89 11 40 00 89 11 40 00 89 11 40 00 89 11 40 00     ..@...@...@...@.
  40010c:	89 11 40 00 89 11 40 00 00 00 00 00 00 00 00 00     ..@...@.........
  40011c:	00 00 00 00 89 11 40 00 89 11 40 00 89 11 40 00     ......@...@...@.
  40012c:	89 11 40 00 89 11 40 00 00 00 00 00 89 11 40 00     ..@...@.......@.
  40013c:	89 11 40 00                                         ..@.

00400140 <__do_global_dtors_aux>:
  400140:	b510      	push	{r4, lr}
  400142:	4c05      	ldr	r4, [pc, #20]	; (400158 <__do_global_dtors_aux+0x18>)
  400144:	7823      	ldrb	r3, [r4, #0]
  400146:	b933      	cbnz	r3, 400156 <__do_global_dtors_aux+0x16>
  400148:	4b04      	ldr	r3, [pc, #16]	; (40015c <__do_global_dtors_aux+0x1c>)
  40014a:	b113      	cbz	r3, 400152 <__do_global_dtors_aux+0x12>
  40014c:	4804      	ldr	r0, [pc, #16]	; (400160 <__do_global_dtors_aux+0x20>)
  40014e:	f3af 8000 	nop.w
  400152:	2301      	movs	r3, #1
  400154:	7023      	strb	r3, [r4, #0]
  400156:	bd10      	pop	{r4, pc}
  400158:	204009d0 	.word	0x204009d0
  40015c:	00000000 	.word	0x00000000
  400160:	00406cac 	.word	0x00406cac

00400164 <frame_dummy>:
  400164:	4b0c      	ldr	r3, [pc, #48]	; (400198 <frame_dummy+0x34>)
  400166:	b143      	cbz	r3, 40017a <frame_dummy+0x16>
  400168:	480c      	ldr	r0, [pc, #48]	; (40019c <frame_dummy+0x38>)
  40016a:	490d      	ldr	r1, [pc, #52]	; (4001a0 <frame_dummy+0x3c>)
  40016c:	b510      	push	{r4, lr}
  40016e:	f3af 8000 	nop.w
  400172:	480c      	ldr	r0, [pc, #48]	; (4001a4 <frame_dummy+0x40>)
  400174:	6803      	ldr	r3, [r0, #0]
  400176:	b923      	cbnz	r3, 400182 <frame_dummy+0x1e>
  400178:	bd10      	pop	{r4, pc}
  40017a:	480a      	ldr	r0, [pc, #40]	; (4001a4 <frame_dummy+0x40>)
  40017c:	6803      	ldr	r3, [r0, #0]
  40017e:	b933      	cbnz	r3, 40018e <frame_dummy+0x2a>
  400180:	4770      	bx	lr
  400182:	4b09      	ldr	r3, [pc, #36]	; (4001a8 <frame_dummy+0x44>)
  400184:	2b00      	cmp	r3, #0
  400186:	d0f7      	beq.n	400178 <frame_dummy+0x14>
  400188:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  40018c:	4718      	bx	r3
  40018e:	4b06      	ldr	r3, [pc, #24]	; (4001a8 <frame_dummy+0x44>)
  400190:	2b00      	cmp	r3, #0
  400192:	d0f5      	beq.n	400180 <frame_dummy+0x1c>
  400194:	4718      	bx	r3
  400196:	bf00      	nop
  400198:	00000000 	.word	0x00000000
  40019c:	00406cac 	.word	0x00406cac
  4001a0:	204009d4 	.word	0x204009d4
  4001a4:	00406cac 	.word	0x00406cac
  4001a8:	00000000 	.word	0x00000000

004001ac <spi_enable_clock>:
 * \brief Enable SPI clock.
 *
 * \param p_spi Pointer to an SPI instance.
 */
void spi_enable_clock(Spi *p_spi)
{
  4001ac:	b508      	push	{r3, lr}
#if (SAM4S || SAM3S || SAM3N || SAM3U || SAM4E || SAM4N || SAMG51|| SAMG53|| SAMG54)
	UNUSED(p_spi);
	sysclk_enable_peripheral_clock(ID_SPI);
#elif (SAM3XA || SAM4C || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	if (p_spi == SPI0) {
  4001ae:	4b07      	ldr	r3, [pc, #28]	; (4001cc <spi_enable_clock+0x20>)
  4001b0:	4298      	cmp	r0, r3
  4001b2:	d003      	beq.n	4001bc <spi_enable_clock+0x10>
		sysclk_enable_peripheral_clock(ID_SPI0);
	}
	#ifdef SPI1
	else if (p_spi == SPI1) {
  4001b4:	4b06      	ldr	r3, [pc, #24]	; (4001d0 <spi_enable_clock+0x24>)
  4001b6:	4298      	cmp	r0, r3
  4001b8:	d004      	beq.n	4001c4 <spi_enable_clock+0x18>
  4001ba:	bd08      	pop	{r3, pc}
 *
 * \param ul_id Id (number) of the peripheral clock.
 */
static inline void sysclk_enable_peripheral_clock(uint32_t ul_id)
{
	pmc_enable_periph_clk(ul_id);
  4001bc:	2015      	movs	r0, #21
  4001be:	4b05      	ldr	r3, [pc, #20]	; (4001d4 <spi_enable_clock+0x28>)
  4001c0:	4798      	blx	r3
  4001c2:	bd08      	pop	{r3, pc}
  4001c4:	202a      	movs	r0, #42	; 0x2a
  4001c6:	4b03      	ldr	r3, [pc, #12]	; (4001d4 <spi_enable_clock+0x28>)
  4001c8:	4798      	blx	r3
	}
	#endif
#elif SAM4L
	sysclk_enable_peripheral_clock(p_spi);
#endif
}
  4001ca:	e7f6      	b.n	4001ba <spi_enable_clock+0xe>
  4001cc:	40008000 	.word	0x40008000
  4001d0:	40058000 	.word	0x40058000
  4001d4:	00400e71 	.word	0x00400e71

004001d8 <spi_set_peripheral_chip_select_value>:
 *                 \ref spi_enable_peripheral_select_decode,
 *                 \ref spi_disable_peripheral_select_decode.
 */
void spi_set_peripheral_chip_select_value(Spi *p_spi, uint32_t ul_value)
{
	p_spi->SPI_MR &= (~SPI_MR_PCS_Msk);
  4001d8:	6843      	ldr	r3, [r0, #4]
  4001da:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
  4001de:	6043      	str	r3, [r0, #4]
	p_spi->SPI_MR |= SPI_MR_PCS(ul_value);
  4001e0:	6843      	ldr	r3, [r0, #4]
  4001e2:	0409      	lsls	r1, r1, #16
  4001e4:	f401 2170 	and.w	r1, r1, #983040	; 0xf0000
  4001e8:	4319      	orrs	r1, r3
  4001ea:	6041      	str	r1, [r0, #4]
  4001ec:	4770      	bx	lr

004001ee <spi_write>:
 * \retval SPI_OK on Success.
 * \retval SPI_ERROR_TIMEOUT on Time-out.
 */
spi_status_t spi_write(Spi *p_spi, uint16_t us_data,
		uint8_t uc_pcs, uint8_t uc_last)
{
  4001ee:	b430      	push	{r4, r5}
	uint32_t timeout = SPI_TIMEOUT;
	uint32_t value;

	while (!(p_spi->SPI_SR & SPI_SR_TDRE)) {
  4001f0:	f643 2499 	movw	r4, #15001	; 0x3a99
  4001f4:	6905      	ldr	r5, [r0, #16]
  4001f6:	f015 0f02 	tst.w	r5, #2
  4001fa:	d103      	bne.n	400204 <spi_write+0x16>
		if (!timeout--) {
  4001fc:	3c01      	subs	r4, #1
  4001fe:	d1f9      	bne.n	4001f4 <spi_write+0x6>
			return SPI_ERROR_TIMEOUT;
  400200:	2001      	movs	r0, #1
  400202:	e00c      	b.n	40021e <spi_write+0x30>
 *
 * \return 1 for Variable mode, 0 for fixed mode.
 */
static inline uint32_t spi_get_peripheral_select_mode(Spi *p_spi)
{
	if (p_spi->SPI_MR & SPI_MR_PS) {
  400204:	6844      	ldr	r4, [r0, #4]
		}
	}

	if (spi_get_peripheral_select_mode(p_spi)) {
  400206:	f014 0f02 	tst.w	r4, #2
  40020a:	d006      	beq.n	40021a <spi_write+0x2c>
		value = SPI_TDR_TD(us_data) | SPI_TDR_PCS(uc_pcs);
  40020c:	0412      	lsls	r2, r2, #16
  40020e:	f402 2270 	and.w	r2, r2, #983040	; 0xf0000
  400212:	4311      	orrs	r1, r2
		if (uc_last) {
  400214:	b10b      	cbz	r3, 40021a <spi_write+0x2c>
			value |= SPI_TDR_LASTXFER;
  400216:	f041 7180 	orr.w	r1, r1, #16777216	; 0x1000000
		}
	} else {
		value = SPI_TDR_TD(us_data);
	}

	p_spi->SPI_TDR = value;
  40021a:	60c1      	str	r1, [r0, #12]

	return SPI_OK;
  40021c:	2000      	movs	r0, #0
}
  40021e:	bc30      	pop	{r4, r5}
  400220:	4770      	bx	lr

00400222 <spi_set_clock_polarity>:
 * \param ul_polarity Default clock state is logical one(high)/zero(low).
 */
void spi_set_clock_polarity(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_polarity)
{
	if (ul_polarity) {
  400222:	b932      	cbnz	r2, 400232 <spi_set_clock_polarity+0x10>
  400224:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CPOL);
  400228:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40022a:	f023 0301 	bic.w	r3, r3, #1
  40022e:	6303      	str	r3, [r0, #48]	; 0x30
  400230:	4770      	bx	lr
  400232:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CPOL;
  400236:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400238:	f043 0301 	orr.w	r3, r3, #1
  40023c:	6303      	str	r3, [r0, #48]	; 0x30
  40023e:	4770      	bx	lr

00400240 <spi_set_clock_phase>:
 *  \param ul_pcs_ch Peripheral Chip Select channel (0~3).
 *  \param ul_phase Data capture on the rising/falling edge of clock.
 */
void spi_set_clock_phase(Spi *p_spi, uint32_t ul_pcs_ch, uint32_t ul_phase)
{
	if (ul_phase) {
  400240:	b932      	cbnz	r2, 400250 <spi_set_clock_phase+0x10>
  400242:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
	} else {
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_NCPHA);
  400246:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400248:	f023 0302 	bic.w	r3, r3, #2
  40024c:	6303      	str	r3, [r0, #48]	; 0x30
  40024e:	4770      	bx	lr
  400250:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_NCPHA;
  400254:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400256:	f043 0302 	orr.w	r3, r3, #2
  40025a:	6303      	str	r3, [r0, #48]	; 0x30
  40025c:	4770      	bx	lr

0040025e <spi_configure_cs_behavior>:
 * \param ul_cs_behavior Behavior of the Chip Select after transfer.
 */
void spi_configure_cs_behavior(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_cs_behavior)
{
	if (ul_cs_behavior == SPI_CS_RISE_FORCED) {
  40025e:	2a04      	cmp	r2, #4
  400260:	d003      	beq.n	40026a <spi_configure_cs_behavior+0xc>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
	} else if (ul_cs_behavior == SPI_CS_RISE_NO_TX) {
  400262:	b16a      	cbz	r2, 400280 <spi_configure_cs_behavior+0x22>
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
	} else if (ul_cs_behavior == SPI_CS_KEEP_LOW) {
  400264:	2a08      	cmp	r2, #8
  400266:	d016      	beq.n	400296 <spi_configure_cs_behavior+0x38>
  400268:	4770      	bx	lr
  40026a:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  40026e:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400270:	f023 0308 	bic.w	r3, r3, #8
  400274:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSNAAT;
  400276:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400278:	f043 0304 	orr.w	r3, r3, #4
  40027c:	6303      	str	r3, [r0, #48]	; 0x30
  40027e:	4770      	bx	lr
  400280:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSAAT);
  400284:	6b03      	ldr	r3, [r0, #48]	; 0x30
  400286:	f023 0308 	bic.w	r3, r3, #8
  40028a:	6303      	str	r3, [r0, #48]	; 0x30
		p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_CSNAAT);
  40028c:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40028e:	f023 0304 	bic.w	r3, r3, #4
  400292:	6303      	str	r3, [r0, #48]	; 0x30
  400294:	4770      	bx	lr
  400296:	eb00 0081 	add.w	r0, r0, r1, lsl #2
		p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_CSAAT;
  40029a:	6b03      	ldr	r3, [r0, #48]	; 0x30
  40029c:	f043 0308 	orr.w	r3, r3, #8
  4002a0:	6303      	str	r3, [r0, #48]	; 0x30
	}
}
  4002a2:	e7e1      	b.n	400268 <spi_configure_cs_behavior+0xa>

004002a4 <spi_set_bits_per_transfer>:
 * \param ul_bits Number of bits (8~16), use the pattern defined
 *        in the device header file.
 */
void spi_set_bits_per_transfer(Spi *p_spi, uint32_t ul_pcs_ch,
		uint32_t ul_bits)
{
  4002a4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_BITS_Msk);
  4002a8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002aa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  4002ae:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= ul_bits;
  4002b0:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002b2:	431a      	orrs	r2, r3
  4002b4:	630a      	str	r2, [r1, #48]	; 0x30
  4002b6:	4770      	bx	lr

004002b8 <spi_calc_baudrate_div>:
 *   \retval > 0  Success.
 *   \retval < 0  Error.
 */
int16_t spi_calc_baudrate_div(const uint32_t baudrate, uint32_t mck)
{
	int baud_div = div_ceil(mck, baudrate);
  4002b8:	1e43      	subs	r3, r0, #1
  4002ba:	4419      	add	r1, r3
  4002bc:	fbb1 f0f0 	udiv	r0, r1, r0

	/* The value of baud_div is from 1 to 255 in the SCBR field. */
	if (baud_div <= 0 || baud_div > 255) {
  4002c0:	1e43      	subs	r3, r0, #1
  4002c2:	2bfe      	cmp	r3, #254	; 0xfe
		return -1;
	}

	return baud_div;
  4002c4:	bf94      	ite	ls
  4002c6:	b200      	sxthls	r0, r0
		return -1;
  4002c8:	f04f 30ff 	movhi.w	r0, #4294967295
}
  4002cc:	4770      	bx	lr

004002ce <spi_set_baudrate_div>:
 */
int16_t spi_set_baudrate_div(Spi *p_spi, uint32_t ul_pcs_ch,
		uint8_t uc_baudrate_divider)
{
    /* Programming the SCBR field to 0 is forbidden */
    if (!uc_baudrate_divider)
  4002ce:	b17a      	cbz	r2, 4002f0 <spi_set_baudrate_div+0x22>
{
  4002d0:	b410      	push	{r4}
  4002d2:	4614      	mov	r4, r2
  4002d4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
        return -1;

	p_spi->SPI_CSR[ul_pcs_ch] &= (~SPI_CSR_SCBR_Msk);
  4002d8:	6b0b      	ldr	r3, [r1, #48]	; 0x30
  4002da:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
  4002de:	630b      	str	r3, [r1, #48]	; 0x30
	p_spi->SPI_CSR[ul_pcs_ch] |= SPI_CSR_SCBR(uc_baudrate_divider);
  4002e0:	6b0a      	ldr	r2, [r1, #48]	; 0x30
  4002e2:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
  4002e6:	630a      	str	r2, [r1, #48]	; 0x30
    return 0;
  4002e8:	2000      	movs	r0, #0
}
  4002ea:	f85d 4b04 	ldr.w	r4, [sp], #4
  4002ee:	4770      	bx	lr
        return -1;
  4002f0:	f04f 30ff 	mov.w	r0, #4294967295
  4002f4:	4770      	bx	lr
	...

004002f8 <gfx_mono_set_framebuffer>:
	gfx_mono_set_framebuffer(framebuffer);
\endcode
 */
void gfx_mono_set_framebuffer(uint8_t *framebuffer)
{
	fbpointer = framebuffer;
  4002f8:	4b01      	ldr	r3, [pc, #4]	; (400300 <gfx_mono_set_framebuffer+0x8>)
  4002fa:	6018      	str	r0, [r3, #0]
  4002fc:	4770      	bx	lr
  4002fe:	bf00      	nop
  400300:	204009ec 	.word	0x204009ec

00400304 <gfx_mono_framebuffer_put_byte>:
\endcode
 */
void gfx_mono_framebuffer_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data)
{
	*(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column) = data;
  400304:	4b02      	ldr	r3, [pc, #8]	; (400310 <gfx_mono_framebuffer_put_byte+0xc>)
  400306:	681b      	ldr	r3, [r3, #0]
  400308:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
  40030c:	5442      	strb	r2, [r0, r1]
  40030e:	4770      	bx	lr
  400310:	204009ec 	.word	0x204009ec

00400314 <gfx_mono_framebuffer_get_byte>:
	data = gfx_mono_framebuffer_get_byte(0, 0);
\endcode
 */
uint8_t gfx_mono_framebuffer_get_byte(gfx_coord_t page, gfx_coord_t column)
{
	return *(fbpointer + (page * GFX_MONO_LCD_WIDTH) + column);
  400314:	4b02      	ldr	r3, [pc, #8]	; (400320 <gfx_mono_framebuffer_get_byte+0xc>)
  400316:	681b      	ldr	r3, [r3, #0]
  400318:	eb03 10c0 	add.w	r0, r3, r0, lsl #7
}
  40031c:	5c40      	ldrb	r0, [r0, r1]
  40031e:	4770      	bx	lr
  400320:	204009ec 	.word	0x204009ec

00400324 <gfx_mono_generic_draw_horizontal_line>:
 * \param[in]  length     Length of the line in pixels.
 * \param[in]  color      Pixel operation of the line.
 */
void gfx_mono_generic_draw_horizontal_line(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t length, enum gfx_mono_color color)
{
  400324:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	uint8_t page;
	uint8_t pixelmask;
	uint8_t temp;

	/* Clip line length if too long */
	if (x + length > GFX_MONO_LCD_WIDTH) {
  400328:	1884      	adds	r4, r0, r2
  40032a:	2c80      	cmp	r4, #128	; 0x80
  40032c:	dd02      	ble.n	400334 <gfx_mono_generic_draw_horizontal_line+0x10>
		length = GFX_MONO_LCD_WIDTH - x;
  40032e:	f1c0 0480 	rsb	r4, r0, #128	; 0x80
  400332:	b2e2      	uxtb	r2, r4
	}

	page = y / 8;
	pixelmask = (1 << (y - (page * 8)));

	if (length == 0) {
  400334:	b322      	cbz	r2, 400380 <gfx_mono_generic_draw_horizontal_line+0x5c>
	page = y / 8;
  400336:	08cd      	lsrs	r5, r1, #3
	pixelmask = (1 << (y - (page * 8)));
  400338:	eba1 01c5 	sub.w	r1, r1, r5, lsl #3
  40033c:	2601      	movs	r6, #1
  40033e:	fa06 f101 	lsl.w	r1, r6, r1
  400342:	b2ce      	uxtb	r6, r1
		/* Nothing to do. Move along. */
		return;
	}

	switch (color) {
  400344:	2b01      	cmp	r3, #1
  400346:	d01d      	beq.n	400384 <gfx_mono_generic_draw_horizontal_line+0x60>
  400348:	2b00      	cmp	r3, #0
  40034a:	d035      	beq.n	4003b8 <gfx_mono_generic_draw_horizontal_line+0x94>
  40034c:	2b02      	cmp	r3, #2
  40034e:	d117      	bne.n	400380 <gfx_mono_generic_draw_horizontal_line+0x5c>
  400350:	3801      	subs	r0, #1
  400352:	b2c7      	uxtb	r7, r0
  400354:	19d4      	adds	r4, r2, r7
  400356:	b2e4      	uxtb	r4, r4
		}
		break;

	case GFX_PIXEL_XOR:
		while (length-- > 0) {
			temp = gfx_mono_get_byte(page, x + length);
  400358:	f8df a090 	ldr.w	sl, [pc, #144]	; 4003ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp ^= pixelmask;
			gfx_mono_put_byte(page, x + length, temp);
  40035c:	f04f 0900 	mov.w	r9, #0
  400360:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4003f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400364:	4621      	mov	r1, r4
  400366:	4628      	mov	r0, r5
  400368:	47d0      	blx	sl
			temp ^= pixelmask;
  40036a:	ea86 0200 	eor.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  40036e:	464b      	mov	r3, r9
  400370:	b2d2      	uxtb	r2, r2
  400372:	4621      	mov	r1, r4
  400374:	4628      	mov	r0, r5
  400376:	47c0      	blx	r8
  400378:	3c01      	subs	r4, #1
  40037a:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  40037c:	42bc      	cmp	r4, r7
  40037e:	d1f1      	bne.n	400364 <gfx_mono_generic_draw_horizontal_line+0x40>
  400380:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  400384:	3801      	subs	r0, #1
  400386:	b2c7      	uxtb	r7, r0
  400388:	19d4      	adds	r4, r2, r7
  40038a:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  40038c:	f8df a05c 	ldr.w	sl, [pc, #92]	; 4003ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			gfx_mono_put_byte(page, x + length, temp);
  400390:	f04f 0900 	mov.w	r9, #0
  400394:	f8df 8058 	ldr.w	r8, [pc, #88]	; 4003f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  400398:	4621      	mov	r1, r4
  40039a:	4628      	mov	r0, r5
  40039c:	47d0      	blx	sl
			temp |= pixelmask;
  40039e:	ea46 0200 	orr.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4003a2:	464b      	mov	r3, r9
  4003a4:	b2d2      	uxtb	r2, r2
  4003a6:	4621      	mov	r1, r4
  4003a8:	4628      	mov	r0, r5
  4003aa:	47c0      	blx	r8
  4003ac:	3c01      	subs	r4, #1
  4003ae:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4003b0:	42bc      	cmp	r4, r7
  4003b2:	d1f1      	bne.n	400398 <gfx_mono_generic_draw_horizontal_line+0x74>
  4003b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4003b8:	3801      	subs	r0, #1
  4003ba:	b2c7      	uxtb	r7, r0
  4003bc:	19d4      	adds	r4, r2, r7
  4003be:	b2e4      	uxtb	r4, r4
			temp = gfx_mono_get_byte(page, x + length);
  4003c0:	f8df 8028 	ldr.w	r8, [pc, #40]	; 4003ec <gfx_mono_generic_draw_horizontal_line+0xc8>
			temp &= ~pixelmask;
  4003c4:	43ce      	mvns	r6, r1
			gfx_mono_put_byte(page, x + length, temp);
  4003c6:	f8df 9028 	ldr.w	r9, [pc, #40]	; 4003f0 <gfx_mono_generic_draw_horizontal_line+0xcc>
			temp = gfx_mono_get_byte(page, x + length);
  4003ca:	4621      	mov	r1, r4
  4003cc:	4628      	mov	r0, r5
  4003ce:	47c0      	blx	r8
			temp &= ~pixelmask;
  4003d0:	ea06 0200 	and.w	r2, r6, r0
			gfx_mono_put_byte(page, x + length, temp);
  4003d4:	2300      	movs	r3, #0
  4003d6:	b2d2      	uxtb	r2, r2
  4003d8:	4621      	mov	r1, r4
  4003da:	4628      	mov	r0, r5
  4003dc:	47c8      	blx	r9
  4003de:	3c01      	subs	r4, #1
  4003e0:	b2e4      	uxtb	r4, r4
		while (length-- > 0) {
  4003e2:	42bc      	cmp	r4, r7
  4003e4:	d1f1      	bne.n	4003ca <gfx_mono_generic_draw_horizontal_line+0xa6>
  4003e6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4003ea:	bf00      	nop
  4003ec:	00400625 	.word	0x00400625
  4003f0:	00400521 	.word	0x00400521

004003f4 <gfx_mono_generic_draw_filled_rect>:
 * \param[in]  color       Pixel operation of the line
 */
void gfx_mono_generic_draw_filled_rect(gfx_coord_t x, gfx_coord_t y,
		gfx_coord_t width, gfx_coord_t height,
		enum gfx_mono_color color)
{
  4003f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4003f8:	f89d 7020 	ldrb.w	r7, [sp, #32]
	if (height == 0) {
  4003fc:	b18b      	cbz	r3, 400422 <gfx_mono_generic_draw_filled_rect+0x2e>
  4003fe:	461c      	mov	r4, r3
  400400:	4690      	mov	r8, r2
  400402:	4606      	mov	r6, r0
  400404:	1e4d      	subs	r5, r1, #1
  400406:	b2ed      	uxtb	r5, r5
  400408:	442c      	add	r4, r5
  40040a:	b2e4      	uxtb	r4, r4
		/* Nothing to do. Move along. */
		return;
	}

	while (height-- > 0) {
		gfx_mono_draw_horizontal_line(x, y + height, width, color);
  40040c:	f8df 9018 	ldr.w	r9, [pc, #24]	; 400428 <gfx_mono_generic_draw_filled_rect+0x34>
  400410:	463b      	mov	r3, r7
  400412:	4642      	mov	r2, r8
  400414:	4621      	mov	r1, r4
  400416:	4630      	mov	r0, r6
  400418:	47c8      	blx	r9
  40041a:	3c01      	subs	r4, #1
  40041c:	b2e4      	uxtb	r4, r4
	while (height-- > 0) {
  40041e:	42ac      	cmp	r4, r5
  400420:	d1f6      	bne.n	400410 <gfx_mono_generic_draw_filled_rect+0x1c>
  400422:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400426:	bf00      	nop
  400428:	00400325 	.word	0x00400325

0040042c <gfx_mono_draw_char>:
 * \param[in] y        Y coordinate on screen.
 * \param[in] font     Font to draw character in
 */
void gfx_mono_draw_char(const char c, const gfx_coord_t x, const gfx_coord_t y,
		const struct font *font)
{
  40042c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  400430:	b083      	sub	sp, #12
  400432:	4604      	mov	r4, r0
  400434:	4688      	mov	r8, r1
  400436:	4691      	mov	r9, r2
  400438:	469b      	mov	fp, r3
	gfx_mono_draw_filled_rect(x, y, font->width, font->height,
  40043a:	7a5b      	ldrb	r3, [r3, #9]
  40043c:	f89b 2008 	ldrb.w	r2, [fp, #8]
  400440:	2100      	movs	r1, #0
  400442:	9100      	str	r1, [sp, #0]
  400444:	4649      	mov	r1, r9
  400446:	4640      	mov	r0, r8
  400448:	4d21      	ldr	r5, [pc, #132]	; (4004d0 <gfx_mono_draw_char+0xa4>)
  40044a:	47a8      	blx	r5
			GFX_PIXEL_CLR);

	switch (font->type) {
  40044c:	f89b 3000 	ldrb.w	r3, [fp]
  400450:	b113      	cbz	r3, 400458 <gfx_mono_draw_char+0x2c>
	default:
		/* Unsupported mode, call assert */
		Assert(false);
		break;
	}
}
  400452:	b003      	add	sp, #12
  400454:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	char_row_size = font->width / CONFIG_FONT_PIXELS_PER_BYTE;
  400458:	f89b 2008 	ldrb.w	r2, [fp, #8]
  40045c:	08d3      	lsrs	r3, r2, #3
	if (font->width % CONFIG_FONT_PIXELS_PER_BYTE) {
  40045e:	f012 0f07 	tst.w	r2, #7
		char_row_size++;
  400462:	bf18      	it	ne
  400464:	3301      	addne	r3, #1
	glyph_data_offset = char_row_size * font->height *
  400466:	f89b a009 	ldrb.w	sl, [fp, #9]
			((uint8_t)ch - font->first_char);
  40046a:	f89b 700a 	ldrb.w	r7, [fp, #10]
  40046e:	1be7      	subs	r7, r4, r7
	glyph_data_offset = char_row_size * font->height *
  400470:	fb17 f70a 	smulbb	r7, r7, sl
  400474:	fb17 f703 	smulbb	r7, r7, r3
	glyph_data = font->data.progmem + glyph_data_offset;
  400478:	f8db 3004 	ldr.w	r3, [fp, #4]
  40047c:	fa13 f787 	uxtah	r7, r3, r7
  400480:	e01f      	b.n	4004c2 <gfx_mono_draw_char+0x96>
			glyph_byte <<= 1;
  400482:	0064      	lsls	r4, r4, #1
  400484:	b2e4      	uxtb	r4, r4
  400486:	3501      	adds	r5, #1
		for (i = 0; i < pixelsToDraw; i++) {
  400488:	b2eb      	uxtb	r3, r5
  40048a:	429e      	cmp	r6, r3
  40048c:	d910      	bls.n	4004b0 <gfx_mono_draw_char+0x84>
  40048e:	b2eb      	uxtb	r3, r5
  400490:	eb08 0003 	add.w	r0, r8, r3
  400494:	b2c0      	uxtb	r0, r0
			if (i % CONFIG_FONT_PIXELS_PER_BYTE == 0) {
  400496:	f013 0f07 	tst.w	r3, #7
				glyph_byte = PROGMEM_READ_BYTE(glyph_data);
  40049a:	bf08      	it	eq
  40049c:	f817 4b01 	ldrbeq.w	r4, [r7], #1
			if ((glyph_byte & 0x80)) {
  4004a0:	f014 0f80 	tst.w	r4, #128	; 0x80
  4004a4:	d0ed      	beq.n	400482 <gfx_mono_draw_char+0x56>
				gfx_mono_draw_pixel(inc_x, inc_y,
  4004a6:	2201      	movs	r2, #1
  4004a8:	4649      	mov	r1, r9
  4004aa:	4b0a      	ldr	r3, [pc, #40]	; (4004d4 <gfx_mono_draw_char+0xa8>)
  4004ac:	4798      	blx	r3
  4004ae:	e7e8      	b.n	400482 <gfx_mono_draw_char+0x56>
		inc_y += 1;
  4004b0:	f109 0901 	add.w	r9, r9, #1
  4004b4:	fa5f f989 	uxtb.w	r9, r9
		rows_left--;
  4004b8:	f10a 3aff 	add.w	sl, sl, #4294967295
	} while (rows_left > 0);
  4004bc:	f01a 0aff 	ands.w	sl, sl, #255	; 0xff
  4004c0:	d0c7      	beq.n	400452 <gfx_mono_draw_char+0x26>
		uint8_t pixelsToDraw = font->width;
  4004c2:	f89b 6008 	ldrb.w	r6, [fp, #8]
		for (i = 0; i < pixelsToDraw; i++) {
  4004c6:	2e00      	cmp	r6, #0
  4004c8:	d0f2      	beq.n	4004b0 <gfx_mono_draw_char+0x84>
  4004ca:	2500      	movs	r5, #0
  4004cc:	462c      	mov	r4, r5
  4004ce:	e7de      	b.n	40048e <gfx_mono_draw_char+0x62>
  4004d0:	004003f5 	.word	0x004003f5
  4004d4:	004005c1 	.word	0x004005c1

004004d8 <gfx_mono_draw_string>:
 * \param[in] y         Y coordinate on screen.
 * \param[in] font      Font to draw string in
 */
void gfx_mono_draw_string(const char *str, gfx_coord_t x, gfx_coord_t y,
		const struct font *font)
{
  4004d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4004dc:	4604      	mov	r4, r0
  4004de:	4690      	mov	r8, r2
  4004e0:	461d      	mov	r5, r3
  4004e2:	4689      	mov	r9, r1
			x = start_of_string_position_x;
			y += font->height + 1;
		} else if (*str == '\r') {
			/* Skip '\r' characters. */
		} else {
			gfx_mono_draw_char(*str, x, y, font);
  4004e4:	4f0d      	ldr	r7, [pc, #52]	; (40051c <gfx_mono_draw_string+0x44>)
			x = start_of_string_position_x;
  4004e6:	460e      	mov	r6, r1
  4004e8:	e008      	b.n	4004fc <gfx_mono_draw_string+0x24>
			y += font->height + 1;
  4004ea:	7a6a      	ldrb	r2, [r5, #9]
  4004ec:	3201      	adds	r2, #1
  4004ee:	4442      	add	r2, r8
  4004f0:	fa5f f882 	uxtb.w	r8, r2
			x = start_of_string_position_x;
  4004f4:	46b1      	mov	r9, r6
			x += font->width;
		}
	} while (*(++str));
  4004f6:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  4004fa:	b16b      	cbz	r3, 400518 <gfx_mono_draw_string+0x40>
		if (*str == '\n') {
  4004fc:	7820      	ldrb	r0, [r4, #0]
  4004fe:	280a      	cmp	r0, #10
  400500:	d0f3      	beq.n	4004ea <gfx_mono_draw_string+0x12>
		} else if (*str == '\r') {
  400502:	280d      	cmp	r0, #13
  400504:	d0f7      	beq.n	4004f6 <gfx_mono_draw_string+0x1e>
			gfx_mono_draw_char(*str, x, y, font);
  400506:	462b      	mov	r3, r5
  400508:	4642      	mov	r2, r8
  40050a:	4649      	mov	r1, r9
  40050c:	47b8      	blx	r7
			x += font->width;
  40050e:	7a2b      	ldrb	r3, [r5, #8]
  400510:	4499      	add	r9, r3
  400512:	fa5f f989 	uxtb.w	r9, r9
  400516:	e7ee      	b.n	4004f6 <gfx_mono_draw_string+0x1e>
}
  400518:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  40051c:	0040042d 	.word	0x0040042d

00400520 <gfx_mono_ssd1306_put_byte>:
	gfx_mono_ssd1306_put_byte(0, 0, 0xFF, false);
\endcode
  */
 void gfx_mono_ssd1306_put_byte(gfx_coord_t page, gfx_coord_t column,
		uint8_t data, bool force)
{
  400520:	b570      	push	{r4, r5, r6, lr}
  400522:	4604      	mov	r4, r0
  400524:	460d      	mov	r5, r1
  400526:	4616      	mov	r6, r2
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	if (!force && data == gfx_mono_framebuffer_get_byte(page, column)) {
  400528:	b91b      	cbnz	r3, 400532 <gfx_mono_ssd1306_put_byte+0x12>
  40052a:	4b0d      	ldr	r3, [pc, #52]	; (400560 <gfx_mono_ssd1306_put_byte+0x40>)
  40052c:	4798      	blx	r3
  40052e:	42b0      	cmp	r0, r6
  400530:	d015      	beq.n	40055e <gfx_mono_ssd1306_put_byte+0x3e>
		return;
	}
	gfx_mono_framebuffer_put_byte(page, column, data);
  400532:	4632      	mov	r2, r6
  400534:	4629      	mov	r1, r5
  400536:	4620      	mov	r0, r4
  400538:	4b0a      	ldr	r3, [pc, #40]	; (400564 <gfx_mono_ssd1306_put_byte+0x44>)
  40053a:	4798      	blx	r3
 * \param address the page address
 */
static inline void ssd1306_set_page_address(uint8_t address)
{
	// Make sure that the address is 4 bits (only 8 pages)
	address &= 0x0F;
  40053c:	f004 000f 	and.w	r0, r4, #15
	ssd1306_write_command(SSD1306_CMD_SET_PAGE_START_ADDRESS(address));
  400540:	f040 00b0 	orr.w	r0, r0, #176	; 0xb0
  400544:	4c08      	ldr	r4, [pc, #32]	; (400568 <gfx_mono_ssd1306_put_byte+0x48>)
  400546:	47a0      	blx	r4
 */
static inline void ssd1306_set_column_address(uint8_t address)
{
	// Make sure the address is 7 bits
	address &= 0x7F;
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_MSB(address >> 4));
  400548:	f3c5 1002 	ubfx	r0, r5, #4, #3
  40054c:	f040 0010 	orr.w	r0, r0, #16
  400550:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_COL_ADD_SET_LSB(address & 0x0F));
  400552:	f005 000f 	and.w	r0, r5, #15
  400556:	47a0      	blx	r4
#endif

	ssd1306_set_page_address(page);
	ssd1306_set_column_address(column);

	ssd1306_write_data(data);
  400558:	4630      	mov	r0, r6
  40055a:	4b04      	ldr	r3, [pc, #16]	; (40056c <gfx_mono_ssd1306_put_byte+0x4c>)
  40055c:	4798      	blx	r3
  40055e:	bd70      	pop	{r4, r5, r6, pc}
  400560:	00400315 	.word	0x00400315
  400564:	00400305 	.word	0x00400305
  400568:	00400631 	.word	0x00400631
  40056c:	00400851 	.word	0x00400851

00400570 <gfx_mono_ssd1306_init>:
{
  400570:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
	gfx_mono_set_framebuffer(framebuffer);
  400574:	480d      	ldr	r0, [pc, #52]	; (4005ac <gfx_mono_ssd1306_init+0x3c>)
  400576:	4b0e      	ldr	r3, [pc, #56]	; (4005b0 <gfx_mono_ssd1306_init+0x40>)
  400578:	4798      	blx	r3
	ssd1306_init();
  40057a:	4b0e      	ldr	r3, [pc, #56]	; (4005b4 <gfx_mono_ssd1306_init+0x44>)
  40057c:	4798      	blx	r3
 */
static inline void ssd1306_set_display_start_line_address(uint8_t address)
{
	// Make sure address is 6 bits
	address &= 0x3F;
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(address));
  40057e:	2040      	movs	r0, #64	; 0x40
  400580:	4b0d      	ldr	r3, [pc, #52]	; (4005b8 <gfx_mono_ssd1306_init+0x48>)
  400582:	4798      	blx	r3
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  400584:	2500      	movs	r5, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400586:	f04f 0801 	mov.w	r8, #1
  40058a:	462f      	mov	r7, r5
  40058c:	4e0b      	ldr	r6, [pc, #44]	; (4005bc <gfx_mono_ssd1306_init+0x4c>)
{
  40058e:	2400      	movs	r4, #0
			gfx_mono_ssd1306_put_byte(page, column, 0x00, true);
  400590:	4643      	mov	r3, r8
  400592:	463a      	mov	r2, r7
  400594:	b2e1      	uxtb	r1, r4
  400596:	4628      	mov	r0, r5
  400598:	47b0      	blx	r6
  40059a:	3401      	adds	r4, #1
		for (column = 0; column < GFX_MONO_LCD_WIDTH; column++) {
  40059c:	2c80      	cmp	r4, #128	; 0x80
  40059e:	d1f7      	bne.n	400590 <gfx_mono_ssd1306_init+0x20>
	for (page = 0; page < GFX_MONO_LCD_PAGES; page++) {
  4005a0:	3501      	adds	r5, #1
  4005a2:	b2ed      	uxtb	r5, r5
  4005a4:	2d04      	cmp	r5, #4
  4005a6:	d1f2      	bne.n	40058e <gfx_mono_ssd1306_init+0x1e>
  4005a8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4005ac:	204009f0 	.word	0x204009f0
  4005b0:	004002f9 	.word	0x004002f9
  4005b4:	00400671 	.word	0x00400671
  4005b8:	00400631 	.word	0x00400631
  4005bc:	00400521 	.word	0x00400521

004005c0 <gfx_mono_ssd1306_draw_pixel>:
	if ((x > GFX_MONO_LCD_WIDTH - 1) || (y > GFX_MONO_LCD_HEIGHT - 1)) {
  4005c0:	09c3      	lsrs	r3, r0, #7
  4005c2:	d12a      	bne.n	40061a <gfx_mono_ssd1306_draw_pixel+0x5a>
  4005c4:	291f      	cmp	r1, #31
  4005c6:	d828      	bhi.n	40061a <gfx_mono_ssd1306_draw_pixel+0x5a>
{
  4005c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  4005cc:	4614      	mov	r4, r2
  4005ce:	4605      	mov	r5, r0
	page = y / GFX_MONO_LCD_PIXELS_PER_BYTE;
  4005d0:	08ce      	lsrs	r6, r1, #3
	pixel_mask = (1 << (y - (page * 8)));
  4005d2:	eba1 01c6 	sub.w	r1, r1, r6, lsl #3
  4005d6:	2201      	movs	r2, #1
  4005d8:	fa02 f701 	lsl.w	r7, r2, r1
  4005dc:	fa5f f887 	uxtb.w	r8, r7
\endcode
 */
uint8_t gfx_mono_ssd1306_get_byte(gfx_coord_t page, gfx_coord_t column)
{
#ifdef CONFIG_SSD1306_FRAMEBUFFER
	return gfx_mono_framebuffer_get_byte(page, column);
  4005e0:	4601      	mov	r1, r0
  4005e2:	4630      	mov	r0, r6
  4005e4:	4b0d      	ldr	r3, [pc, #52]	; (40061c <gfx_mono_ssd1306_draw_pixel+0x5c>)
  4005e6:	4798      	blx	r3
  4005e8:	4602      	mov	r2, r0
	switch (color) {
  4005ea:	2c01      	cmp	r4, #1
  4005ec:	d009      	beq.n	400602 <gfx_mono_ssd1306_draw_pixel+0x42>
  4005ee:	b164      	cbz	r4, 40060a <gfx_mono_ssd1306_draw_pixel+0x4a>
  4005f0:	2c02      	cmp	r4, #2
  4005f2:	d00e      	beq.n	400612 <gfx_mono_ssd1306_draw_pixel+0x52>
	gfx_mono_put_byte(page, x, pixel_value);
  4005f4:	2300      	movs	r3, #0
  4005f6:	4629      	mov	r1, r5
  4005f8:	4630      	mov	r0, r6
  4005fa:	4c09      	ldr	r4, [pc, #36]	; (400620 <gfx_mono_ssd1306_draw_pixel+0x60>)
  4005fc:	47a0      	blx	r4
  4005fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
		pixel_value |= pixel_mask;
  400602:	ea48 0200 	orr.w	r2, r8, r0
  400606:	b2d2      	uxtb	r2, r2
		break;
  400608:	e7f4      	b.n	4005f4 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value &= ~pixel_mask;
  40060a:	ea20 0207 	bic.w	r2, r0, r7
  40060e:	b2d2      	uxtb	r2, r2
		break;
  400610:	e7f0      	b.n	4005f4 <gfx_mono_ssd1306_draw_pixel+0x34>
		pixel_value ^= pixel_mask;
  400612:	ea88 0200 	eor.w	r2, r8, r0
  400616:	b2d2      	uxtb	r2, r2
		break;
  400618:	e7ec      	b.n	4005f4 <gfx_mono_ssd1306_draw_pixel+0x34>
  40061a:	4770      	bx	lr
  40061c:	00400315 	.word	0x00400315
  400620:	00400521 	.word	0x00400521

00400624 <gfx_mono_ssd1306_get_byte>:
{
  400624:	b508      	push	{r3, lr}
	return gfx_mono_framebuffer_get_byte(page, column);
  400626:	4b01      	ldr	r3, [pc, #4]	; (40062c <gfx_mono_ssd1306_get_byte+0x8>)
  400628:	4798      	blx	r3
	ssd1306_set_column_address(column);

	return ssd1306_read_data();

#endif
}
  40062a:	bd08      	pop	{r3, pc}
  40062c:	00400315 	.word	0x00400315

00400630 <ssd1306_write_command>:
 * data write function is called based on the selected interface.
 *
 * \param command the command to write
 */
void ssd1306_write_command(uint8_t command)
{
  400630:	b538      	push	{r3, r4, r5, lr}
  400632:	4605      	mov	r5, r0
	Pio *base = arch_ioport_pin_to_base(pin);

	if (level) {
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
	} else {
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  400634:	2208      	movs	r2, #8
  400636:	4b09      	ldr	r3, [pc, #36]	; (40065c <ssd1306_write_command+0x2c>)
  400638:	635a      	str	r2, [r3, #52]	; 0x34
	ioport_set_pin_level(SSD1306_DC_PIN, false);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  40063a:	4c09      	ldr	r4, [pc, #36]	; (400660 <ssd1306_write_command+0x30>)
  40063c:	2101      	movs	r1, #1
  40063e:	4620      	mov	r0, r4
  400640:	4b08      	ldr	r3, [pc, #32]	; (400664 <ssd1306_write_command+0x34>)
  400642:	4798      	blx	r3
	spi_write(SPI0, command, 1, 1);
  400644:	2301      	movs	r3, #1
  400646:	461a      	mov	r2, r3
  400648:	4629      	mov	r1, r5
  40064a:	4620      	mov	r0, r4
  40064c:	4c06      	ldr	r4, [pc, #24]	; (400668 <ssd1306_write_command+0x38>)
  40064e:	47a0      	blx	r4
	delay_us(10);
  400650:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400654:	4b05      	ldr	r3, [pc, #20]	; (40066c <ssd1306_write_command+0x3c>)
  400656:	4798      	blx	r3
  400658:	bd38      	pop	{r3, r4, r5, pc}
  40065a:	bf00      	nop
  40065c:	400e1000 	.word	0x400e1000
  400660:	40008000 	.word	0x40008000
  400664:	004001d9 	.word	0x004001d9
  400668:	004001ef 	.word	0x004001ef
  40066c:	20400001 	.word	0x20400001

00400670 <ssd1306_init>:
{
  400670:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400674:	4d66      	ldr	r5, [pc, #408]	; (400810 <ssd1306_init+0x1a0>)
  400676:	f44f 3600 	mov.w	r6, #131072	; 0x20000
  40067a:	612e      	str	r6, [r5, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  40067c:	f8c5 60a0 	str.w	r6, [r5, #160]	; 0xa0
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  400680:	4b64      	ldr	r3, [pc, #400]	; (400814 <ssd1306_init+0x1a4>)
  400682:	2708      	movs	r7, #8
  400684:	611f      	str	r7, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  400686:	f8c3 70a0 	str.w	r7, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  40068a:	666e      	str	r6, [r5, #100]	; 0x64
		base->PIO_PPDDR = mask;
  40068c:	f8c5 6090 	str.w	r6, [r5, #144]	; 0x90
		base->PIO_MDDR = mask;
  400690:	656e      	str	r6, [r5, #84]	; 0x54
		base->PIO_IFDR = mask;
  400692:	626e      	str	r6, [r5, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  400694:	f8c5 6080 	str.w	r6, [r5, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  400698:	6f2a      	ldr	r2, [r5, #112]	; 0x70
  40069a:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  40069e:	672a      	str	r2, [r5, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4006a0:	6f6a      	ldr	r2, [r5, #116]	; 0x74
  4006a2:	f422 3200 	bic.w	r2, r2, #131072	; 0x20000
  4006a6:	676a      	str	r2, [r5, #116]	; 0x74
		base->PIO_PUER = mask;
  4006a8:	665f      	str	r7, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4006aa:	f8c3 7090 	str.w	r7, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  4006ae:	655f      	str	r7, [r3, #84]	; 0x54
		base->PIO_IFDR = mask;
  4006b0:	625f      	str	r7, [r3, #36]	; 0x24
		base->PIO_IFSCDR = mask;
  4006b2:	f8c3 7080 	str.w	r7, [r3, #128]	; 0x80
		base->PIO_ABCDSR[0] &= ~mask;
  4006b6:	6f1a      	ldr	r2, [r3, #112]	; 0x70
  4006b8:	f022 0208 	bic.w	r2, r2, #8
  4006bc:	671a      	str	r2, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  4006be:	6f5a      	ldr	r2, [r3, #116]	; 0x74
  4006c0:	f022 0208 	bic.w	r2, r2, #8
  4006c4:	675a      	str	r2, [r3, #116]	; 0x74
	arch_ioport_port_to_base(port)->PIO_PER = mask;
  4006c6:	601f      	str	r7, [r3, #0]
  4006c8:	602e      	str	r6, [r5, #0]
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4006ca:	631f      	str	r7, [r3, #48]	; 0x30
  4006cc:	632e      	str	r6, [r5, #48]	; 0x30
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4006ce:	f8df 817c 	ldr.w	r8, [pc, #380]	; 40084c <ssd1306_init+0x1dc>
  4006d2:	2300      	movs	r3, #0
  4006d4:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  4006d8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4006dc:	4640      	mov	r0, r8
  4006de:	4c4e      	ldr	r4, [pc, #312]	; (400818 <ssd1306_init+0x1a8>)
  4006e0:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  4006e2:	2300      	movs	r3, #0
  4006e4:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  4006e8:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4006ec:	4640      	mov	r0, r8
  4006ee:	47a0      	blx	r4
	pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  4006f0:	2300      	movs	r3, #0
  4006f2:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  4006f6:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  4006fa:	4640      	mov	r0, r8
  4006fc:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CLK_MASK, PIO_DEFAULT);
  4006fe:	2300      	movs	r3, #0
  400700:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
  400704:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400708:	4640      	mov	r0, r8
  40070a:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_MOSI_MASK, PIO_DEFAULT);
  40070c:	2300      	movs	r3, #0
  40070e:	f44f 1200 	mov.w	r2, #2097152	; 0x200000
  400712:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400716:	4640      	mov	r0, r8
  400718:	47a0      	blx	r4
		pio_configure(PIOD, PIO_PERIPH_B, 1 << SPI_CS_MASK, PIO_DEFAULT);
  40071a:	2300      	movs	r3, #0
  40071c:	f04f 7200 	mov.w	r2, #33554432	; 0x2000000
  400720:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  400724:	4640      	mov	r0, r8
  400726:	47a0      	blx	r4
	p_spi->SPI_CR = SPI_CR_SPIDIS;
  400728:	4c3c      	ldr	r4, [pc, #240]	; (40081c <ssd1306_init+0x1ac>)
  40072a:	f04f 0902 	mov.w	r9, #2
  40072e:	f8c4 9000 	str.w	r9, [r4]
	p_spi->SPI_CR = SPI_CR_SWRST;
  400732:	f04f 0880 	mov.w	r8, #128	; 0x80
  400736:	f8c4 8000 	str.w	r8, [r4]
	p_spi->SPI_MR |= SPI_MR_MSTR;
  40073a:	6863      	ldr	r3, [r4, #4]
  40073c:	f043 0301 	orr.w	r3, r3, #1
  400740:	6063      	str	r3, [r4, #4]
		spi_configure_cs_behavior(SPI0, 1, SPI_CS_KEEP_LOW);
  400742:	463a      	mov	r2, r7
  400744:	2101      	movs	r1, #1
  400746:	4620      	mov	r0, r4
  400748:	4b35      	ldr	r3, [pc, #212]	; (400820 <ssd1306_init+0x1b0>)
  40074a:	4798      	blx	r3
		spi_set_clock_polarity(SPI0, 1, 0);
  40074c:	2200      	movs	r2, #0
  40074e:	2101      	movs	r1, #1
  400750:	4620      	mov	r0, r4
  400752:	4b34      	ldr	r3, [pc, #208]	; (400824 <ssd1306_init+0x1b4>)
  400754:	4798      	blx	r3
		spi_set_clock_phase(SPI0, 1, 0);
  400756:	2200      	movs	r2, #0
  400758:	2101      	movs	r1, #1
  40075a:	4620      	mov	r0, r4
  40075c:	4b32      	ldr	r3, [pc, #200]	; (400828 <ssd1306_init+0x1b8>)
  40075e:	4798      	blx	r3
	p_spi->SPI_MR &= (~SPI_MR_PS);
  400760:	6863      	ldr	r3, [r4, #4]
  400762:	f023 0302 	bic.w	r3, r3, #2
  400766:	6063      	str	r3, [r4, #4]
		spi_set_bits_per_transfer(SPI0, 1, SPI_CSR_BITS_8_BIT);
  400768:	2200      	movs	r2, #0
  40076a:	2101      	movs	r1, #1
  40076c:	4620      	mov	r0, r4
  40076e:	4b2f      	ldr	r3, [pc, #188]	; (40082c <ssd1306_init+0x1bc>)
  400770:	4798      	blx	r3
 *
 * \param p_spi Pointer to an SPI instance.
 */
static inline void spi_disable_loopback(Spi *p_spi)
{
	p_spi->SPI_MR &= (~SPI_MR_LLB);
  400772:	6863      	ldr	r3, [r4, #4]
  400774:	f023 0380 	bic.w	r3, r3, #128	; 0x80
  400778:	6063      	str	r3, [r4, #4]
	p_spi->SPI_MR |= SPI_MR_MODFDIS;
  40077a:	6863      	ldr	r3, [r4, #4]
  40077c:	f043 0310 	orr.w	r3, r3, #16
  400780:	6063      	str	r3, [r4, #4]
		int div = spi_calc_baudrate_div(2000000, sysclk_get_peripheral_hz());
  400782:	492b      	ldr	r1, [pc, #172]	; (400830 <ssd1306_init+0x1c0>)
  400784:	482b      	ldr	r0, [pc, #172]	; (400834 <ssd1306_init+0x1c4>)
  400786:	4b2c      	ldr	r3, [pc, #176]	; (400838 <ssd1306_init+0x1c8>)
  400788:	4798      	blx	r3
		spi_set_baudrate_div(SPI0,1, div);
  40078a:	b2c2      	uxtb	r2, r0
  40078c:	2101      	movs	r1, #1
  40078e:	4620      	mov	r0, r4
  400790:	4b2a      	ldr	r3, [pc, #168]	; (40083c <ssd1306_init+0x1cc>)
  400792:	4798      	blx	r3
		spi_enable_clock(SPI0);
  400794:	4620      	mov	r0, r4
  400796:	4b2a      	ldr	r3, [pc, #168]	; (400840 <ssd1306_init+0x1d0>)
  400798:	4798      	blx	r3
	p_spi->SPI_CR = SPI_CR_SPIEN;
  40079a:	2301      	movs	r3, #1
  40079c:	6023      	str	r3, [r4, #0]
		base->PIO_CODR = arch_ioport_pin_to_mask(pin);
  40079e:	636e      	str	r6, [r5, #52]	; 0x34
	delay_cycles(delay_10us); // At lest 10us
  4007a0:	f640 30b8 	movw	r0, #3000	; 0xbb8
  4007a4:	4c27      	ldr	r4, [pc, #156]	; (400844 <ssd1306_init+0x1d4>)
  4007a6:	47a0      	blx	r4
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4007a8:	632e      	str	r6, [r5, #48]	; 0x30
	delay_cycles(delay_10us); // At lest 10us
  4007aa:	f640 30b8 	movw	r0, #3000	; 0xbb8
  4007ae:	47a0      	blx	r4
  4007b0:	632e      	str	r6, [r5, #48]	; 0x30
	ssd1306_write_command(SSD1306_CMD_SET_MULTIPLEX_RATIO);
  4007b2:	20a8      	movs	r0, #168	; 0xa8
  4007b4:	4c24      	ldr	r4, [pc, #144]	; (400848 <ssd1306_init+0x1d8>)
  4007b6:	47a0      	blx	r4
	ssd1306_write_command(0x1F);
  4007b8:	201f      	movs	r0, #31
  4007ba:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_OFFSET);
  4007bc:	20d3      	movs	r0, #211	; 0xd3
  4007be:	47a0      	blx	r4
	ssd1306_write_command(0x00);
  4007c0:	2000      	movs	r0, #0
  4007c2:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_START_LINE(0x00));
  4007c4:	2040      	movs	r0, #64	; 0x40
  4007c6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_SEGMENT_RE_MAP_COL127_SEG0);
  4007c8:	20a1      	movs	r0, #161	; 0xa1
  4007ca:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_OUTPUT_SCAN_DOWN);
  4007cc:	20c8      	movs	r0, #200	; 0xc8
  4007ce:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_COM_PINS);
  4007d0:	20da      	movs	r0, #218	; 0xda
  4007d2:	47a0      	blx	r4
	ssd1306_write_command(0x02);
  4007d4:	4648      	mov	r0, r9
  4007d6:	47a0      	blx	r4
 *
 * \retval contrast the contrast value written to the OLED controller
 */
static inline uint8_t ssd1306_set_contrast(uint8_t contrast)
{
	ssd1306_write_command(SSD1306_CMD_SET_CONTRAST_CONTROL_FOR_BANK0);
  4007d8:	2081      	movs	r0, #129	; 0x81
  4007da:	47a0      	blx	r4
	ssd1306_write_command(contrast);
  4007dc:	208f      	movs	r0, #143	; 0x8f
  4007de:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_ENTIRE_DISPLAY_AND_GDDRAM_ON);
  4007e0:	20a4      	movs	r0, #164	; 0xa4
  4007e2:	47a0      	blx	r4
 * This function will disable invert on all pixels on the OLED
 *
 */
static inline void ssd1306_display_invert_disable(void)
{
	ssd1306_write_command(SSD1306_CMD_SET_NORMAL_DISPLAY);
  4007e4:	20a6      	movs	r0, #166	; 0xa6
  4007e6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_CLOCK_DIVIDE_RATIO);
  4007e8:	20d5      	movs	r0, #213	; 0xd5
  4007ea:	47a0      	blx	r4
	ssd1306_write_command(0x80);
  4007ec:	4640      	mov	r0, r8
  4007ee:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_CHARGE_PUMP_SETTING);
  4007f0:	208d      	movs	r0, #141	; 0x8d
  4007f2:	47a0      	blx	r4
	ssd1306_write_command(0x14);
  4007f4:	2014      	movs	r0, #20
  4007f6:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_VCOMH_DESELECT_LEVEL);
  4007f8:	20db      	movs	r0, #219	; 0xdb
  4007fa:	47a0      	blx	r4
	ssd1306_write_command(0x40); // Default => 0x20 (0.77*VCC)
  4007fc:	2040      	movs	r0, #64	; 0x40
  4007fe:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_PRE_CHARGE_PERIOD);
  400800:	20d9      	movs	r0, #217	; 0xd9
  400802:	47a0      	blx	r4
	ssd1306_write_command(0xF1);
  400804:	20f1      	movs	r0, #241	; 0xf1
  400806:	47a0      	blx	r4
	ssd1306_write_command(SSD1306_CMD_SET_DISPLAY_ON);
  400808:	20af      	movs	r0, #175	; 0xaf
  40080a:	47a0      	blx	r4
  40080c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400810:	400e1200 	.word	0x400e1200
  400814:	400e1000 	.word	0x400e1000
  400818:	00400b5d 	.word	0x00400b5d
  40081c:	40008000 	.word	0x40008000
  400820:	0040025f 	.word	0x0040025f
  400824:	00400223 	.word	0x00400223
  400828:	00400241 	.word	0x00400241
  40082c:	004002a5 	.word	0x004002a5
  400830:	08f0d180 	.word	0x08f0d180
  400834:	001e8480 	.word	0x001e8480
  400838:	004002b9 	.word	0x004002b9
  40083c:	004002cf 	.word	0x004002cf
  400840:	004001ad 	.word	0x004001ad
  400844:	20400001 	.word	0x20400001
  400848:	00400631 	.word	0x00400631
  40084c:	400e1400 	.word	0x400e1400

00400850 <ssd1306_write_data>:
 * data write function is called based on the selected interface.
 *
 * \param data the data to write
 */
void ssd1306_write_data(uint8_t data)
{
  400850:	b538      	push	{r3, r4, r5, lr}
  400852:	4605      	mov	r5, r0
  400854:	2208      	movs	r2, #8
  400856:	4b09      	ldr	r3, [pc, #36]	; (40087c <ssd1306_write_data+0x2c>)
  400858:	631a      	str	r2, [r3, #48]	; 0x30
	ioport_set_pin_level(SSD1306_DC_PIN, true);
	
	spi_set_peripheral_chip_select_value(SPI0, 1);
  40085a:	4c09      	ldr	r4, [pc, #36]	; (400880 <ssd1306_write_data+0x30>)
  40085c:	2101      	movs	r1, #1
  40085e:	4620      	mov	r0, r4
  400860:	4b08      	ldr	r3, [pc, #32]	; (400884 <ssd1306_write_data+0x34>)
  400862:	4798      	blx	r3
	spi_write(SPI0, data, 1, 1);
  400864:	2301      	movs	r3, #1
  400866:	461a      	mov	r2, r3
  400868:	4629      	mov	r1, r5
  40086a:	4620      	mov	r0, r4
  40086c:	4c06      	ldr	r4, [pc, #24]	; (400888 <ssd1306_write_data+0x38>)
  40086e:	47a0      	blx	r4
	delay_us(10);
  400870:	f44f 70fd 	mov.w	r0, #506	; 0x1fa
  400874:	4b05      	ldr	r3, [pc, #20]	; (40088c <ssd1306_write_data+0x3c>)
  400876:	4798      	blx	r3
  400878:	bd38      	pop	{r3, r4, r5, pc}
  40087a:	bf00      	nop
  40087c:	400e1000 	.word	0x400e1000
  400880:	40008000 	.word	0x40008000
  400884:	004001d9 	.word	0x004001d9
  400888:	004001ef 	.word	0x004001ef
  40088c:	20400001 	.word	0x20400001

00400890 <sysclk_init>:
	pmc_disable_udpck();
}
#endif // CONFIG_USBCLK_SOURCE

void sysclk_init(void)
{
  400890:	b510      	push	{r4, lr}
	struct pll_config pllcfg;

	/* Set flash wait state to max in case the below clock switching. */
	system_init_flash(CHIP_FREQ_CPU_MAX);
  400892:	4810      	ldr	r0, [pc, #64]	; (4008d4 <sysclk_init+0x44>)
  400894:	4b10      	ldr	r3, [pc, #64]	; (4008d8 <sysclk_init+0x48>)
  400896:	4798      	blx	r3
		pmc_switch_mainck_to_fastrc(CKGR_MOR_MOSCRCF_12_MHz);
		break;


	case OSC_MAINCK_XTAL:
		pmc_switch_mainck_to_xtal(PMC_OSC_XTAL,
  400898:	213e      	movs	r1, #62	; 0x3e
  40089a:	2000      	movs	r0, #0
  40089c:	4b0f      	ldr	r3, [pc, #60]	; (4008dc <sysclk_init+0x4c>)
  40089e:	4798      	blx	r3
	case OSC_MAINCK_4M_RC:
	case OSC_MAINCK_8M_RC:
	case OSC_MAINCK_12M_RC:
	case OSC_MAINCK_XTAL:
	case OSC_MAINCK_BYPASS:
		return pmc_osc_is_ready_mainck();
  4008a0:	4c0f      	ldr	r4, [pc, #60]	; (4008e0 <sysclk_init+0x50>)
  4008a2:	47a0      	blx	r4
 *
 * \param id A number identifying the oscillator to wait for.
 */
static inline void osc_wait_ready(uint8_t id)
{
	while (!osc_is_ready(id)) {
  4008a4:	2800      	cmp	r0, #0
  4008a6:	d0fc      	beq.n	4008a2 <sysclk_init+0x12>
static inline void pll_enable(const struct pll_config *p_cfg, uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
		pmc_disable_pllack(); // Always stop PLL first!
  4008a8:	4b0e      	ldr	r3, [pc, #56]	; (4008e4 <sysclk_init+0x54>)
  4008aa:	4798      	blx	r3
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | p_cfg->ctrl;
  4008ac:	4a0e      	ldr	r2, [pc, #56]	; (4008e8 <sysclk_init+0x58>)
  4008ae:	4b0f      	ldr	r3, [pc, #60]	; (4008ec <sysclk_init+0x5c>)
  4008b0:	629a      	str	r2, [r3, #40]	; 0x28
static inline uint32_t pll_is_locked(uint32_t ul_pll_id)
{
	Assert(ul_pll_id < NR_PLLS);

	if (ul_pll_id == PLLA_ID) {
	return pmc_is_locked_pllack();
  4008b2:	4c0f      	ldr	r4, [pc, #60]	; (4008f0 <sysclk_init+0x60>)
  4008b4:	47a0      	blx	r4
 */
static inline int pll_wait_for_lock(unsigned int pll_id)
{
	Assert(pll_id < NR_PLLS);

	while (!pll_is_locked(pll_id)) {
  4008b6:	2800      	cmp	r0, #0
  4008b8:	d0fc      	beq.n	4008b4 <sysclk_init+0x24>
	else if (CONFIG_SYSCLK_SOURCE == SYSCLK_SRC_PLLACK) {
		pll_enable_source(CONFIG_PLL0_SOURCE);
		pll_config_defaults(&pllcfg, 0);
		pll_enable(&pllcfg, 0);
		pll_wait_for_lock(0);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
  4008ba:	2002      	movs	r0, #2
  4008bc:	4b0d      	ldr	r3, [pc, #52]	; (4008f4 <sysclk_init+0x64>)
  4008be:	4798      	blx	r3
		pmc_switch_mck_to_pllack(CONFIG_SYSCLK_PRES);
  4008c0:	2000      	movs	r0, #0
  4008c2:	4b0d      	ldr	r3, [pc, #52]	; (4008f8 <sysclk_init+0x68>)
  4008c4:	4798      	blx	r3
		pll_wait_for_lock(1);
		pmc_mck_set_division(CONFIG_SYSCLK_DIV);
		pmc_switch_mck_to_upllck(CONFIG_SYSCLK_PRES);
	}
	/* Update the SystemFrequency variable */
	SystemCoreClockUpdate();
  4008c6:	4b0d      	ldr	r3, [pc, #52]	; (4008fc <sysclk_init+0x6c>)
  4008c8:	4798      	blx	r3

	/* Set a flash wait state depending on the new cpu frequency */
	system_init_flash(sysclk_get_cpu_hz());
  4008ca:	4802      	ldr	r0, [pc, #8]	; (4008d4 <sysclk_init+0x44>)
  4008cc:	4b02      	ldr	r3, [pc, #8]	; (4008d8 <sysclk_init+0x48>)
  4008ce:	4798      	blx	r3
  4008d0:	bd10      	pop	{r4, pc}
  4008d2:	bf00      	nop
  4008d4:	11e1a300 	.word	0x11e1a300
  4008d8:	00401361 	.word	0x00401361
  4008dc:	00400ded 	.word	0x00400ded
  4008e0:	00400e41 	.word	0x00400e41
  4008e4:	00400e51 	.word	0x00400e51
  4008e8:	20183f01 	.word	0x20183f01
  4008ec:	400e0600 	.word	0x400e0600
  4008f0:	00400e61 	.word	0x00400e61
  4008f4:	00400d51 	.word	0x00400d51
  4008f8:	00400d89 	.word	0x00400d89
  4008fc:	00401255 	.word	0x00401255

00400900 <board_init>:
	__ISB();
}
#endif

void board_init(void)
{
  400900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#ifndef CONF_BOARD_KEEP_WATCHDOG_AT_INIT
	/* Disable the watchdog */
	WDT->WDT_MR = WDT_MR_WDDIS;
  400902:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  400906:	4b48      	ldr	r3, [pc, #288]	; (400a28 <board_init+0x128>)
  400908:	605a      	str	r2, [r3, #4]
    This function acts as a special kind of Data Memory Barrier.
    It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb");
  40090a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40090e:	f3bf 8f6f 	isb	sy
__STATIC_INLINE void SCB_EnableICache(void)
{
  #if (__ICACHE_PRESENT == 1)
    __DSB();
    __ISB();
    SCB->ICIALLU = 0;                       // invalidate I-Cache
  400912:	4b46      	ldr	r3, [pc, #280]	; (400a2c <board_init+0x12c>)
  400914:	2200      	movs	r2, #0
  400916:	f8c3 2250 	str.w	r2, [r3, #592]	; 0x250
    SCB->CCR |=  SCB_CCR_IC_Msk;            // enable I-Cache
  40091a:	695a      	ldr	r2, [r3, #20]
  40091c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
  400920:	615a      	str	r2, [r3, #20]
  __ASM volatile ("dsb");
  400922:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400926:	f3bf 8f6f 	isb	sy
{
  #if (__DCACHE_PRESENT == 1)
    uint32_t ccsidr, sshift, wshift, sw;
    uint32_t sets, ways;

    ccsidr  = SCB->CCSIDR;
  40092a:	f8d3 7080 	ldr.w	r7, [r3, #128]	; 0x80
    sets    = CCSIDR_SETS(ccsidr);
  40092e:	f3c7 364e 	ubfx	r6, r7, #13, #15
    sshift  = CCSIDR_LSSHIFT(ccsidr) + 4;
  400932:	f007 0007 	and.w	r0, r7, #7
  400936:	3004      	adds	r0, #4
    ways    = CCSIDR_WAYS(ccsidr);
  400938:	f3c7 07c9 	ubfx	r7, r7, #3, #10
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint8_t __CLZ(uint32_t value)
{
  uint32_t result;

  __ASM volatile ("clz %0, %1" : "=r" (result) : "r" (value) );
  40093c:	fab7 fe87 	clz	lr, r7
    wshift  = __CLZ(ways) & 0x1f;
  400940:	f00e 0e1f 	and.w	lr, lr, #31
  __ASM volatile ("dsb");
  400944:	f3bf 8f4f 	dsb	sy
  400948:	f04f 34ff 	mov.w	r4, #4294967295
  40094c:	fa04 fc00 	lsl.w	ip, r4, r0
  400950:	fa06 f000 	lsl.w	r0, r6, r0
  400954:	fa04 f40e 	lsl.w	r4, r4, lr
  400958:	fa07 fe0e 	lsl.w	lr, r7, lr

    do {                                    // invalidate D-Cache
         int32_t tmpways = ways;
         do {
              sw = ((tmpways << wshift) | (sets << sshift));
              SCB->DCISW = sw;
  40095c:	461d      	mov	r5, r3
         int32_t tmpways = ways;
  40095e:	463a      	mov	r2, r7
  400960:	4673      	mov	r3, lr
              sw = ((tmpways << wshift) | (sets << sshift));
  400962:	ea40 0103 	orr.w	r1, r0, r3
              SCB->DCISW = sw;
  400966:	f8c5 1260 	str.w	r1, [r5, #608]	; 0x260
            } while(tmpways--);
  40096a:	3a01      	subs	r2, #1
  40096c:	4423      	add	r3, r4
  40096e:	f1b2 3fff 	cmp.w	r2, #4294967295
  400972:	d1f6      	bne.n	400962 <board_init+0x62>
        } while(sets--);
  400974:	3e01      	subs	r6, #1
  400976:	4460      	add	r0, ip
  400978:	f1b6 3fff 	cmp.w	r6, #4294967295
  40097c:	d1ef      	bne.n	40095e <board_init+0x5e>
  40097e:	f3bf 8f4f 	dsb	sy
    __DSB();

    SCB->CCR |=  SCB_CCR_DC_Msk;            // enable D-Cache
  400982:	4b2a      	ldr	r3, [pc, #168]	; (400a2c <board_init+0x12c>)
  400984:	695a      	ldr	r2, [r3, #20]
  400986:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
  40098a:	615a      	str	r2, [r3, #20]
  40098c:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  400990:	f3bf 8f6f 	isb	sy
		*dst++ = *src++;
	}
#endif
#else
	/* TCM Configuration */
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  400994:	4a26      	ldr	r2, [pc, #152]	; (400a30 <board_init+0x130>)
  400996:	4927      	ldr	r1, [pc, #156]	; (400a34 <board_init+0x134>)
  400998:	6051      	str	r1, [r2, #4]
					| EEFC_FCR_FARG(8));
	EFC->EEFC_FCR = (EEFC_FCR_FKEY_PASSWD | EEFC_FCR_FCMD_CGPB 
  40099a:	f5a1 7180 	sub.w	r1, r1, #256	; 0x100
  40099e:	6051      	str	r1, [r2, #4]
  __ASM volatile ("dsb");
  4009a0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009a4:	f3bf 8f6f 	isb	sy
	SCB->ITCMCR &= ~(uint32_t)(1UL);
  4009a8:	f8d3 2290 	ldr.w	r2, [r3, #656]	; 0x290
  4009ac:	f022 0201 	bic.w	r2, r2, #1
  4009b0:	f8c3 2290 	str.w	r2, [r3, #656]	; 0x290
	SCB->DTCMCR &= ~(uint32_t)SCB_DTCMCR_EN_Msk;
  4009b4:	f8d3 2294 	ldr.w	r2, [r3, #660]	; 0x294
  4009b8:	f022 0201 	bic.w	r2, r2, #1
  4009bc:	f8c3 2294 	str.w	r2, [r3, #660]	; 0x294
  __ASM volatile ("dsb");
  4009c0:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  4009c4:	f3bf 8f6f 	isb	sy
  4009c8:	200a      	movs	r0, #10
  4009ca:	4c1b      	ldr	r4, [pc, #108]	; (400a38 <board_init+0x138>)
  4009cc:	47a0      	blx	r4
  4009ce:	200b      	movs	r0, #11
  4009d0:	47a0      	blx	r4
  4009d2:	200c      	movs	r0, #12
  4009d4:	47a0      	blx	r4
  4009d6:	2010      	movs	r0, #16
  4009d8:	47a0      	blx	r4
  4009da:	2011      	movs	r0, #17
  4009dc:	47a0      	blx	r4
		base->PIO_OER = arch_ioport_pin_to_mask(pin);
  4009de:	4b17      	ldr	r3, [pc, #92]	; (400a3c <board_init+0x13c>)
  4009e0:	f44f 7280 	mov.w	r2, #256	; 0x100
  4009e4:	611a      	str	r2, [r3, #16]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4009e6:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_SODR = arch_ioport_pin_to_mask(pin);
  4009ea:	631a      	str	r2, [r3, #48]	; 0x30
		base->PIO_ODR = arch_ioport_pin_to_mask(pin);
  4009ec:	f5a3 6380 	sub.w	r3, r3, #1024	; 0x400
  4009f0:	f44f 6200 	mov.w	r2, #2048	; 0x800
  4009f4:	615a      	str	r2, [r3, #20]
	base->PIO_OWER = arch_ioport_pin_to_mask(pin);
  4009f6:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
		base->PIO_PUER = mask;
  4009fa:	665a      	str	r2, [r3, #100]	; 0x64
		base->PIO_PPDDR = mask;
  4009fc:	f8c3 2090 	str.w	r2, [r3, #144]	; 0x90
		base->PIO_MDDR = mask;
  400a00:	655a      	str	r2, [r3, #84]	; 0x54
		base->PIO_IFER = mask;
  400a02:	621a      	str	r2, [r3, #32]
		base->PIO_IFSCER = mask;
  400a04:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
		base->PIO_ABCDSR[0] &= ~mask;
  400a08:	6f19      	ldr	r1, [r3, #112]	; 0x70
  400a0a:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400a0e:	6719      	str	r1, [r3, #112]	; 0x70
		base->PIO_ABCDSR[1] &= ~mask;
  400a10:	6f59      	ldr	r1, [r3, #116]	; 0x74
  400a12:	f421 6100 	bic.w	r1, r1, #2048	; 0x800
  400a16:	6759      	str	r1, [r3, #116]	; 0x74
	case IOPORT_SENSE_FALLING:
		base->PIO_ESR = mask;
		base->PIO_FELLSR = mask;
		break;
	case IOPORT_SENSE_RISING:
		base->PIO_ESR = mask;
  400a18:	f8c3 20c0 	str.w	r2, [r3, #192]	; 0xc0
		base->PIO_REHLSR = mask;
  400a1c:	f8c3 20d4 	str.w	r2, [r3, #212]	; 0xd4
		break;
	default:
		base->PIO_AIMDR = mask;
		return;
	}
	base->PIO_AIMER = mask;
  400a20:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
  400a24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400a26:	bf00      	nop
  400a28:	400e1850 	.word	0x400e1850
  400a2c:	e000ed00 	.word	0xe000ed00
  400a30:	400e0c00 	.word	0x400e0c00
  400a34:	5a00080c 	.word	0x5a00080c
  400a38:	00400e71 	.word	0x00400e71
  400a3c:	400e1200 	.word	0x400e1200

00400a40 <pio_pull_up>:
 */
void pio_pull_up(Pio *p_pio, const uint32_t ul_mask,
		const uint32_t ul_pull_up_enable)
{
	/* Enable the pull-up(s) if necessary */
	if (ul_pull_up_enable) {
  400a40:	b90a      	cbnz	r2, 400a46 <pio_pull_up+0x6>
		p_pio->PIO_PUER = ul_mask;
	} else {
		p_pio->PIO_PUDR = ul_mask;
  400a42:	6601      	str	r1, [r0, #96]	; 0x60
  400a44:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400a46:	6641      	str	r1, [r0, #100]	; 0x64
  400a48:	4770      	bx	lr

00400a4a <pio_set>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_set(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_SODR = ul_mask;
  400a4a:	6301      	str	r1, [r0, #48]	; 0x30
  400a4c:	4770      	bx	lr

00400a4e <pio_clear>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Bitmask of one or more pin(s) to configure.
 */
void pio_clear(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_CODR = ul_mask;
  400a4e:	6341      	str	r1, [r0, #52]	; 0x34
  400a50:	4770      	bx	lr

00400a52 <pio_get>:
uint32_t pio_get(Pio *p_pio, const pio_type_t ul_type,
		const uint32_t ul_mask)
{
	uint32_t ul_reg;

	if ((ul_type == PIO_OUTPUT_0) || (ul_type == PIO_OUTPUT_1)) {
  400a52:	f021 6100 	bic.w	r1, r1, #134217728	; 0x8000000
  400a56:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400a5a:	d105      	bne.n	400a68 <pio_get+0x16>
		ul_reg = p_pio->PIO_ODSR;
  400a5c:	6b83      	ldr	r3, [r0, #56]	; 0x38
	} else {
		ul_reg = p_pio->PIO_PDSR;
	}

	if ((ul_reg & ul_mask) == 0) {
  400a5e:	4213      	tst	r3, r2
		return 0;
	} else {
		return 1;
	}
}
  400a60:	bf14      	ite	ne
  400a62:	2001      	movne	r0, #1
  400a64:	2000      	moveq	r0, #0
  400a66:	4770      	bx	lr
		ul_reg = p_pio->PIO_PDSR;
  400a68:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
  400a6a:	e7f8      	b.n	400a5e <pio_get+0xc>

00400a6c <pio_set_peripheral>:
		const uint32_t ul_mask)
{
	uint32_t ul_sr;

	/* Disable interrupts on the pin(s) */
	p_pio->PIO_IDR = ul_mask;
  400a6c:	6442      	str	r2, [r0, #68]	; 0x44

#if (SAM3S || SAM3N || SAM4S || SAM4E || SAM4N || SAM4C || SAMG || SAM4CP || SAM4CM || SAMV71 || SAMV70 || SAME70 || SAMS70)
	switch (ul_type) {
  400a6e:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400a72:	d03a      	beq.n	400aea <pio_set_peripheral+0x7e>
  400a74:	d813      	bhi.n	400a9e <pio_set_peripheral+0x32>
  400a76:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400a7a:	d025      	beq.n	400ac8 <pio_set_peripheral+0x5c>
  400a7c:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400a80:	d10a      	bne.n	400a98 <pio_set_peripheral+0x2c>

		ul_sr = p_pio->PIO_ABCDSR[1];
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
		break;
	case PIO_PERIPH_B:
		ul_sr = p_pio->PIO_ABCDSR[0];
  400a82:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400a84:	4313      	orrs	r3, r2
  400a86:	6703      	str	r3, [r0, #112]	; 0x70

		ul_sr = p_pio->PIO_ABCDSR[1];
  400a88:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400a8a:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400a8c:	400b      	ands	r3, r1
  400a8e:	ea23 0302 	bic.w	r3, r3, r2
  400a92:	6743      	str	r3, [r0, #116]	; 0x74
#else
#error "Unsupported device"
#endif

	/* Remove the pins from under the control of PIO */
	p_pio->PIO_PDR = ul_mask;
  400a94:	6042      	str	r2, [r0, #4]
  400a96:	4770      	bx	lr
	switch (ul_type) {
  400a98:	2900      	cmp	r1, #0
  400a9a:	d1fb      	bne.n	400a94 <pio_set_peripheral+0x28>
  400a9c:	4770      	bx	lr
  400a9e:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400aa2:	d021      	beq.n	400ae8 <pio_set_peripheral+0x7c>
  400aa4:	d809      	bhi.n	400aba <pio_set_peripheral+0x4e>
  400aa6:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400aaa:	d1f3      	bne.n	400a94 <pio_set_peripheral+0x28>
		ul_sr = p_pio->PIO_ABCDSR[0];
  400aac:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] = (ul_mask | ul_sr);
  400aae:	4313      	orrs	r3, r2
  400ab0:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400ab2:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400ab4:	4313      	orrs	r3, r2
  400ab6:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400ab8:	e7ec      	b.n	400a94 <pio_set_peripheral+0x28>
	switch (ul_type) {
  400aba:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400abe:	d013      	beq.n	400ae8 <pio_set_peripheral+0x7c>
  400ac0:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400ac4:	d010      	beq.n	400ae8 <pio_set_peripheral+0x7c>
  400ac6:	e7e5      	b.n	400a94 <pio_set_peripheral+0x28>
{
  400ac8:	b410      	push	{r4}
		ul_sr = p_pio->PIO_ABCDSR[0];
  400aca:	6f01      	ldr	r1, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400acc:	6f04      	ldr	r4, [r0, #112]	; 0x70
  400ace:	43d3      	mvns	r3, r2
  400ad0:	4021      	ands	r1, r4
  400ad2:	461c      	mov	r4, r3
  400ad4:	4019      	ands	r1, r3
  400ad6:	6701      	str	r1, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400ad8:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] &= (~ul_mask & ul_sr);
  400ada:	6f41      	ldr	r1, [r0, #116]	; 0x74
  400adc:	400b      	ands	r3, r1
  400ade:	4023      	ands	r3, r4
  400ae0:	6743      	str	r3, [r0, #116]	; 0x74
	p_pio->PIO_PDR = ul_mask;
  400ae2:	6042      	str	r2, [r0, #4]
}
  400ae4:	f85d 4b04 	ldr.w	r4, [sp], #4
  400ae8:	4770      	bx	lr
		ul_sr = p_pio->PIO_ABCDSR[0];
  400aea:	6f03      	ldr	r3, [r0, #112]	; 0x70
		p_pio->PIO_ABCDSR[0] &= (~ul_mask & ul_sr);
  400aec:	6f01      	ldr	r1, [r0, #112]	; 0x70
  400aee:	400b      	ands	r3, r1
  400af0:	ea23 0302 	bic.w	r3, r3, r2
  400af4:	6703      	str	r3, [r0, #112]	; 0x70
		ul_sr = p_pio->PIO_ABCDSR[1];
  400af6:	6f43      	ldr	r3, [r0, #116]	; 0x74
		p_pio->PIO_ABCDSR[1] = (ul_mask | ul_sr);
  400af8:	4313      	orrs	r3, r2
  400afa:	6743      	str	r3, [r0, #116]	; 0x74
		break;
  400afc:	e7ca      	b.n	400a94 <pio_set_peripheral+0x28>

00400afe <pio_set_input>:
 * \param p_pio Pointer to a PIO instance.
 * \param ul_mask Interrupt sources bit map.
 */
void pio_disable_interrupt(Pio *p_pio, const uint32_t ul_mask)
{
	p_pio->PIO_IDR = ul_mask;
  400afe:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400b00:	f012 0f01 	tst.w	r2, #1
  400b04:	d10d      	bne.n	400b22 <pio_set_input+0x24>
		p_pio->PIO_PUDR = ul_mask;
  400b06:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_attribute & (PIO_DEGLITCH | PIO_DEBOUNCE)) {
  400b08:	f012 0f0a 	tst.w	r2, #10
  400b0c:	d00b      	beq.n	400b26 <pio_set_input+0x28>
		p_pio->PIO_IFER = ul_mask;
  400b0e:	6201      	str	r1, [r0, #32]
	if (ul_attribute & PIO_DEGLITCH) {
  400b10:	f012 0f02 	tst.w	r2, #2
  400b14:	d109      	bne.n	400b2a <pio_set_input+0x2c>
		if (ul_attribute & PIO_DEBOUNCE) {
  400b16:	f012 0f08 	tst.w	r2, #8
  400b1a:	d008      	beq.n	400b2e <pio_set_input+0x30>
			p_pio->PIO_IFSCER = ul_mask;
  400b1c:	f8c0 1084 	str.w	r1, [r0, #132]	; 0x84
  400b20:	e005      	b.n	400b2e <pio_set_input+0x30>
		p_pio->PIO_PUER = ul_mask;
  400b22:	6641      	str	r1, [r0, #100]	; 0x64
  400b24:	e7f0      	b.n	400b08 <pio_set_input+0xa>
		p_pio->PIO_IFDR = ul_mask;
  400b26:	6241      	str	r1, [r0, #36]	; 0x24
  400b28:	e7f2      	b.n	400b10 <pio_set_input+0x12>
		p_pio->PIO_IFSCDR = ul_mask;
  400b2a:	f8c0 1080 	str.w	r1, [r0, #128]	; 0x80
	p_pio->PIO_ODR = ul_mask;
  400b2e:	6141      	str	r1, [r0, #20]
	p_pio->PIO_PER = ul_mask;
  400b30:	6001      	str	r1, [r0, #0]
  400b32:	4770      	bx	lr

00400b34 <pio_set_output>:
{
  400b34:	b410      	push	{r4}
  400b36:	9c01      	ldr	r4, [sp, #4]
	p_pio->PIO_IDR = ul_mask;
  400b38:	6441      	str	r1, [r0, #68]	; 0x44
	if (ul_pull_up_enable) {
  400b3a:	b94c      	cbnz	r4, 400b50 <pio_set_output+0x1c>
		p_pio->PIO_PUDR = ul_mask;
  400b3c:	6601      	str	r1, [r0, #96]	; 0x60
	if (ul_multidrive_enable) {
  400b3e:	b14b      	cbz	r3, 400b54 <pio_set_output+0x20>
		p_pio->PIO_MDER = ul_mask;
  400b40:	6501      	str	r1, [r0, #80]	; 0x50
	if (ul_default_level) {
  400b42:	b94a      	cbnz	r2, 400b58 <pio_set_output+0x24>
		p_pio->PIO_CODR = ul_mask;
  400b44:	6341      	str	r1, [r0, #52]	; 0x34
	p_pio->PIO_OER = ul_mask;
  400b46:	6101      	str	r1, [r0, #16]
	p_pio->PIO_PER = ul_mask;
  400b48:	6001      	str	r1, [r0, #0]
}
  400b4a:	f85d 4b04 	ldr.w	r4, [sp], #4
  400b4e:	4770      	bx	lr
		p_pio->PIO_PUER = ul_mask;
  400b50:	6641      	str	r1, [r0, #100]	; 0x64
  400b52:	e7f4      	b.n	400b3e <pio_set_output+0xa>
		p_pio->PIO_MDDR = ul_mask;
  400b54:	6541      	str	r1, [r0, #84]	; 0x54
  400b56:	e7f4      	b.n	400b42 <pio_set_output+0xe>
		p_pio->PIO_SODR = ul_mask;
  400b58:	6301      	str	r1, [r0, #48]	; 0x30
  400b5a:	e7f4      	b.n	400b46 <pio_set_output+0x12>

00400b5c <pio_configure>:
{
  400b5c:	b570      	push	{r4, r5, r6, lr}
  400b5e:	b082      	sub	sp, #8
  400b60:	4605      	mov	r5, r0
  400b62:	4616      	mov	r6, r2
  400b64:	461c      	mov	r4, r3
	switch (ul_type) {
  400b66:	f1b1 5f00 	cmp.w	r1, #536870912	; 0x20000000
  400b6a:	d014      	beq.n	400b96 <pio_configure+0x3a>
  400b6c:	d90a      	bls.n	400b84 <pio_configure+0x28>
  400b6e:	f1b1 5f40 	cmp.w	r1, #805306368	; 0x30000000
  400b72:	d024      	beq.n	400bbe <pio_configure+0x62>
  400b74:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400b78:	d021      	beq.n	400bbe <pio_configure+0x62>
  400b7a:	f1b1 5f20 	cmp.w	r1, #671088640	; 0x28000000
  400b7e:	d017      	beq.n	400bb0 <pio_configure+0x54>
		return 0;
  400b80:	2000      	movs	r0, #0
  400b82:	e01a      	b.n	400bba <pio_configure+0x5e>
	switch (ul_type) {
  400b84:	f1b1 5f80 	cmp.w	r1, #268435456	; 0x10000000
  400b88:	d005      	beq.n	400b96 <pio_configure+0x3a>
  400b8a:	f1b1 5fc0 	cmp.w	r1, #402653184	; 0x18000000
  400b8e:	d002      	beq.n	400b96 <pio_configure+0x3a>
  400b90:	f1b1 6f00 	cmp.w	r1, #134217728	; 0x8000000
  400b94:	d1f4      	bne.n	400b80 <pio_configure+0x24>
		pio_set_peripheral(p_pio, ul_type, ul_mask);
  400b96:	4632      	mov	r2, r6
  400b98:	4628      	mov	r0, r5
  400b9a:	4b11      	ldr	r3, [pc, #68]	; (400be0 <pio_configure+0x84>)
  400b9c:	4798      	blx	r3
	if (ul_pull_up_enable) {
  400b9e:	f014 0f01 	tst.w	r4, #1
  400ba2:	d102      	bne.n	400baa <pio_configure+0x4e>
		p_pio->PIO_PUDR = ul_mask;
  400ba4:	662e      	str	r6, [r5, #96]	; 0x60
	return 1;
  400ba6:	2001      	movs	r0, #1
  400ba8:	e007      	b.n	400bba <pio_configure+0x5e>
		p_pio->PIO_PUER = ul_mask;
  400baa:	666e      	str	r6, [r5, #100]	; 0x64
	return 1;
  400bac:	2001      	movs	r0, #1
  400bae:	e004      	b.n	400bba <pio_configure+0x5e>
		pio_set_input(p_pio, ul_mask, ul_attribute);
  400bb0:	461a      	mov	r2, r3
  400bb2:	4631      	mov	r1, r6
  400bb4:	4b0b      	ldr	r3, [pc, #44]	; (400be4 <pio_configure+0x88>)
  400bb6:	4798      	blx	r3
	return 1;
  400bb8:	2001      	movs	r0, #1
}
  400bba:	b002      	add	sp, #8
  400bbc:	bd70      	pop	{r4, r5, r6, pc}
		pio_set_output(p_pio, ul_mask, (ul_type == PIO_OUTPUT_1),
  400bbe:	f004 0301 	and.w	r3, r4, #1
  400bc2:	9300      	str	r3, [sp, #0]
  400bc4:	f3c4 0380 	ubfx	r3, r4, #2, #1
  400bc8:	f1b1 5f60 	cmp.w	r1, #939524096	; 0x38000000
  400bcc:	bf14      	ite	ne
  400bce:	2200      	movne	r2, #0
  400bd0:	2201      	moveq	r2, #1
  400bd2:	4631      	mov	r1, r6
  400bd4:	4628      	mov	r0, r5
  400bd6:	4c04      	ldr	r4, [pc, #16]	; (400be8 <pio_configure+0x8c>)
  400bd8:	47a0      	blx	r4
	return 1;
  400bda:	2001      	movs	r0, #1
		break;
  400bdc:	e7ed      	b.n	400bba <pio_configure+0x5e>
  400bde:	bf00      	nop
  400be0:	00400a6d 	.word	0x00400a6d
  400be4:	00400aff 	.word	0x00400aff
  400be8:	00400b35 	.word	0x00400b35

00400bec <pio_configure_interrupt>:
	if (ul_attr & PIO_IT_AIME) {
  400bec:	f012 0f10 	tst.w	r2, #16
  400bf0:	d012      	beq.n	400c18 <pio_configure_interrupt+0x2c>
		p_pio->PIO_AIMER = ul_mask;
  400bf2:	f8c0 10b0 	str.w	r1, [r0, #176]	; 0xb0
		if (ul_attr & PIO_IT_RE_OR_HL) {
  400bf6:	f012 0f20 	tst.w	r2, #32
  400bfa:	d007      	beq.n	400c0c <pio_configure_interrupt+0x20>
			p_pio->PIO_REHLSR = ul_mask;
  400bfc:	f8c0 10d4 	str.w	r1, [r0, #212]	; 0xd4
		if (ul_attr & PIO_IT_EDGE) {
  400c00:	f012 0f40 	tst.w	r2, #64	; 0x40
  400c04:	d005      	beq.n	400c12 <pio_configure_interrupt+0x26>
			p_pio->PIO_ESR = ul_mask;
  400c06:	f8c0 10c0 	str.w	r1, [r0, #192]	; 0xc0
  400c0a:	4770      	bx	lr
			p_pio->PIO_FELLSR = ul_mask;
  400c0c:	f8c0 10d0 	str.w	r1, [r0, #208]	; 0xd0
  400c10:	e7f6      	b.n	400c00 <pio_configure_interrupt+0x14>
			p_pio->PIO_LSR = ul_mask;
  400c12:	f8c0 10c4 	str.w	r1, [r0, #196]	; 0xc4
  400c16:	4770      	bx	lr
		p_pio->PIO_AIMDR = ul_mask;
  400c18:	f8c0 10b4 	str.w	r1, [r0, #180]	; 0xb4
  400c1c:	4770      	bx	lr

00400c1e <pio_enable_interrupt>:
	p_pio->PIO_IER = ul_mask;
  400c1e:	6401      	str	r1, [r0, #64]	; 0x40
  400c20:	4770      	bx	lr

00400c22 <pio_get_interrupt_status>:
 *
 * \return The interrupt status value.
 */
uint32_t pio_get_interrupt_status(const Pio *p_pio)
{
	return p_pio->PIO_ISR;
  400c22:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
}
  400c24:	4770      	bx	lr

00400c26 <pio_get_interrupt_mask>:
 *
 * \return The interrupt mask value.
 */
uint32_t pio_get_interrupt_mask(const Pio *p_pio)
{
	return p_pio->PIO_IMR;
  400c26:	6c80      	ldr	r0, [r0, #72]	; 0x48
}
  400c28:	4770      	bx	lr
	...

00400c2c <pio_handler_process>:
 *
 * \param p_pio PIO controller base address.
 * \param ul_id PIO controller ID.
 */
void pio_handler_process(Pio *p_pio, uint32_t ul_id)
{
  400c2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  400c30:	4604      	mov	r4, r0
  400c32:	4688      	mov	r8, r1
	uint32_t status;
	uint32_t i;

	/* Read PIO controller status */
	status = pio_get_interrupt_status(p_pio);
  400c34:	4b0e      	ldr	r3, [pc, #56]	; (400c70 <pio_handler_process+0x44>)
  400c36:	4798      	blx	r3
  400c38:	4605      	mov	r5, r0
	status &= pio_get_interrupt_mask(p_pio);
  400c3a:	4620      	mov	r0, r4
  400c3c:	4b0d      	ldr	r3, [pc, #52]	; (400c74 <pio_handler_process+0x48>)
  400c3e:	4798      	blx	r3

	/* Check pending events */
	if (status != 0) {
  400c40:	4005      	ands	r5, r0
  400c42:	d013      	beq.n	400c6c <pio_handler_process+0x40>
  400c44:	4c0c      	ldr	r4, [pc, #48]	; (400c78 <pio_handler_process+0x4c>)
  400c46:	f104 0660 	add.w	r6, r4, #96	; 0x60
  400c4a:	e003      	b.n	400c54 <pio_handler_process+0x28>
							gs_interrupt_sources[i].mask);
					status &= ~(gs_interrupt_sources[i].mask);
				}
			}
			i++;
			if (i >= MAX_INTERRUPT_SOURCES) {
  400c4c:	42b4      	cmp	r4, r6
  400c4e:	d00d      	beq.n	400c6c <pio_handler_process+0x40>
  400c50:	3410      	adds	r4, #16
		while (status != 0) {
  400c52:	b15d      	cbz	r5, 400c6c <pio_handler_process+0x40>
			if (gs_interrupt_sources[i].id == ul_id) {
  400c54:	6820      	ldr	r0, [r4, #0]
  400c56:	4540      	cmp	r0, r8
  400c58:	d1f8      	bne.n	400c4c <pio_handler_process+0x20>
				if ((status & gs_interrupt_sources[i].mask) != 0) {
  400c5a:	6861      	ldr	r1, [r4, #4]
  400c5c:	4229      	tst	r1, r5
  400c5e:	d0f5      	beq.n	400c4c <pio_handler_process+0x20>
					gs_interrupt_sources[i].handler(gs_interrupt_sources[i].id,
  400c60:	68e3      	ldr	r3, [r4, #12]
  400c62:	4798      	blx	r3
					status &= ~(gs_interrupt_sources[i].mask);
  400c64:	6863      	ldr	r3, [r4, #4]
  400c66:	ea25 0503 	bic.w	r5, r5, r3
  400c6a:	e7ef      	b.n	400c4c <pio_handler_process+0x20>
  400c6c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  400c70:	00400c23 	.word	0x00400c23
  400c74:	00400c27 	.word	0x00400c27
  400c78:	20400bf0 	.word	0x20400bf0

00400c7c <pio_handler_set>:
 *
 * \return 0 if successful, 1 if the maximum number of sources has been defined.
 */
uint32_t pio_handler_set(Pio *p_pio, uint32_t ul_id, uint32_t ul_mask,
		uint32_t ul_attr, void (*p_handler) (uint32_t, uint32_t))
{
  400c7c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint8_t i;
	struct s_interrupt_source *pSource;

	if (gs_ul_nb_sources >= MAX_INTERRUPT_SOURCES)
  400c7e:	4c18      	ldr	r4, [pc, #96]	; (400ce0 <pio_handler_set+0x64>)
  400c80:	6826      	ldr	r6, [r4, #0]
  400c82:	2e06      	cmp	r6, #6
  400c84:	d82a      	bhi.n	400cdc <pio_handler_set+0x60>
  400c86:	f04f 0c00 	mov.w	ip, #0
  400c8a:	4664      	mov	r4, ip
		return 1;

    /* Check interrupt for this pin, if already defined, redefine it. */
	for (i = 0; i <= gs_ul_nb_sources; i++) {
		pSource = &(gs_interrupt_sources[i]);
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400c8c:	4f15      	ldr	r7, [pc, #84]	; (400ce4 <pio_handler_set+0x68>)
  400c8e:	e004      	b.n	400c9a <pio_handler_set+0x1e>
	for (i = 0; i <= gs_ul_nb_sources; i++) {
  400c90:	3401      	adds	r4, #1
  400c92:	b2e4      	uxtb	r4, r4
  400c94:	46a4      	mov	ip, r4
  400c96:	42a6      	cmp	r6, r4
  400c98:	d309      	bcc.n	400cae <pio_handler_set+0x32>
		pSource = &(gs_interrupt_sources[i]);
  400c9a:	46a6      	mov	lr, r4
		if (pSource->id == ul_id && pSource->mask == ul_mask) {
  400c9c:	0125      	lsls	r5, r4, #4
  400c9e:	597d      	ldr	r5, [r7, r5]
  400ca0:	428d      	cmp	r5, r1
  400ca2:	d1f5      	bne.n	400c90 <pio_handler_set+0x14>
  400ca4:	eb07 1504 	add.w	r5, r7, r4, lsl #4
  400ca8:	686d      	ldr	r5, [r5, #4]
  400caa:	4295      	cmp	r5, r2
  400cac:	d1f0      	bne.n	400c90 <pio_handler_set+0x14>
			break;
		}
	}

	/* Define new source */
	pSource->id = ul_id;
  400cae:	4d0d      	ldr	r5, [pc, #52]	; (400ce4 <pio_handler_set+0x68>)
  400cb0:	ea4f 1e0e 	mov.w	lr, lr, lsl #4
  400cb4:	eb05 040e 	add.w	r4, r5, lr
  400cb8:	f845 100e 	str.w	r1, [r5, lr]
	pSource->mask = ul_mask;
  400cbc:	6062      	str	r2, [r4, #4]
	pSource->attr = ul_attr;
  400cbe:	60a3      	str	r3, [r4, #8]
	pSource->handler = p_handler;
  400cc0:	9906      	ldr	r1, [sp, #24]
  400cc2:	60e1      	str	r1, [r4, #12]
	if (i == gs_ul_nb_sources + 1) {
  400cc4:	3601      	adds	r6, #1
  400cc6:	4566      	cmp	r6, ip
  400cc8:	d005      	beq.n	400cd6 <pio_handler_set+0x5a>
  400cca:	4611      	mov	r1, r2
		gs_ul_nb_sources++;
	}

	/* Configure interrupt mode */
	pio_configure_interrupt(p_pio, ul_mask, ul_attr);
  400ccc:	461a      	mov	r2, r3
  400cce:	4b06      	ldr	r3, [pc, #24]	; (400ce8 <pio_handler_set+0x6c>)
  400cd0:	4798      	blx	r3

	return 0;
  400cd2:	2000      	movs	r0, #0
  400cd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		gs_ul_nb_sources++;
  400cd6:	4902      	ldr	r1, [pc, #8]	; (400ce0 <pio_handler_set+0x64>)
  400cd8:	600e      	str	r6, [r1, #0]
  400cda:	e7f6      	b.n	400cca <pio_handler_set+0x4e>
		return 1;
  400cdc:	2001      	movs	r0, #1
}
  400cde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  400ce0:	20400c60 	.word	0x20400c60
  400ce4:	20400bf0 	.word	0x20400bf0
  400ce8:	00400bed 	.word	0x00400bed

00400cec <PIOA_Handler>:
/**
 * \brief Parallel IO Controller A interrupt handler.
 * Redefined PIOA interrupt handler for NVIC interrupt table.
 */
void PIOA_Handler(void)
{
  400cec:	b508      	push	{r3, lr}
	pio_handler_process(PIOA, ID_PIOA);
  400cee:	210a      	movs	r1, #10
  400cf0:	4801      	ldr	r0, [pc, #4]	; (400cf8 <PIOA_Handler+0xc>)
  400cf2:	4b02      	ldr	r3, [pc, #8]	; (400cfc <PIOA_Handler+0x10>)
  400cf4:	4798      	blx	r3
  400cf6:	bd08      	pop	{r3, pc}
  400cf8:	400e0e00 	.word	0x400e0e00
  400cfc:	00400c2d 	.word	0x00400c2d

00400d00 <PIOB_Handler>:
/**
 * \brief Parallel IO Controller B interrupt handler
 * Redefined PIOB interrupt handler for NVIC interrupt table.
 */
void PIOB_Handler(void)
{
  400d00:	b508      	push	{r3, lr}
    pio_handler_process(PIOB, ID_PIOB);
  400d02:	210b      	movs	r1, #11
  400d04:	4801      	ldr	r0, [pc, #4]	; (400d0c <PIOB_Handler+0xc>)
  400d06:	4b02      	ldr	r3, [pc, #8]	; (400d10 <PIOB_Handler+0x10>)
  400d08:	4798      	blx	r3
  400d0a:	bd08      	pop	{r3, pc}
  400d0c:	400e1000 	.word	0x400e1000
  400d10:	00400c2d 	.word	0x00400c2d

00400d14 <PIOC_Handler>:
/**
 * \brief Parallel IO Controller C interrupt handler.
 * Redefined PIOC interrupt handler for NVIC interrupt table.
 */
void PIOC_Handler(void)
{
  400d14:	b508      	push	{r3, lr}
	pio_handler_process(PIOC, ID_PIOC);
  400d16:	210c      	movs	r1, #12
  400d18:	4801      	ldr	r0, [pc, #4]	; (400d20 <PIOC_Handler+0xc>)
  400d1a:	4b02      	ldr	r3, [pc, #8]	; (400d24 <PIOC_Handler+0x10>)
  400d1c:	4798      	blx	r3
  400d1e:	bd08      	pop	{r3, pc}
  400d20:	400e1200 	.word	0x400e1200
  400d24:	00400c2d 	.word	0x00400c2d

00400d28 <PIOD_Handler>:
/**
 * \brief Parallel IO Controller D interrupt handler.
 * Redefined PIOD interrupt handler for NVIC interrupt table.
 */
void PIOD_Handler(void)
{
  400d28:	b508      	push	{r3, lr}
	pio_handler_process(PIOD, ID_PIOD);
  400d2a:	2110      	movs	r1, #16
  400d2c:	4801      	ldr	r0, [pc, #4]	; (400d34 <PIOD_Handler+0xc>)
  400d2e:	4b02      	ldr	r3, [pc, #8]	; (400d38 <PIOD_Handler+0x10>)
  400d30:	4798      	blx	r3
  400d32:	bd08      	pop	{r3, pc}
  400d34:	400e1400 	.word	0x400e1400
  400d38:	00400c2d 	.word	0x00400c2d

00400d3c <PIOE_Handler>:
/**
 * \brief Parallel IO Controller E interrupt handler.
 * Redefined PIOE interrupt handler for NVIC interrupt table.
 */
void PIOE_Handler(void)
{
  400d3c:	b508      	push	{r3, lr}
	pio_handler_process(PIOE, ID_PIOE);
  400d3e:	2111      	movs	r1, #17
  400d40:	4801      	ldr	r0, [pc, #4]	; (400d48 <PIOE_Handler+0xc>)
  400d42:	4b02      	ldr	r3, [pc, #8]	; (400d4c <PIOE_Handler+0x10>)
  400d44:	4798      	blx	r3
  400d46:	bd08      	pop	{r3, pc}
  400d48:	400e1600 	.word	0x400e1600
  400d4c:	00400c2d 	.word	0x00400c2d

00400d50 <pmc_mck_set_division>:
 *
 * \param ul_div Division value.
 */
void pmc_mck_set_division(uint32_t ul_div)
{
	switch (ul_div) {
  400d50:	2803      	cmp	r0, #3
  400d52:	d011      	beq.n	400d78 <pmc_mck_set_division+0x28>
  400d54:	2804      	cmp	r0, #4
  400d56:	d012      	beq.n	400d7e <pmc_mck_set_division+0x2e>
		case 1:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
  400d58:	2802      	cmp	r0, #2
  400d5a:	bf0c      	ite	eq
  400d5c:	f44f 7180 	moveq.w	r1, #256	; 0x100
  400d60:	2100      	movne	r1, #0
		default:
			ul_div = PMC_MCKR_MDIV_EQ_PCK;
			break;
	}
	PMC->PMC_MCKR =
			(PMC->PMC_MCKR & (~PMC_MCKR_MDIV_Msk)) | ul_div;
  400d62:	4a08      	ldr	r2, [pc, #32]	; (400d84 <pmc_mck_set_division+0x34>)
  400d64:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400d66:	f423 7340 	bic.w	r3, r3, #768	; 0x300
  400d6a:	430b      	orrs	r3, r1
	PMC->PMC_MCKR =
  400d6c:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400d6e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400d70:	f013 0f08 	tst.w	r3, #8
  400d74:	d0fb      	beq.n	400d6e <pmc_mck_set_division+0x1e>
}
  400d76:	4770      	bx	lr
			ul_div = PMC_MCKR_MDIV_PCK_DIV3;
  400d78:	f44f 7140 	mov.w	r1, #768	; 0x300
			break;
  400d7c:	e7f1      	b.n	400d62 <pmc_mck_set_division+0x12>
			ul_div = PMC_MCKR_MDIV_PCK_DIV4;
  400d7e:	f44f 7100 	mov.w	r1, #512	; 0x200
			break;
  400d82:	e7ee      	b.n	400d62 <pmc_mck_set_division+0x12>
  400d84:	400e0600 	.word	0x400e0600

00400d88 <pmc_switch_mck_to_pllack>:
 */
uint32_t pmc_switch_mck_to_pllack(uint32_t ul_pres)
{
	uint32_t ul_timeout;

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_PRES_Msk)) | ul_pres;
  400d88:	4a17      	ldr	r2, [pc, #92]	; (400de8 <pmc_switch_mck_to_pllack+0x60>)
  400d8a:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400d8c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  400d90:	4318      	orrs	r0, r3
  400d92:	6310      	str	r0, [r2, #48]	; 0x30
	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400d94:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400d96:	f013 0f08 	tst.w	r3, #8
  400d9a:	d10a      	bne.n	400db2 <pmc_switch_mck_to_pllack+0x2a>
  400d9c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400da0:	4911      	ldr	r1, [pc, #68]	; (400de8 <pmc_switch_mck_to_pllack+0x60>)
  400da2:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400da4:	f012 0f08 	tst.w	r2, #8
  400da8:	d103      	bne.n	400db2 <pmc_switch_mck_to_pllack+0x2a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400daa:	3b01      	subs	r3, #1
  400dac:	d1f9      	bne.n	400da2 <pmc_switch_mck_to_pllack+0x1a>
			return 1;
  400dae:	2001      	movs	r0, #1
  400db0:	4770      	bx	lr
		}
	}

	PMC->PMC_MCKR = (PMC->PMC_MCKR & (~PMC_MCKR_CSS_Msk)) |
  400db2:	4a0d      	ldr	r2, [pc, #52]	; (400de8 <pmc_switch_mck_to_pllack+0x60>)
  400db4:	6b13      	ldr	r3, [r2, #48]	; 0x30
  400db6:	f023 0303 	bic.w	r3, r3, #3
  400dba:	f043 0302 	orr.w	r3, r3, #2
  400dbe:	6313      	str	r3, [r2, #48]	; 0x30
			PMC_MCKR_CSS_PLLA_CLK;

	for (ul_timeout = PMC_TIMEOUT; !(PMC->PMC_SR & PMC_SR_MCKRDY);
  400dc0:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400dc2:	f013 0f08 	tst.w	r3, #8
  400dc6:	d10a      	bne.n	400dde <pmc_switch_mck_to_pllack+0x56>
  400dc8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  400dcc:	4906      	ldr	r1, [pc, #24]	; (400de8 <pmc_switch_mck_to_pllack+0x60>)
  400dce:	6e8a      	ldr	r2, [r1, #104]	; 0x68
  400dd0:	f012 0f08 	tst.w	r2, #8
  400dd4:	d105      	bne.n	400de2 <pmc_switch_mck_to_pllack+0x5a>
			--ul_timeout) {
		if (ul_timeout == 0) {
  400dd6:	3b01      	subs	r3, #1
  400dd8:	d1f9      	bne.n	400dce <pmc_switch_mck_to_pllack+0x46>
			return 1;
  400dda:	2001      	movs	r0, #1
		}
	}

	return 0;
}
  400ddc:	4770      	bx	lr
	return 0;
  400dde:	2000      	movs	r0, #0
  400de0:	4770      	bx	lr
  400de2:	2000      	movs	r0, #0
  400de4:	4770      	bx	lr
  400de6:	bf00      	nop
  400de8:	400e0600 	.word	0x400e0600

00400dec <pmc_switch_mainck_to_xtal>:
 */
void pmc_switch_mainck_to_xtal(uint32_t ul_bypass,
		uint32_t ul_xtal_startup_time)
{
	/* Enable Main Xtal oscillator */
	if (ul_bypass) {
  400dec:	b9a0      	cbnz	r0, 400e18 <pmc_switch_mainck_to_xtal+0x2c>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
				CKGR_MOR_MOSCSEL;
	} else {
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400dee:	480e      	ldr	r0, [pc, #56]	; (400e28 <pmc_switch_mainck_to_xtal+0x3c>)
  400df0:	6a03      	ldr	r3, [r0, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
				CKGR_MOR_MOSCXTST(ul_xtal_startup_time);
  400df2:	0209      	lsls	r1, r1, #8
  400df4:	b289      	uxth	r1, r1
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN |
  400df6:	4a0d      	ldr	r2, [pc, #52]	; (400e2c <pmc_switch_mainck_to_xtal+0x40>)
  400df8:	401a      	ands	r2, r3
  400dfa:	4b0d      	ldr	r3, [pc, #52]	; (400e30 <pmc_switch_mainck_to_xtal+0x44>)
  400dfc:	4313      	orrs	r3, r2
  400dfe:	4319      	orrs	r1, r3
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  400e00:	6201      	str	r1, [r0, #32]
		/* Wait the Xtal to stabilize */
		while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  400e02:	4602      	mov	r2, r0
  400e04:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400e06:	f013 0f01 	tst.w	r3, #1
  400e0a:	d0fb      	beq.n	400e04 <pmc_switch_mainck_to_xtal+0x18>

		PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  400e0c:	4a06      	ldr	r2, [pc, #24]	; (400e28 <pmc_switch_mainck_to_xtal+0x3c>)
  400e0e:	6a11      	ldr	r1, [r2, #32]
  400e10:	4b08      	ldr	r3, [pc, #32]	; (400e34 <pmc_switch_mainck_to_xtal+0x48>)
  400e12:	430b      	orrs	r3, r1
  400e14:	6213      	str	r3, [r2, #32]
  400e16:	4770      	bx	lr
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400e18:	4903      	ldr	r1, [pc, #12]	; (400e28 <pmc_switch_mainck_to_xtal+0x3c>)
  400e1a:	6a0b      	ldr	r3, [r1, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  400e1c:	4a06      	ldr	r2, [pc, #24]	; (400e38 <pmc_switch_mainck_to_xtal+0x4c>)
  400e1e:	401a      	ands	r2, r3
  400e20:	4b06      	ldr	r3, [pc, #24]	; (400e3c <pmc_switch_mainck_to_xtal+0x50>)
  400e22:	4313      	orrs	r3, r2
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  400e24:	620b      	str	r3, [r1, #32]
  400e26:	4770      	bx	lr
  400e28:	400e0600 	.word	0x400e0600
  400e2c:	ffc8fffc 	.word	0xffc8fffc
  400e30:	00370001 	.word	0x00370001
  400e34:	01370000 	.word	0x01370000
  400e38:	fec8fffc 	.word	0xfec8fffc
  400e3c:	01370002 	.word	0x01370002

00400e40 <pmc_osc_is_ready_mainck>:
 * \retval 1 Xtal is ready.
 * \retval 0 Xtal is not ready.
 */
uint32_t pmc_osc_is_ready_mainck(void)
{
	return PMC->PMC_SR & PMC_SR_MOSCSELS;
  400e40:	4b02      	ldr	r3, [pc, #8]	; (400e4c <pmc_osc_is_ready_mainck+0xc>)
  400e42:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400e44:	f400 3080 	and.w	r0, r0, #65536	; 0x10000
  400e48:	4770      	bx	lr
  400e4a:	bf00      	nop
  400e4c:	400e0600 	.word	0x400e0600

00400e50 <pmc_disable_pllack>:
void pmc_disable_pllack(void)
{
#if (SAM4C || SAM4CM || SAM4CP || SAMG)
	PMC->CKGR_PLLAR = CKGR_PLLAR_MULA(0);
#else
	PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | CKGR_PLLAR_MULA(0);
  400e50:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
  400e54:	4b01      	ldr	r3, [pc, #4]	; (400e5c <pmc_disable_pllack+0xc>)
  400e56:	629a      	str	r2, [r3, #40]	; 0x28
  400e58:	4770      	bx	lr
  400e5a:	bf00      	nop
  400e5c:	400e0600 	.word	0x400e0600

00400e60 <pmc_is_locked_pllack>:
 * \retval 0 Not locked.
 * \retval 1 Locked.
 */
uint32_t pmc_is_locked_pllack(void)
{
	return (PMC->PMC_SR & PMC_SR_LOCKA);
  400e60:	4b02      	ldr	r3, [pc, #8]	; (400e6c <pmc_is_locked_pllack+0xc>)
  400e62:	6e98      	ldr	r0, [r3, #104]	; 0x68
}
  400e64:	f000 0002 	and.w	r0, r0, #2
  400e68:	4770      	bx	lr
  400e6a:	bf00      	nop
  400e6c:	400e0600 	.word	0x400e0600

00400e70 <pmc_enable_periph_clk>:
 * \retval 0 Success.
 * \retval 1 Invalid parameter.
 */
uint32_t pmc_enable_periph_clk(uint32_t ul_id)
{
	if (ul_id > MAX_PERIPH_ID) {
  400e70:	283f      	cmp	r0, #63	; 0x3f
  400e72:	d81e      	bhi.n	400eb2 <pmc_enable_periph_clk+0x42>
		return 1;
	}

	if (ul_id < 32) {
  400e74:	281f      	cmp	r0, #31
  400e76:	d80c      	bhi.n	400e92 <pmc_enable_periph_clk+0x22>
		if ((PMC->PMC_PCSR0 & (1u << ul_id)) != (1u << ul_id)) {
  400e78:	4b11      	ldr	r3, [pc, #68]	; (400ec0 <pmc_enable_periph_clk+0x50>)
  400e7a:	699a      	ldr	r2, [r3, #24]
  400e7c:	2301      	movs	r3, #1
  400e7e:	4083      	lsls	r3, r0
  400e80:	4393      	bics	r3, r2
  400e82:	d018      	beq.n	400eb6 <pmc_enable_periph_clk+0x46>
			PMC->PMC_PCER0 = 1 << ul_id;
  400e84:	2301      	movs	r3, #1
  400e86:	fa03 f000 	lsl.w	r0, r3, r0
  400e8a:	4b0d      	ldr	r3, [pc, #52]	; (400ec0 <pmc_enable_periph_clk+0x50>)
  400e8c:	6118      	str	r0, [r3, #16]
			PMC->PMC_PCER1 = 1 << ul_id;
		}
#endif
	}

	return 0;
  400e8e:	2000      	movs	r0, #0
  400e90:	4770      	bx	lr
		ul_id -= 32;
  400e92:	3820      	subs	r0, #32
		if ((PMC->PMC_PCSR1 & (1u << ul_id)) != (1u << ul_id)) {
  400e94:	4b0a      	ldr	r3, [pc, #40]	; (400ec0 <pmc_enable_periph_clk+0x50>)
  400e96:	f8d3 2108 	ldr.w	r2, [r3, #264]	; 0x108
  400e9a:	2301      	movs	r3, #1
  400e9c:	4083      	lsls	r3, r0
  400e9e:	4393      	bics	r3, r2
  400ea0:	d00b      	beq.n	400eba <pmc_enable_periph_clk+0x4a>
			PMC->PMC_PCER1 = 1 << ul_id;
  400ea2:	2301      	movs	r3, #1
  400ea4:	fa03 f000 	lsl.w	r0, r3, r0
  400ea8:	4b05      	ldr	r3, [pc, #20]	; (400ec0 <pmc_enable_periph_clk+0x50>)
  400eaa:	f8c3 0100 	str.w	r0, [r3, #256]	; 0x100
	return 0;
  400eae:	2000      	movs	r0, #0
  400eb0:	4770      	bx	lr
		return 1;
  400eb2:	2001      	movs	r0, #1
  400eb4:	4770      	bx	lr
	return 0;
  400eb6:	2000      	movs	r0, #0
  400eb8:	4770      	bx	lr
  400eba:	2000      	movs	r0, #0
}
  400ebc:	4770      	bx	lr
  400ebe:	bf00      	nop
  400ec0:	400e0600 	.word	0x400e0600

00400ec4 <pmc_set_flash_in_wait_mode>:
 *
 * \param ul_flash_state PMC_WAIT_MODE_FLASH_STANDBY flash in standby mode,
 * PMC_WAIT_MODE_FLASH_DEEP_POWERDOWN flash in deep power down mode.
 */
void pmc_set_flash_in_wait_mode(uint32_t ul_flash_state)
{
  400ec4:	4770      	bx	lr
	...

00400ec8 <pmc_enable_waitmode>:
void pmc_enable_waitmode(void)
{
	uint32_t i;

	/* Flash in wait mode */
	i = PMC->PMC_FSMR;
  400ec8:	4a10      	ldr	r2, [pc, #64]	; (400f0c <pmc_enable_waitmode+0x44>)
  400eca:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  400ecc:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
#if !(SAMV71 || SAMV70 || SAME70 || SAMS70)
	i |= ul_flash_in_wait_mode;
#else
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  400ed0:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
#endif
	PMC->PMC_FSMR = i;
  400ed4:	6713      	str	r3, [r2, #112]	; 0x70

	/* Set the WAITMODE bit = 1 */
	PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_WAITMODE;
  400ed6:	6a11      	ldr	r1, [r2, #32]
  400ed8:	4b0d      	ldr	r3, [pc, #52]	; (400f10 <pmc_enable_waitmode+0x48>)
  400eda:	430b      	orrs	r3, r1
  400edc:	6213      	str	r3, [r2, #32]

	/* Waiting for Master Clock Ready MCKRDY = 1 */
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400ede:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400ee0:	f013 0f08 	tst.w	r3, #8
  400ee4:	d0fb      	beq.n	400ede <pmc_enable_waitmode+0x16>
  400ee6:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
  __ASM volatile ("nop");
  400eea:	bf00      	nop

	/* Waiting for MOSCRCEN bit cleared is strongly recommended
	 * to ensure that the core will not execute undesired instructions
	 */
	for (i = 0; i < 500; i++) {
  400eec:	3b01      	subs	r3, #1
  400eee:	d1fc      	bne.n	400eea <pmc_enable_waitmode+0x22>
		__NOP();
	}
	while (!(PMC->CKGR_MOR & CKGR_MOR_MOSCRCEN));
  400ef0:	4a06      	ldr	r2, [pc, #24]	; (400f0c <pmc_enable_waitmode+0x44>)
  400ef2:	6a13      	ldr	r3, [r2, #32]
  400ef4:	f013 0f08 	tst.w	r3, #8
  400ef8:	d0fb      	beq.n	400ef2 <pmc_enable_waitmode+0x2a>

#if (!SAMG)
	/* Restore Flash in idle mode */
	i = PMC->PMC_FSMR;
  400efa:	4a04      	ldr	r2, [pc, #16]	; (400f0c <pmc_enable_waitmode+0x44>)
  400efc:	6f13      	ldr	r3, [r2, #112]	; 0x70
	i &= ~PMC_FSMR_FLPM_Msk;
  400efe:	f423 03c0 	bic.w	r3, r3, #6291456	; 0x600000
	i |= PMC_WAIT_MODE_FLASH_IDLE;
  400f02:	f443 0380 	orr.w	r3, r3, #4194304	; 0x400000
	PMC->PMC_FSMR = i;
  400f06:	6713      	str	r3, [r2, #112]	; 0x70
  400f08:	4770      	bx	lr
  400f0a:	bf00      	nop
  400f0c:	400e0600 	.word	0x400e0600
  400f10:	00370004 	.word	0x00370004

00400f14 <pmc_sleep>:
static volatile bool b_is_sleep_clock_used = false;
/** Callback invoked once when clocks are restored */
static pmc_callback_wakeup_clocks_restored_t callback_clocks_restored = NULL;

void pmc_sleep(int sleep_mode)
{
  400f14:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	switch (sleep_mode) {
  400f18:	1e43      	subs	r3, r0, #1
  400f1a:	2b04      	cmp	r3, #4
  400f1c:	f200 8107 	bhi.w	40112e <pmc_sleep+0x21a>
  400f20:	e8df f013 	tbh	[pc, r3, lsl #1]
  400f24:	00050005 	.word	0x00050005
  400f28:	00150015 	.word	0x00150015
  400f2c:	00f6      	.short	0x00f6
	case SAM_PM_SMODE_SLEEP_WFI:
	case SAM_PM_SMODE_SLEEP_WFE:
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SCB->SCR &= (uint32_t)~SCR_SLEEPDEEP;
  400f2e:	4a81      	ldr	r2, [pc, #516]	; (401134 <pmc_sleep+0x220>)
  400f30:	6913      	ldr	r3, [r2, #16]
  400f32:	f023 0304 	bic.w	r3, r3, #4
  400f36:	6113      	str	r3, [r2, #16]
		cpu_irq_enable();
  400f38:	2201      	movs	r2, #1
  400f3a:	4b7f      	ldr	r3, [pc, #508]	; (401138 <pmc_sleep+0x224>)
  400f3c:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  400f3e:	f3bf 8f5f 	dmb	sy
  This function enables IRQ interrupts by clearing the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
{
  __ASM volatile ("cpsie i" : : : "memory");
  400f42:	b662      	cpsie	i
  __ASM volatile ("dsb");
  400f44:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("wfi");
  400f48:	bf30      	wfi
  400f4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  400f4e:	4604      	mov	r4, r0
#if defined(EFC1)
		uint32_t fmr1;
#endif
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG || SAMV71 || SAMV70 || SAMS70 || SAME70)
		(sleep_mode == SAM_PM_SMODE_WAIT_FAST) ?
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_STANDBY) :
  400f50:	2803      	cmp	r0, #3
  400f52:	bf0c      	ite	eq
  400f54:	2000      	moveq	r0, #0
				pmc_set_flash_in_wait_mode(PMC_FSMR_FLPM_FLASH_DEEP_POWERDOWN);
  400f56:	f44f 1000 	movne.w	r0, #2097152	; 0x200000
  400f5a:	4b78      	ldr	r3, [pc, #480]	; (40113c <pmc_sleep+0x228>)
  400f5c:	4798      	blx	r3
  This function disables IRQ interrupts by setting the I-bit in the CPSR.
  Can only be executed in Privileged modes.
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
  400f5e:	b672      	cpsid	i
  __ASM volatile ("dmb");
  400f60:	f3bf 8f5f 	dmb	sy
#endif
		cpu_irq_disable();
  400f64:	2200      	movs	r2, #0
  400f66:	4b74      	ldr	r3, [pc, #464]	; (401138 <pmc_sleep+0x224>)
  400f68:	701a      	strb	r2, [r3, #0]
		b_is_sleep_clock_used = true;
  400f6a:	2201      	movs	r2, #1
  400f6c:	4b74      	ldr	r3, [pc, #464]	; (401140 <pmc_sleep+0x22c>)
  400f6e:	701a      	strb	r2, [r3, #0]
	uint32_t mor  = PMC->CKGR_MOR;
  400f70:	4b74      	ldr	r3, [pc, #464]	; (401144 <pmc_sleep+0x230>)
  400f72:	6a1f      	ldr	r7, [r3, #32]
	uint32_t mckr = PMC->PMC_MCKR;
  400f74:	6b1d      	ldr	r5, [r3, #48]	; 0x30
	uint32_t fmr  = EFC0->EEFC_FMR;
  400f76:	4a74      	ldr	r2, [pc, #464]	; (401148 <pmc_sleep+0x234>)
  400f78:	f8d2 8000 	ldr.w	r8, [r2]
		*p_pll0_setting = PMC->CKGR_PLLAR;
  400f7c:	6a9e      	ldr	r6, [r3, #40]	; 0x28
	PMC->CKGR_MOR = CKGR_MOR_KEY_PASSWD | mor | CKGR_MOR_MOSCRCEN;
  400f7e:	4a73      	ldr	r2, [pc, #460]	; (40114c <pmc_sleep+0x238>)
  400f80:	433a      	orrs	r2, r7
  400f82:	621a      	str	r2, [r3, #32]
	if ((mckr & PMC_MCKR_CSS_Msk) > PMC_MCKR_CSS_MAIN_CLK) {
  400f84:	f005 0903 	and.w	r9, r5, #3
  400f88:	f1b9 0f01 	cmp.w	r9, #1
  400f8c:	f240 8089 	bls.w	4010a2 <pmc_sleep+0x18e>
		mckr = (mckr & (~PMC_MCKR_CSS_Msk)) | PMC_MCKR_CSS_MAIN_CLK;
  400f90:	f025 0103 	bic.w	r1, r5, #3
  400f94:	f041 0101 	orr.w	r1, r1, #1
		PMC->PMC_MCKR = mckr;
  400f98:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400f9a:	461a      	mov	r2, r3
  400f9c:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400f9e:	f013 0f08 	tst.w	r3, #8
  400fa2:	d0fb      	beq.n	400f9c <pmc_sleep+0x88>
	if (mckr & PMC_MCKR_PRES_Msk) {
  400fa4:	f011 0f70 	tst.w	r1, #112	; 0x70
  400fa8:	d008      	beq.n	400fbc <pmc_sleep+0xa8>
		mckr = (mckr & (~PMC_MCKR_PRES_Msk));
  400faa:	f021 0170 	bic.w	r1, r1, #112	; 0x70
		PMC->PMC_MCKR = mckr;
  400fae:	4b65      	ldr	r3, [pc, #404]	; (401144 <pmc_sleep+0x230>)
  400fb0:	6319      	str	r1, [r3, #48]	; 0x30
		while(!(PMC->PMC_SR & PMC_SR_MCKRDY));
  400fb2:	461a      	mov	r2, r3
  400fb4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400fb6:	f013 0f08 	tst.w	r3, #8
  400fba:	d0fb      	beq.n	400fb4 <pmc_sleep+0xa0>
	pmc_disable_pllack();
  400fbc:	4b64      	ldr	r3, [pc, #400]	; (401150 <pmc_sleep+0x23c>)
  400fbe:	4798      	blx	r3
	while (!(PMC->PMC_SR & PMC_SR_MOSCRCS));
  400fc0:	4a60      	ldr	r2, [pc, #384]	; (401144 <pmc_sleep+0x230>)
  400fc2:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400fc4:	f413 3f00 	tst.w	r3, #131072	; 0x20000
  400fc8:	d0fb      	beq.n	400fc2 <pmc_sleep+0xae>
	PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCSEL) |
  400fca:	4a5e      	ldr	r2, [pc, #376]	; (401144 <pmc_sleep+0x230>)
  400fcc:	6a11      	ldr	r1, [r2, #32]
  400fce:	4b61      	ldr	r3, [pc, #388]	; (401154 <pmc_sleep+0x240>)
  400fd0:	400b      	ands	r3, r1
  400fd2:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  400fd6:	6213      	str	r3, [r2, #32]
	while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  400fd8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  400fda:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  400fde:	d0fb      	beq.n	400fd8 <pmc_sleep+0xc4>
	EFC0->EEFC_FMR = fmr & (~EEFC_FMR_FWS_Msk);
  400fe0:	f428 6370 	bic.w	r3, r8, #3840	; 0xf00
  400fe4:	4a58      	ldr	r2, [pc, #352]	; (401148 <pmc_sleep+0x234>)
  400fe6:	6013      	str	r3, [r2, #0]
	if (disable_xtal) {
  400fe8:	2c04      	cmp	r4, #4
  400fea:	d05c      	beq.n	4010a6 <pmc_sleep+0x192>
				&fmr1,
#endif
				(sleep_mode == SAM_PM_SMODE_WAIT));

		/* Enter wait mode */
		cpu_irq_enable();
  400fec:	4c52      	ldr	r4, [pc, #328]	; (401138 <pmc_sleep+0x224>)
  400fee:	2301      	movs	r3, #1
  400ff0:	7023      	strb	r3, [r4, #0]
  400ff2:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  400ff6:	b662      	cpsie	i

		pmc_enable_waitmode();
  400ff8:	4b57      	ldr	r3, [pc, #348]	; (401158 <pmc_sleep+0x244>)
  400ffa:	4798      	blx	r3
  __ASM volatile ("cpsid i" : : : "memory");
  400ffc:	b672      	cpsid	i
  400ffe:	f3bf 8f5f 	dmb	sy

		cpu_irq_disable();
  401002:	2300      	movs	r3, #0
  401004:	7023      	strb	r3, [r4, #0]
	if (CKGR_MOR_MOSCXTBY == (osc_setting & CKGR_MOR_MOSCXTBY)) {
  401006:	f017 0f02 	tst.w	r7, #2
  40100a:	d055      	beq.n	4010b8 <pmc_sleep+0x1a4>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  40100c:	4a4d      	ldr	r2, [pc, #308]	; (401144 <pmc_sleep+0x230>)
  40100e:	6a13      	ldr	r3, [r2, #32]
				CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTBY |
  401010:	4952      	ldr	r1, [pc, #328]	; (40115c <pmc_sleep+0x248>)
  401012:	4019      	ands	r1, r3
  401014:	4b52      	ldr	r3, [pc, #328]	; (401160 <pmc_sleep+0x24c>)
  401016:	430b      	orrs	r3, r1
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  401018:	6213      	str	r3, [r2, #32]
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  40101a:	6a11      	ldr	r1, [r2, #32]
				| CKGR_MOR_KEY_PASSWD;
  40101c:	4b51      	ldr	r3, [pc, #324]	; (401164 <pmc_sleep+0x250>)
  40101e:	400b      	ands	r3, r1
  401020:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401024:	6213      	str	r3, [r2, #32]
	if (pll0_setting & CKGR_PLLAR_MULA_Msk) {
  401026:	4b50      	ldr	r3, [pc, #320]	; (401168 <pmc_sleep+0x254>)
  401028:	4033      	ands	r3, r6
  40102a:	2b00      	cmp	r3, #0
  40102c:	d06e      	beq.n	40110c <pmc_sleep+0x1f8>
		PMC->CKGR_PLLAR = CKGR_PLLAR_ONE | pll0_setting;
  40102e:	f046 5600 	orr.w	r6, r6, #536870912	; 0x20000000
  401032:	4b44      	ldr	r3, [pc, #272]	; (401144 <pmc_sleep+0x230>)
  401034:	629e      	str	r6, [r3, #40]	; 0x28
		pll_sr |= PMC_SR_LOCKA;
  401036:	2102      	movs	r1, #2
	switch(mck_setting & PMC_MCKR_CSS_Msk) {
  401038:	f1b9 0f02 	cmp.w	r9, #2
  40103c:	d104      	bne.n	401048 <pmc_sleep+0x134>
		while (!(PMC->PMC_SR & PMC_SR_LOCKA));
  40103e:	4a41      	ldr	r2, [pc, #260]	; (401144 <pmc_sleep+0x230>)
  401040:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401042:	f013 0f02 	tst.w	r3, #2
  401046:	d0fb      	beq.n	401040 <pmc_sleep+0x12c>
	mckr = PMC->PMC_MCKR;
  401048:	4a3e      	ldr	r2, [pc, #248]	; (401144 <pmc_sleep+0x230>)
  40104a:	6b13      	ldr	r3, [r2, #48]	; 0x30
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  40104c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
		| (mck_setting & PMC_MCKR_PRES_Msk);
  401050:	f005 0070 	and.w	r0, r5, #112	; 0x70
  401054:	4303      	orrs	r3, r0
	PMC->PMC_MCKR = (mckr & ~PMC_MCKR_PRES_Msk)
  401056:	6313      	str	r3, [r2, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  401058:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40105a:	f013 0f08 	tst.w	r3, #8
  40105e:	d0fb      	beq.n	401058 <pmc_sleep+0x144>
	EFC0->EEFC_FMR = fmr_setting;
  401060:	4b39      	ldr	r3, [pc, #228]	; (401148 <pmc_sleep+0x234>)
  401062:	f8c3 8000 	str.w	r8, [r3]
	PMC->PMC_MCKR = mck_setting;
  401066:	f5a3 63c0 	sub.w	r3, r3, #1536	; 0x600
  40106a:	631d      	str	r5, [r3, #48]	; 0x30
	while (!(PMC->PMC_SR & PMC_SR_MCKRDY));
  40106c:	461a      	mov	r2, r3
  40106e:	6e93      	ldr	r3, [r2, #104]	; 0x68
  401070:	f013 0f08 	tst.w	r3, #8
  401074:	d0fb      	beq.n	40106e <pmc_sleep+0x15a>
	while (!(PMC->PMC_SR & pll_sr));
  401076:	4a33      	ldr	r2, [pc, #204]	; (401144 <pmc_sleep+0x230>)
  401078:	6e93      	ldr	r3, [r2, #104]	; 0x68
  40107a:	420b      	tst	r3, r1
  40107c:	d0fc      	beq.n	401078 <pmc_sleep+0x164>

#if (SAM4C || SAM4CM || SAM4CP)
		/* Restore the sub-system 1 */
		PMC->PMC_SCER = cpclk_backup | PMC_SCER_CPKEY_PASSWD;
#endif
		b_is_sleep_clock_used = false;
  40107e:	2200      	movs	r2, #0
  401080:	4b2f      	ldr	r3, [pc, #188]	; (401140 <pmc_sleep+0x22c>)
  401082:	701a      	strb	r2, [r3, #0]
		if (callback_clocks_restored) {
  401084:	4b39      	ldr	r3, [pc, #228]	; (40116c <pmc_sleep+0x258>)
  401086:	681b      	ldr	r3, [r3, #0]
  401088:	b11b      	cbz	r3, 401092 <pmc_sleep+0x17e>
			callback_clocks_restored();
  40108a:	4798      	blx	r3
			callback_clocks_restored = NULL;
  40108c:	2200      	movs	r2, #0
  40108e:	4b37      	ldr	r3, [pc, #220]	; (40116c <pmc_sleep+0x258>)
  401090:	601a      	str	r2, [r3, #0]
		}
		cpu_irq_enable();
  401092:	2201      	movs	r2, #1
  401094:	4b28      	ldr	r3, [pc, #160]	; (401138 <pmc_sleep+0x224>)
  401096:	701a      	strb	r2, [r3, #0]
  401098:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40109c:	b662      	cpsie	i
  40109e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
	uint32_t mckr = PMC->PMC_MCKR;
  4010a2:	4629      	mov	r1, r5
  4010a4:	e77e      	b.n	400fa4 <pmc_sleep+0x90>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTEN) |
  4010a6:	f5a2 62c0 	sub.w	r2, r2, #1536	; 0x600
  4010aa:	6a11      	ldr	r1, [r2, #32]
  4010ac:	4b30      	ldr	r3, [pc, #192]	; (401170 <pmc_sleep+0x25c>)
  4010ae:	400b      	ands	r3, r1
  4010b0:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
  4010b4:	6213      	str	r3, [r2, #32]
  4010b6:	e799      	b.n	400fec <pmc_sleep+0xd8>
	} else if (CKGR_MOR_MOSCXTEN == (osc_setting & CKGR_MOR_MOSCXTEN)) {
  4010b8:	f017 0f01 	tst.w	r7, #1
  4010bc:	d0b3      	beq.n	401026 <pmc_sleep+0x112>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCXTEN)) {
  4010be:	4b21      	ldr	r3, [pc, #132]	; (401144 <pmc_sleep+0x230>)
  4010c0:	6a1b      	ldr	r3, [r3, #32]
  4010c2:	f013 0f01 	tst.w	r3, #1
  4010c6:	d10b      	bne.n	4010e0 <pmc_sleep+0x1cc>
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4010c8:	491e      	ldr	r1, [pc, #120]	; (401144 <pmc_sleep+0x230>)
  4010ca:	6a0b      	ldr	r3, [r1, #32]
					CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCXTEN;
  4010cc:	4a29      	ldr	r2, [pc, #164]	; (401174 <pmc_sleep+0x260>)
  4010ce:	401a      	ands	r2, r3
  4010d0:	4b29      	ldr	r3, [pc, #164]	; (401178 <pmc_sleep+0x264>)
  4010d2:	4313      	orrs	r3, r2
			PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCXTBY) |
  4010d4:	620b      	str	r3, [r1, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCXTS));
  4010d6:	460a      	mov	r2, r1
  4010d8:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010da:	f013 0f01 	tst.w	r3, #1
  4010de:	d0fb      	beq.n	4010d8 <pmc_sleep+0x1c4>
		if (!(PMC->CKGR_MOR & CKGR_MOR_MOSCSEL)) {
  4010e0:	4b18      	ldr	r3, [pc, #96]	; (401144 <pmc_sleep+0x230>)
  4010e2:	6a1b      	ldr	r3, [r3, #32]
  4010e4:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4010e8:	d108      	bne.n	4010fc <pmc_sleep+0x1e8>
			PMC->CKGR_MOR |= CKGR_MOR_KEY_PASSWD | CKGR_MOR_MOSCSEL;
  4010ea:	4a16      	ldr	r2, [pc, #88]	; (401144 <pmc_sleep+0x230>)
  4010ec:	6a11      	ldr	r1, [r2, #32]
  4010ee:	4b23      	ldr	r3, [pc, #140]	; (40117c <pmc_sleep+0x268>)
  4010f0:	430b      	orrs	r3, r1
  4010f2:	6213      	str	r3, [r2, #32]
			while (!(PMC->PMC_SR & PMC_SR_MOSCSELS));
  4010f4:	6e93      	ldr	r3, [r2, #104]	; 0x68
  4010f6:	f413 3f80 	tst.w	r3, #65536	; 0x10000
  4010fa:	d0fb      	beq.n	4010f4 <pmc_sleep+0x1e0>
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  4010fc:	4a11      	ldr	r2, [pc, #68]	; (401144 <pmc_sleep+0x230>)
  4010fe:	6a11      	ldr	r1, [r2, #32]
					| CKGR_MOR_KEY_PASSWD;
  401100:	4b18      	ldr	r3, [pc, #96]	; (401164 <pmc_sleep+0x250>)
  401102:	400b      	ands	r3, r1
  401104:	f443 135c 	orr.w	r3, r3, #3604480	; 0x370000
		PMC->CKGR_MOR = (PMC->CKGR_MOR & ~CKGR_MOR_MOSCRCEN &
  401108:	6213      	str	r3, [r2, #32]
  40110a:	e78c      	b.n	401026 <pmc_sleep+0x112>
	uint32_t pll_sr = 0;
  40110c:	2100      	movs	r1, #0
  40110e:	e793      	b.n	401038 <pmc_sleep+0x124>

		break;
	}
#if (!(SAMG51 || SAMG53 || SAMG54))
	case SAM_PM_SMODE_BACKUP:
		SCB->SCR |= SCR_SLEEPDEEP;
  401110:	4a08      	ldr	r2, [pc, #32]	; (401134 <pmc_sleep+0x220>)
  401112:	6913      	ldr	r3, [r2, #16]
  401114:	f043 0304 	orr.w	r3, r3, #4
  401118:	6113      	str	r3, [r2, #16]
#if (SAM4S || SAM4E || SAM4N || SAM4C || SAM4CM || SAM4CP || SAMG55 || SAMV71 || SAMV70 || SAMS70 || SAME70)
		SUPC->SUPC_CR = SUPC_CR_KEY_PASSWD | SUPC_CR_VROFF_STOP_VREG;
  40111a:	4a19      	ldr	r2, [pc, #100]	; (401180 <pmc_sleep+0x26c>)
  40111c:	4b19      	ldr	r3, [pc, #100]	; (401184 <pmc_sleep+0x270>)
  40111e:	601a      	str	r2, [r3, #0]
		cpu_irq_enable();
  401120:	2201      	movs	r2, #1
  401122:	4b05      	ldr	r3, [pc, #20]	; (401138 <pmc_sleep+0x224>)
  401124:	701a      	strb	r2, [r3, #0]
  401126:	f3bf 8f5f 	dmb	sy
  40112a:	b662      	cpsie	i
  __ASM volatile ("wfi");
  40112c:	bf30      	wfi
  40112e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  401132:	bf00      	nop
  401134:	e000ed00 	.word	0xe000ed00
  401138:	20400018 	.word	0x20400018
  40113c:	00400ec5 	.word	0x00400ec5
  401140:	20400c64 	.word	0x20400c64
  401144:	400e0600 	.word	0x400e0600
  401148:	400e0c00 	.word	0x400e0c00
  40114c:	00370008 	.word	0x00370008
  401150:	00400e51 	.word	0x00400e51
  401154:	fec8ffff 	.word	0xfec8ffff
  401158:	00400ec9 	.word	0x00400ec9
  40115c:	fec8fffc 	.word	0xfec8fffc
  401160:	01370002 	.word	0x01370002
  401164:	ffc8ff87 	.word	0xffc8ff87
  401168:	07ff0000 	.word	0x07ff0000
  40116c:	20400c68 	.word	0x20400c68
  401170:	ffc8fffe 	.word	0xffc8fffe
  401174:	ffc8fffc 	.word	0xffc8fffc
  401178:	00370001 	.word	0x00370001
  40117c:	01370000 	.word	0x01370000
  401180:	a5000004 	.word	0xa5000004
  401184:	400e1810 	.word	0x400e1810

00401188 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
  401188:	e7fe      	b.n	401188 <Dummy_Handler>
	...

0040118c <Reset_Handler>:
{
  40118c:	b500      	push	{lr}
  40118e:	b083      	sub	sp, #12
        if (pSrc != pDest) {
  401190:	4b25      	ldr	r3, [pc, #148]	; (401228 <Reset_Handler+0x9c>)
  401192:	4a26      	ldr	r2, [pc, #152]	; (40122c <Reset_Handler+0xa0>)
  401194:	429a      	cmp	r2, r3
  401196:	d010      	beq.n	4011ba <Reset_Handler+0x2e>
                for (; pDest < &_erelocate;) {
  401198:	4b25      	ldr	r3, [pc, #148]	; (401230 <Reset_Handler+0xa4>)
  40119a:	4a23      	ldr	r2, [pc, #140]	; (401228 <Reset_Handler+0x9c>)
  40119c:	429a      	cmp	r2, r3
  40119e:	d20c      	bcs.n	4011ba <Reset_Handler+0x2e>
  4011a0:	3b01      	subs	r3, #1
  4011a2:	1a9b      	subs	r3, r3, r2
  4011a4:	f023 0303 	bic.w	r3, r3, #3
  4011a8:	3304      	adds	r3, #4
  4011aa:	4413      	add	r3, r2
  4011ac:	491f      	ldr	r1, [pc, #124]	; (40122c <Reset_Handler+0xa0>)
                        *pDest++ = *pSrc++;
  4011ae:	f851 0b04 	ldr.w	r0, [r1], #4
  4011b2:	f842 0b04 	str.w	r0, [r2], #4
                for (; pDest < &_erelocate;) {
  4011b6:	429a      	cmp	r2, r3
  4011b8:	d1f9      	bne.n	4011ae <Reset_Handler+0x22>
        for (pDest = &_szero; pDest < &_ezero;) {
  4011ba:	4b1e      	ldr	r3, [pc, #120]	; (401234 <Reset_Handler+0xa8>)
  4011bc:	4a1e      	ldr	r2, [pc, #120]	; (401238 <Reset_Handler+0xac>)
  4011be:	429a      	cmp	r2, r3
  4011c0:	d20a      	bcs.n	4011d8 <Reset_Handler+0x4c>
  4011c2:	3b01      	subs	r3, #1
  4011c4:	1a9b      	subs	r3, r3, r2
  4011c6:	f023 0303 	bic.w	r3, r3, #3
  4011ca:	3304      	adds	r3, #4
  4011cc:	4413      	add	r3, r2
                *pDest++ = 0;
  4011ce:	2100      	movs	r1, #0
  4011d0:	f842 1b04 	str.w	r1, [r2], #4
        for (pDest = &_szero; pDest < &_ezero;) {
  4011d4:	4293      	cmp	r3, r2
  4011d6:	d1fb      	bne.n	4011d0 <Reset_Handler+0x44>
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
  4011d8:	4a18      	ldr	r2, [pc, #96]	; (40123c <Reset_Handler+0xb0>)
  4011da:	4b19      	ldr	r3, [pc, #100]	; (401240 <Reset_Handler+0xb4>)
  4011dc:	f023 037f 	bic.w	r3, r3, #127	; 0x7f
  4011e0:	6093      	str	r3, [r2, #8]
 */
__attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
{
  uint32_t result;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
  4011e2:	f3ef 8310 	mrs	r3, PRIMASK
static volatile uint32_t cpu_irq_critical_section_counter;
static volatile bool     cpu_irq_prev_interrupt_state;

static inline irqflags_t cpu_irq_save(void)
{
	volatile irqflags_t flags = cpu_irq_is_enabled();
  4011e6:	fab3 f383 	clz	r3, r3
  4011ea:	095b      	lsrs	r3, r3, #5
  4011ec:	9301      	str	r3, [sp, #4]
  __ASM volatile ("cpsid i" : : : "memory");
  4011ee:	b672      	cpsid	i
  __ASM volatile ("dmb");
  4011f0:	f3bf 8f5f 	dmb	sy
	cpu_irq_disable();
  4011f4:	2200      	movs	r2, #0
  4011f6:	4b13      	ldr	r3, [pc, #76]	; (401244 <Reset_Handler+0xb8>)
  4011f8:	701a      	strb	r2, [r3, #0]
	return flags;
  4011fa:	9901      	ldr	r1, [sp, #4]
 */
__always_inline static void fpu_enable(void)
{
	irqflags_t flags;
	flags = cpu_irq_save();
	REG_CPACR |=  (0xFu << 20);
  4011fc:	4a12      	ldr	r2, [pc, #72]	; (401248 <Reset_Handler+0xbc>)
  4011fe:	6813      	ldr	r3, [r2, #0]
  401200:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
  401204:	6013      	str	r3, [r2, #0]
  __ASM volatile ("dsb");
  401206:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb");
  40120a:	f3bf 8f6f 	isb	sy
	return (flags);
}

static inline void cpu_irq_restore(irqflags_t flags)
{
	if (cpu_irq_is_enabled_flags(flags))
  40120e:	b129      	cbz	r1, 40121c <Reset_Handler+0x90>
		cpu_irq_enable();
  401210:	2201      	movs	r2, #1
  401212:	4b0c      	ldr	r3, [pc, #48]	; (401244 <Reset_Handler+0xb8>)
  401214:	701a      	strb	r2, [r3, #0]
  __ASM volatile ("dmb");
  401216:	f3bf 8f5f 	dmb	sy
  __ASM volatile ("cpsie i" : : : "memory");
  40121a:	b662      	cpsie	i
        __libc_init_array();
  40121c:	4b0b      	ldr	r3, [pc, #44]	; (40124c <Reset_Handler+0xc0>)
  40121e:	4798      	blx	r3
        main();
  401220:	4b0b      	ldr	r3, [pc, #44]	; (401250 <Reset_Handler+0xc4>)
  401222:	4798      	blx	r3
  401224:	e7fe      	b.n	401224 <Reset_Handler+0x98>
  401226:	bf00      	nop
  401228:	20400000 	.word	0x20400000
  40122c:	00406cac 	.word	0x00406cac
  401230:	204009d0 	.word	0x204009d0
  401234:	20400cd0 	.word	0x20400cd0
  401238:	204009d0 	.word	0x204009d0
  40123c:	e000ed00 	.word	0xe000ed00
  401240:	00400000 	.word	0x00400000
  401244:	20400018 	.word	0x20400018
  401248:	e000ed88 	.word	0xe000ed88
  40124c:	004019c1 	.word	0x004019c1
  401250:	004015f5 	.word	0x004015f5

00401254 <SystemCoreClockUpdate>:
}

void SystemCoreClockUpdate( void )
{
  /* Determine clock frequency according to clock register values */
  switch (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk)
  401254:	4b3b      	ldr	r3, [pc, #236]	; (401344 <SystemCoreClockUpdate+0xf0>)
  401256:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  401258:	f003 0303 	and.w	r3, r3, #3
  40125c:	2b01      	cmp	r3, #1
  40125e:	d01d      	beq.n	40129c <SystemCoreClockUpdate+0x48>
  401260:	b183      	cbz	r3, 401284 <SystemCoreClockUpdate+0x30>
  401262:	2b02      	cmp	r3, #2
  401264:	d036      	beq.n	4012d4 <SystemCoreClockUpdate+0x80>

    default:
    break;
  }

  if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 )
  401266:	4b37      	ldr	r3, [pc, #220]	; (401344 <SystemCoreClockUpdate+0xf0>)
  401268:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  40126a:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40126e:	2b70      	cmp	r3, #112	; 0x70
  401270:	d05f      	beq.n	401332 <SystemCoreClockUpdate+0xde>
  {
    SystemCoreClock /= 3U;
  }
  else
  {
    SystemCoreClock >>= ((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
  401272:	4b34      	ldr	r3, [pc, #208]	; (401344 <SystemCoreClockUpdate+0xf0>)
  401274:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  401276:	4934      	ldr	r1, [pc, #208]	; (401348 <SystemCoreClockUpdate+0xf4>)
  401278:	f3c2 1202 	ubfx	r2, r2, #4, #3
  40127c:	680b      	ldr	r3, [r1, #0]
  40127e:	40d3      	lsrs	r3, r2
  401280:	600b      	str	r3, [r1, #0]
  401282:	4770      	bx	lr
      if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL )
  401284:	4b31      	ldr	r3, [pc, #196]	; (40134c <SystemCoreClockUpdate+0xf8>)
  401286:	695b      	ldr	r3, [r3, #20]
  401288:	f013 0f80 	tst.w	r3, #128	; 0x80
        SystemCoreClock = CHIP_FREQ_XTAL_32K;
  40128c:	bf14      	ite	ne
  40128e:	f44f 4200 	movne.w	r2, #32768	; 0x8000
        SystemCoreClock = CHIP_FREQ_SLCK_RC;
  401292:	f44f 42fa 	moveq.w	r2, #32000	; 0x7d00
  401296:	4b2c      	ldr	r3, [pc, #176]	; (401348 <SystemCoreClockUpdate+0xf4>)
  401298:	601a      	str	r2, [r3, #0]
  40129a:	e7e4      	b.n	401266 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  40129c:	4b29      	ldr	r3, [pc, #164]	; (401344 <SystemCoreClockUpdate+0xf0>)
  40129e:	6a1b      	ldr	r3, [r3, #32]
  4012a0:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4012a4:	d003      	beq.n	4012ae <SystemCoreClockUpdate+0x5a>
        SystemCoreClock = CHIP_FREQ_XTAL_12M;
  4012a6:	4a2a      	ldr	r2, [pc, #168]	; (401350 <SystemCoreClockUpdate+0xfc>)
  4012a8:	4b27      	ldr	r3, [pc, #156]	; (401348 <SystemCoreClockUpdate+0xf4>)
  4012aa:	601a      	str	r2, [r3, #0]
  4012ac:	e7db      	b.n	401266 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  4012ae:	4a29      	ldr	r2, [pc, #164]	; (401354 <SystemCoreClockUpdate+0x100>)
  4012b0:	4b25      	ldr	r3, [pc, #148]	; (401348 <SystemCoreClockUpdate+0xf4>)
  4012b2:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  4012b4:	4b23      	ldr	r3, [pc, #140]	; (401344 <SystemCoreClockUpdate+0xf0>)
  4012b6:	6a1b      	ldr	r3, [r3, #32]
  4012b8:	f003 0370 	and.w	r3, r3, #112	; 0x70
  4012bc:	2b10      	cmp	r3, #16
  4012be:	d005      	beq.n	4012cc <SystemCoreClockUpdate+0x78>
  4012c0:	2b20      	cmp	r3, #32
  4012c2:	d1d0      	bne.n	401266 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 3U;
  4012c4:	4a22      	ldr	r2, [pc, #136]	; (401350 <SystemCoreClockUpdate+0xfc>)
  4012c6:	4b20      	ldr	r3, [pc, #128]	; (401348 <SystemCoreClockUpdate+0xf4>)
  4012c8:	601a      	str	r2, [r3, #0]
          break;
  4012ca:	e7cc      	b.n	401266 <SystemCoreClockUpdate+0x12>
            SystemCoreClock *= 2U;
  4012cc:	4a22      	ldr	r2, [pc, #136]	; (401358 <SystemCoreClockUpdate+0x104>)
  4012ce:	4b1e      	ldr	r3, [pc, #120]	; (401348 <SystemCoreClockUpdate+0xf4>)
  4012d0:	601a      	str	r2, [r3, #0]
          break;
  4012d2:	e7c8      	b.n	401266 <SystemCoreClockUpdate+0x12>
      if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL )
  4012d4:	4b1b      	ldr	r3, [pc, #108]	; (401344 <SystemCoreClockUpdate+0xf0>)
  4012d6:	6a1b      	ldr	r3, [r3, #32]
  4012d8:	f013 7f80 	tst.w	r3, #16777216	; 0x1000000
  4012dc:	d016      	beq.n	40130c <SystemCoreClockUpdate+0xb8>
        SystemCoreClock = CHIP_FREQ_XTAL_12M ;
  4012de:	4a1c      	ldr	r2, [pc, #112]	; (401350 <SystemCoreClockUpdate+0xfc>)
  4012e0:	4b19      	ldr	r3, [pc, #100]	; (401348 <SystemCoreClockUpdate+0xf4>)
  4012e2:	601a      	str	r2, [r3, #0]
      if ( (uint32_t) (PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) == PMC_MCKR_CSS_PLLA_CLK )
  4012e4:	4b17      	ldr	r3, [pc, #92]	; (401344 <SystemCoreClockUpdate+0xf0>)
  4012e6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
  4012e8:	f003 0303 	and.w	r3, r3, #3
  4012ec:	2b02      	cmp	r3, #2
  4012ee:	d1ba      	bne.n	401266 <SystemCoreClockUpdate+0x12>
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4012f0:	4a14      	ldr	r2, [pc, #80]	; (401344 <SystemCoreClockUpdate+0xf0>)
  4012f2:	6a91      	ldr	r1, [r2, #40]	; 0x28
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  4012f4:	6a92      	ldr	r2, [r2, #40]	; 0x28
  4012f6:	4814      	ldr	r0, [pc, #80]	; (401348 <SystemCoreClockUpdate+0xf4>)
        SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk) >> CKGR_PLLAR_MULA_Pos) + 1U);
  4012f8:	f3c1 410a 	ubfx	r1, r1, #16, #11
  4012fc:	6803      	ldr	r3, [r0, #0]
  4012fe:	fb01 3303 	mla	r3, r1, r3, r3
        SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk) >> CKGR_PLLAR_DIVA_Pos));
  401302:	b2d2      	uxtb	r2, r2
  401304:	fbb3 f3f2 	udiv	r3, r3, r2
  401308:	6003      	str	r3, [r0, #0]
  40130a:	e7ac      	b.n	401266 <SystemCoreClockUpdate+0x12>
        SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  40130c:	4a11      	ldr	r2, [pc, #68]	; (401354 <SystemCoreClockUpdate+0x100>)
  40130e:	4b0e      	ldr	r3, [pc, #56]	; (401348 <SystemCoreClockUpdate+0xf4>)
  401310:	601a      	str	r2, [r3, #0]
        switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk )
  401312:	4b0c      	ldr	r3, [pc, #48]	; (401344 <SystemCoreClockUpdate+0xf0>)
  401314:	6a1b      	ldr	r3, [r3, #32]
  401316:	f003 0370 	and.w	r3, r3, #112	; 0x70
  40131a:	2b10      	cmp	r3, #16
  40131c:	d005      	beq.n	40132a <SystemCoreClockUpdate+0xd6>
  40131e:	2b20      	cmp	r3, #32
  401320:	d1e0      	bne.n	4012e4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 3U;
  401322:	4a0b      	ldr	r2, [pc, #44]	; (401350 <SystemCoreClockUpdate+0xfc>)
  401324:	4b08      	ldr	r3, [pc, #32]	; (401348 <SystemCoreClockUpdate+0xf4>)
  401326:	601a      	str	r2, [r3, #0]
          break;
  401328:	e7dc      	b.n	4012e4 <SystemCoreClockUpdate+0x90>
            SystemCoreClock *= 2U;
  40132a:	4a0b      	ldr	r2, [pc, #44]	; (401358 <SystemCoreClockUpdate+0x104>)
  40132c:	4b06      	ldr	r3, [pc, #24]	; (401348 <SystemCoreClockUpdate+0xf4>)
  40132e:	601a      	str	r2, [r3, #0]
          break;
  401330:	e7d8      	b.n	4012e4 <SystemCoreClockUpdate+0x90>
    SystemCoreClock /= 3U;
  401332:	4a05      	ldr	r2, [pc, #20]	; (401348 <SystemCoreClockUpdate+0xf4>)
  401334:	6813      	ldr	r3, [r2, #0]
  401336:	4909      	ldr	r1, [pc, #36]	; (40135c <SystemCoreClockUpdate+0x108>)
  401338:	fba1 1303 	umull	r1, r3, r1, r3
  40133c:	085b      	lsrs	r3, r3, #1
  40133e:	6013      	str	r3, [r2, #0]
  401340:	4770      	bx	lr
  401342:	bf00      	nop
  401344:	400e0600 	.word	0x400e0600
  401348:	2040001c 	.word	0x2040001c
  40134c:	400e1810 	.word	0x400e1810
  401350:	00b71b00 	.word	0x00b71b00
  401354:	003d0900 	.word	0x003d0900
  401358:	007a1200 	.word	0x007a1200
  40135c:	aaaaaaab 	.word	0xaaaaaaab

00401360 <system_init_flash>:
 * Initialize flash.
 */
void system_init_flash( uint32_t ul_clk )
{
  /* Set FWS for embedded Flash access according to operating frequency */
  if ( ul_clk < CHIP_FREQ_FWS_0 )
  401360:	4b16      	ldr	r3, [pc, #88]	; (4013bc <system_init_flash+0x5c>)
  401362:	4298      	cmp	r0, r3
  401364:	d913      	bls.n	40138e <system_init_flash+0x2e>
  {
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  }
  else
  {
    if (ul_clk < CHIP_FREQ_FWS_1)
  401366:	4b16      	ldr	r3, [pc, #88]	; (4013c0 <system_init_flash+0x60>)
  401368:	4298      	cmp	r0, r3
  40136a:	d915      	bls.n	401398 <system_init_flash+0x38>
    {
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
    }
    else
    {
      if (ul_clk < CHIP_FREQ_FWS_2)
  40136c:	4b15      	ldr	r3, [pc, #84]	; (4013c4 <system_init_flash+0x64>)
  40136e:	4298      	cmp	r0, r3
  401370:	d916      	bls.n	4013a0 <system_init_flash+0x40>
      {
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
      }
      else
      {
        if ( ul_clk < CHIP_FREQ_FWS_3 )
  401372:	4b15      	ldr	r3, [pc, #84]	; (4013c8 <system_init_flash+0x68>)
  401374:	4298      	cmp	r0, r3
  401376:	d917      	bls.n	4013a8 <system_init_flash+0x48>
        {
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
        }
        else
        {
          if ( ul_clk < CHIP_FREQ_FWS_4 )
  401378:	4b14      	ldr	r3, [pc, #80]	; (4013cc <system_init_flash+0x6c>)
  40137a:	4298      	cmp	r0, r3
  40137c:	d918      	bls.n	4013b0 <system_init_flash+0x50>
          {
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
          }
          else
          {
            if ( ul_clk < CHIP_FREQ_FWS_5 )
  40137e:	4b14      	ldr	r3, [pc, #80]	; (4013d0 <system_init_flash+0x70>)
  401380:	4298      	cmp	r0, r3
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
  401382:	bf94      	ite	ls
  401384:	4a13      	ldrls	r2, [pc, #76]	; (4013d4 <system_init_flash+0x74>)
            }
            else
            {
              EFC->EEFC_FMR = EEFC_FMR_FWS(6)|EEFC_FMR_CLOE;
  401386:	4a14      	ldrhi	r2, [pc, #80]	; (4013d8 <system_init_flash+0x78>)
  401388:	4b14      	ldr	r3, [pc, #80]	; (4013dc <system_init_flash+0x7c>)
  40138a:	601a      	str	r2, [r3, #0]
  40138c:	4770      	bx	lr
    EFC->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
  40138e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
  401392:	4b12      	ldr	r3, [pc, #72]	; (4013dc <system_init_flash+0x7c>)
  401394:	601a      	str	r2, [r3, #0]
  401396:	4770      	bx	lr
      EFC->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  401398:	4a11      	ldr	r2, [pc, #68]	; (4013e0 <system_init_flash+0x80>)
  40139a:	4b10      	ldr	r3, [pc, #64]	; (4013dc <system_init_flash+0x7c>)
  40139c:	601a      	str	r2, [r3, #0]
  40139e:	4770      	bx	lr
        EFC->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
  4013a0:	4a10      	ldr	r2, [pc, #64]	; (4013e4 <system_init_flash+0x84>)
  4013a2:	4b0e      	ldr	r3, [pc, #56]	; (4013dc <system_init_flash+0x7c>)
  4013a4:	601a      	str	r2, [r3, #0]
  4013a6:	4770      	bx	lr
          EFC->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
  4013a8:	4a0f      	ldr	r2, [pc, #60]	; (4013e8 <system_init_flash+0x88>)
  4013aa:	4b0c      	ldr	r3, [pc, #48]	; (4013dc <system_init_flash+0x7c>)
  4013ac:	601a      	str	r2, [r3, #0]
  4013ae:	4770      	bx	lr
            EFC->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
  4013b0:	f04f 2204 	mov.w	r2, #67109888	; 0x4000400
  4013b4:	4b09      	ldr	r3, [pc, #36]	; (4013dc <system_init_flash+0x7c>)
  4013b6:	601a      	str	r2, [r3, #0]
  4013b8:	4770      	bx	lr
  4013ba:	bf00      	nop
  4013bc:	015ef3bf 	.word	0x015ef3bf
  4013c0:	02bde77f 	.word	0x02bde77f
  4013c4:	041cdb3f 	.word	0x041cdb3f
  4013c8:	057bceff 	.word	0x057bceff
  4013cc:	06dac2bf 	.word	0x06dac2bf
  4013d0:	0839b67f 	.word	0x0839b67f
  4013d4:	04000500 	.word	0x04000500
  4013d8:	04000600 	.word	0x04000600
  4013dc:	400e0c00 	.word	0x400e0c00
  4013e0:	04000100 	.word	0x04000100
  4013e4:	04000200 	.word	0x04000200
  4013e8:	04000300 	.word	0x04000300

004013ec <_sbrk>:
{
	static unsigned char *heap = NULL;
	unsigned char *prev_heap;
	int ramend = (int)&__ram_end__;

	if (heap == NULL) {
  4013ec:	4b0a      	ldr	r3, [pc, #40]	; (401418 <_sbrk+0x2c>)
  4013ee:	681b      	ldr	r3, [r3, #0]
  4013f0:	b153      	cbz	r3, 401408 <_sbrk+0x1c>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;
  4013f2:	4b09      	ldr	r3, [pc, #36]	; (401418 <_sbrk+0x2c>)
  4013f4:	681b      	ldr	r3, [r3, #0]

	if (((int)prev_heap + incr) > ramend) {
  4013f6:	181a      	adds	r2, r3, r0
  4013f8:	4908      	ldr	r1, [pc, #32]	; (40141c <_sbrk+0x30>)
  4013fa:	4291      	cmp	r1, r2
  4013fc:	db08      	blt.n	401410 <_sbrk+0x24>
		return (caddr_t) -1;	
	}

	heap += incr;
  4013fe:	4610      	mov	r0, r2
  401400:	4a05      	ldr	r2, [pc, #20]	; (401418 <_sbrk+0x2c>)
  401402:	6010      	str	r0, [r2, #0]

	return (caddr_t) prev_heap;
  401404:	4618      	mov	r0, r3
  401406:	4770      	bx	lr
		heap = (unsigned char *)&_end;
  401408:	4a05      	ldr	r2, [pc, #20]	; (401420 <_sbrk+0x34>)
  40140a:	4b03      	ldr	r3, [pc, #12]	; (401418 <_sbrk+0x2c>)
  40140c:	601a      	str	r2, [r3, #0]
  40140e:	e7f0      	b.n	4013f2 <_sbrk+0x6>
		return (caddr_t) -1;	
  401410:	f04f 30ff 	mov.w	r0, #4294967295
}
  401414:	4770      	bx	lr
  401416:	bf00      	nop
  401418:	20400c6c 	.word	0x20400c6c
  40141c:	2045fffc 	.word	0x2045fffc
  401420:	20402ed0 	.word	0x20402ed0

00401424 <but1_callback>:


volatile char but_flag;
volatile char but2_flag;

void but1_callback(void){
  401424:	b508      	push	{r3, lr}
	 (pio_get(BUT1_PIO, PIO_INPUT, BUT1_PIO_IDX_MASK))?(but_flag = 0):(but_flag = 1);
  401426:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  40142a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40142e:	4806      	ldr	r0, [pc, #24]	; (401448 <but1_callback+0x24>)
  401430:	4b06      	ldr	r3, [pc, #24]	; (40144c <but1_callback+0x28>)
  401432:	4798      	blx	r3
  401434:	b918      	cbnz	r0, 40143e <but1_callback+0x1a>
  401436:	2201      	movs	r2, #1
  401438:	4b05      	ldr	r3, [pc, #20]	; (401450 <but1_callback+0x2c>)
  40143a:	701a      	strb	r2, [r3, #0]
  40143c:	bd08      	pop	{r3, pc}
  40143e:	2200      	movs	r2, #0
  401440:	4b03      	ldr	r3, [pc, #12]	; (401450 <but1_callback+0x2c>)
  401442:	701a      	strb	r2, [r3, #0]
  401444:	bd08      	pop	{r3, pc}
  401446:	bf00      	nop
  401448:	400e1400 	.word	0x400e1400
  40144c:	00400a53 	.word	0x00400a53
  401450:	20400ca4 	.word	0x20400ca4

00401454 <but2_callback>:
}

void but2_callback(void){
  401454:	b508      	push	{r3, lr}
	(pio_get(BUT2_PIO, PIO_INPUT, BUT2_PIO_IDX_MASK))?(but2_flag = 0):(but2_flag = 1);
  401456:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  40145a:	f04f 5120 	mov.w	r1, #671088640	; 0x28000000
  40145e:	4806      	ldr	r0, [pc, #24]	; (401478 <but2_callback+0x24>)
  401460:	4b06      	ldr	r3, [pc, #24]	; (40147c <but2_callback+0x28>)
  401462:	4798      	blx	r3
  401464:	b918      	cbnz	r0, 40146e <but2_callback+0x1a>
  401466:	2201      	movs	r2, #1
  401468:	4b05      	ldr	r3, [pc, #20]	; (401480 <but2_callback+0x2c>)
  40146a:	701a      	strb	r2, [r3, #0]
  40146c:	bd08      	pop	{r3, pc}
  40146e:	2200      	movs	r2, #0
  401470:	4b03      	ldr	r3, [pc, #12]	; (401480 <but2_callback+0x2c>)
  401472:	701a      	strb	r2, [r3, #0]
  401474:	bd08      	pop	{r3, pc}
  401476:	bf00      	nop
  401478:	400e1200 	.word	0x400e1200
  40147c:	00400a53 	.word	0x00400a53
  401480:	20400ca5 	.word	0x20400ca5

00401484 <pisca_led>:
}

void pisca_led(int n, int t){
  401484:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
	for (int i=0;i<n;i++){
  401488:	f1b0 0800 	subs.w	r8, r0, #0
  40148c:	dd33      	ble.n	4014f6 <pisca_led+0x72>
  40148e:	460f      	mov	r7, r1
		pio_clear(LED_PIO, LED_IDX_MASK);
		delay_ms(t);
  401490:	17cd      	asrs	r5, r1, #31
  401492:	4b1a      	ldr	r3, [pc, #104]	; (4014fc <pisca_led+0x78>)
  401494:	fba1 0103 	umull	r0, r1, r1, r3
  401498:	fb03 1105 	mla	r1, r3, r5, r1
  40149c:	f241 722c 	movw	r2, #5932	; 0x172c
  4014a0:	2300      	movs	r3, #0
  4014a2:	f241 742b 	movw	r4, #5931	; 0x172b
  4014a6:	2500      	movs	r5, #0
  4014a8:	1900      	adds	r0, r0, r4
  4014aa:	4169      	adcs	r1, r5
  4014ac:	4c14      	ldr	r4, [pc, #80]	; (401500 <pisca_led+0x7c>)
  4014ae:	47a0      	blx	r4
  4014b0:	4682      	mov	sl, r0
  4014b2:	2400      	movs	r4, #0
		pio_clear(LED_PIO, LED_IDX_MASK);
  4014b4:	4e13      	ldr	r6, [pc, #76]	; (401504 <pisca_led+0x80>)
  4014b6:	f8df 9058 	ldr.w	r9, [pc, #88]	; 401510 <pisca_led+0x8c>
		delay_ms(t);
  4014ba:	4d13      	ldr	r5, [pc, #76]	; (401508 <pisca_led+0x84>)
  4014bc:	e00b      	b.n	4014d6 <pisca_led+0x52>
  4014be:	2033      	movs	r0, #51	; 0x33
  4014c0:	47a8      	blx	r5
		pio_set(LED_PIO, LED_IDX_MASK);
  4014c2:	f44f 7180 	mov.w	r1, #256	; 0x100
  4014c6:	4630      	mov	r0, r6
  4014c8:	4b10      	ldr	r3, [pc, #64]	; (40150c <pisca_led+0x88>)
  4014ca:	4798      	blx	r3
		delay_ms(t);
  4014cc:	2033      	movs	r0, #51	; 0x33
  4014ce:	47a8      	blx	r5
	for (int i=0;i<n;i++){
  4014d0:	3401      	adds	r4, #1
  4014d2:	45a0      	cmp	r8, r4
  4014d4:	d00f      	beq.n	4014f6 <pisca_led+0x72>
		pio_clear(LED_PIO, LED_IDX_MASK);
  4014d6:	f44f 7180 	mov.w	r1, #256	; 0x100
  4014da:	4630      	mov	r0, r6
  4014dc:	47c8      	blx	r9
		delay_ms(t);
  4014de:	2f00      	cmp	r7, #0
  4014e0:	d0ed      	beq.n	4014be <pisca_led+0x3a>
  4014e2:	4650      	mov	r0, sl
  4014e4:	47a8      	blx	r5
		pio_set(LED_PIO, LED_IDX_MASK);
  4014e6:	f44f 7180 	mov.w	r1, #256	; 0x100
  4014ea:	4630      	mov	r0, r6
  4014ec:	4b07      	ldr	r3, [pc, #28]	; (40150c <pisca_led+0x88>)
  4014ee:	4798      	blx	r3
		delay_ms(t);
  4014f0:	4650      	mov	r0, sl
  4014f2:	47a8      	blx	r5
  4014f4:	e7ec      	b.n	4014d0 <pisca_led+0x4c>
  4014f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4014fa:	bf00      	nop
  4014fc:	11e1a300 	.word	0x11e1a300
  401500:	004016b1 	.word	0x004016b1
  401504:	400e1200 	.word	0x400e1200
  401508:	20400001 	.word	0x20400001
  40150c:	00400a4b 	.word	0x00400a4b
  401510:	00400a4f 	.word	0x00400a4f

00401514 <io_init>:
	}
}


void io_init(void){
  401514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401518:	b083      	sub	sp, #12
	WDT->WDT_MR = WDT_MR_WDDIS;
  40151a:	f44f 4200 	mov.w	r2, #32768	; 0x8000
  40151e:	4b2a      	ldr	r3, [pc, #168]	; (4015c8 <io_init+0xb4>)
  401520:	605a      	str	r2, [r3, #4]
	pmc_enable_periph_clk(LED_PIO_ID);
  401522:	200c      	movs	r0, #12
  401524:	4c29      	ldr	r4, [pc, #164]	; (4015cc <io_init+0xb8>)
  401526:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT_PIO_ID);
  401528:	200a      	movs	r0, #10
  40152a:	47a0      	blx	r4
	pmc_enable_periph_clk(BUT2_PIO_ID);
  40152c:	200c      	movs	r0, #12
  40152e:	47a0      	blx	r4
	
	pio_set_input(BUT1_PIO, BUT1_PIO_IDX_MASK, PIO_DEFAULT);
  401530:	4c27      	ldr	r4, [pc, #156]	; (4015d0 <io_init+0xbc>)
  401532:	2200      	movs	r2, #0
  401534:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401538:	4620      	mov	r0, r4
  40153a:	f8df a0a8 	ldr.w	sl, [pc, #168]	; 4015e4 <io_init+0xd0>
  40153e:	47d0      	blx	sl
	pio_pull_up(BUT1_PIO, BUT1_PIO_IDX_MASK, 1);
  401540:	2201      	movs	r2, #1
  401542:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401546:	4620      	mov	r0, r4
  401548:	f8df 909c 	ldr.w	r9, [pc, #156]	; 4015e8 <io_init+0xd4>
  40154c:	47c8      	blx	r9
	
	pio_handler_set(BUT1_PIO,
  40154e:	4b21      	ldr	r3, [pc, #132]	; (4015d4 <io_init+0xc0>)
  401550:	9300      	str	r3, [sp, #0]
  401552:	2340      	movs	r3, #64	; 0x40
  401554:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
  401558:	2110      	movs	r1, #16
  40155a:	4620      	mov	r0, r4
  40155c:	f8df 808c 	ldr.w	r8, [pc, #140]	; 4015ec <io_init+0xd8>
  401560:	47c0      	blx	r8
	BUT1_PIO_ID,
	BUT1_PIO_IDX_MASK,
	PIO_IT_EDGE,
	but1_callback);
	
	pio_enable_interrupt(BUT1_PIO, BUT1_PIO_IDX_MASK);
  401562:	f04f 5180 	mov.w	r1, #268435456	; 0x10000000
  401566:	4620      	mov	r0, r4
  401568:	4f1b      	ldr	r7, [pc, #108]	; (4015d8 <io_init+0xc4>)
  40156a:	47b8      	blx	r7
	pio_get_interrupt_status(BUT1_PIO);
  40156c:	4620      	mov	r0, r4
  40156e:	f8df b080 	ldr.w	fp, [pc, #128]	; 4015f0 <io_init+0xdc>
  401572:	47d8      	blx	fp
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  401574:	4d19      	ldr	r5, [pc, #100]	; (4015dc <io_init+0xc8>)
  401576:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  40157a:	602b      	str	r3, [r5, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  40157c:	2680      	movs	r6, #128	; 0x80
  40157e:	f885 6310 	strb.w	r6, [r5, #784]	; 0x310
	
	NVIC_EnableIRQ(BUT1_PIO_ID);
	NVIC_SetPriority(BUT1_PIO_ID, 4);
	
	
	pio_set_input(BUT2_PIO, BUT2_PIO_IDX_MASK, PIO_DEFAULT);
  401582:	f5a4 7400 	sub.w	r4, r4, #512	; 0x200
  401586:	2200      	movs	r2, #0
  401588:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  40158c:	4620      	mov	r0, r4
  40158e:	47d0      	blx	sl
	pio_pull_up(BUT2_PIO, BUT2_PIO_IDX_MASK, 1);
  401590:	2201      	movs	r2, #1
  401592:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  401596:	4620      	mov	r0, r4
  401598:	47c8      	blx	r9
	
	pio_handler_set(BUT2_PIO,
  40159a:	4b11      	ldr	r3, [pc, #68]	; (4015e0 <io_init+0xcc>)
  40159c:	9300      	str	r3, [sp, #0]
  40159e:	2340      	movs	r3, #64	; 0x40
  4015a0:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
  4015a4:	210c      	movs	r1, #12
  4015a6:	4620      	mov	r0, r4
  4015a8:	47c0      	blx	r8
	BUT2_PIO_ID,
	BUT2_PIO_IDX_MASK,
	PIO_IT_EDGE,
	but2_callback);
	
	pio_enable_interrupt(BUT2_PIO, BUT2_PIO_IDX_MASK);
  4015aa:	f04f 4100 	mov.w	r1, #2147483648	; 0x80000000
  4015ae:	4620      	mov	r0, r4
  4015b0:	47b8      	blx	r7
	pio_get_interrupt_status(BUT2_PIO);
  4015b2:	4620      	mov	r0, r4
  4015b4:	47d8      	blx	fp
  NVIC->ISER[(uint32_t)((int32_t)IRQn) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F)); /* enable interrupt */
  4015b6:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  4015ba:	602b      	str	r3, [r5, #0]
    NVIC->IP[(uint32_t)(IRQn)]            = ((priority << (8 - __NVIC_PRIO_BITS)) & 0xff); } /* set Priority for device specific Interrupts  */
  4015bc:	f885 630c 	strb.w	r6, [r5, #780]	; 0x30c
	
	NVIC_EnableIRQ(BUT2_PIO_ID);
	NVIC_SetPriority(BUT2_PIO_ID, 4); 
	
}
  4015c0:	b003      	add	sp, #12
  4015c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4015c6:	bf00      	nop
  4015c8:	400e1850 	.word	0x400e1850
  4015cc:	00400e71 	.word	0x00400e71
  4015d0:	400e1400 	.word	0x400e1400
  4015d4:	00401425 	.word	0x00401425
  4015d8:	00400c1f 	.word	0x00400c1f
  4015dc:	e000e100 	.word	0xe000e100
  4015e0:	00401455 	.word	0x00401455
  4015e4:	00400aff 	.word	0x00400aff
  4015e8:	00400a41 	.word	0x00400a41
  4015ec:	00400c7d 	.word	0x00400c7d
  4015f0:	00400c23 	.word	0x00400c23

004015f4 <main>:


int main (void)
{
  4015f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4015f8:	b0a1      	sub	sp, #132	; 0x84
	board_init();
  4015fa:	4b1f      	ldr	r3, [pc, #124]	; (401678 <main+0x84>)
  4015fc:	4798      	blx	r3
	sysclk_init();
  4015fe:	4b1f      	ldr	r3, [pc, #124]	; (40167c <main+0x88>)
  401600:	4798      	blx	r3
	delay_init();
	io_init();
  401602:	4b1f      	ldr	r3, [pc, #124]	; (401680 <main+0x8c>)
  401604:	4798      	blx	r3
	gfx_mono_ssd1306_init();
  401606:	4b1f      	ldr	r3, [pc, #124]	; (401684 <main+0x90>)
  401608:	4798      	blx	r3
  
	int freq = 200;
  40160a:	25c8      	movs	r5, #200	; 0xc8
	char freqChar[128];
	int j = 30;
	
	while(1) {
		
		if (but_flag) {
  40160c:	f8df 9094 	ldr.w	r9, [pc, #148]	; 4016a4 <main+0xb0>
			delay_ms(1000);
  401610:	f8df b094 	ldr.w	fp, [pc, #148]	; 4016a8 <main+0xb4>
  401614:	f8df a094 	ldr.w	sl, [pc, #148]	; 4016ac <main+0xb8>
  401618:	e004      	b.n	401624 <main+0x30>
			(but_flag)?(freq+=100):(freq-=100);
  40161a:	3d64      	subs	r5, #100	; 0x64
  40161c:	e00d      	b.n	40163a <main+0x46>
			while(!but2_flag && j >=0){
				pisca_led(1,freq);
				j -= 1;
			}
		}
		pmc_sleep(SAM_PM_SMODE_SLEEP_WFI);
  40161e:	2002      	movs	r0, #2
  401620:	4b19      	ldr	r3, [pc, #100]	; (401688 <main+0x94>)
  401622:	4798      	blx	r3
		if (but_flag) {
  401624:	f899 3000 	ldrb.w	r3, [r9]
  401628:	2b00      	cmp	r3, #0
  40162a:	d0f8      	beq.n	40161e <main+0x2a>
			delay_ms(1000);
  40162c:	4658      	mov	r0, fp
  40162e:	47d0      	blx	sl
			(but_flag)?(freq+=100):(freq-=100);
  401630:	f899 3000 	ldrb.w	r3, [r9]
  401634:	2b00      	cmp	r3, #0
  401636:	d0f0      	beq.n	40161a <main+0x26>
  401638:	3564      	adds	r5, #100	; 0x64
			sprintf(freqChar, "freq %d", freq);
  40163a:	462a      	mov	r2, r5
  40163c:	4913      	ldr	r1, [pc, #76]	; (40168c <main+0x98>)
  40163e:	4668      	mov	r0, sp
  401640:	4b13      	ldr	r3, [pc, #76]	; (401690 <main+0x9c>)
  401642:	4798      	blx	r3
			gfx_mono_draw_string(freqChar, 0, 0, &sysfont);
  401644:	4b13      	ldr	r3, [pc, #76]	; (401694 <main+0xa0>)
  401646:	2200      	movs	r2, #0
  401648:	4611      	mov	r1, r2
  40164a:	4668      	mov	r0, sp
  40164c:	4c12      	ldr	r4, [pc, #72]	; (401698 <main+0xa4>)
  40164e:	47a0      	blx	r4
			while(!but2_flag && j >=0){
  401650:	4b12      	ldr	r3, [pc, #72]	; (40169c <main+0xa8>)
  401652:	781b      	ldrb	r3, [r3, #0]
  401654:	2b00      	cmp	r3, #0
  401656:	d1e2      	bne.n	40161e <main+0x2a>
  401658:	241e      	movs	r4, #30
				pisca_led(1,freq);
  40165a:	f04f 0801 	mov.w	r8, #1
  40165e:	4f10      	ldr	r7, [pc, #64]	; (4016a0 <main+0xac>)
			while(!but2_flag && j >=0){
  401660:	4e0e      	ldr	r6, [pc, #56]	; (40169c <main+0xa8>)
				pisca_led(1,freq);
  401662:	4629      	mov	r1, r5
  401664:	4640      	mov	r0, r8
  401666:	47b8      	blx	r7
			while(!but2_flag && j >=0){
  401668:	7833      	ldrb	r3, [r6, #0]
  40166a:	b2db      	uxtb	r3, r3
  40166c:	3c01      	subs	r4, #1
  40166e:	d4d6      	bmi.n	40161e <main+0x2a>
  401670:	2b00      	cmp	r3, #0
  401672:	d0f6      	beq.n	401662 <main+0x6e>
  401674:	e7d3      	b.n	40161e <main+0x2a>
  401676:	bf00      	nop
  401678:	00400901 	.word	0x00400901
  40167c:	00400891 	.word	0x00400891
  401680:	00401515 	.word	0x00401515
  401684:	00400571 	.word	0x00400571
  401688:	00400f15 	.word	0x00400f15
  40168c:	004069ec 	.word	0x004069ec
  401690:	00401aad 	.word	0x00401aad
  401694:	2040000c 	.word	0x2040000c
  401698:	004004d9 	.word	0x004004d9
  40169c:	20400ca5 	.word	0x20400ca5
  4016a0:	00401485 	.word	0x00401485
  4016a4:	20400ca4 	.word	0x20400ca4
  4016a8:	0303af6b 	.word	0x0303af6b
  4016ac:	20400001 	.word	0x20400001

004016b0 <__aeabi_uldivmod>:
  4016b0:	b953      	cbnz	r3, 4016c8 <__aeabi_uldivmod+0x18>
  4016b2:	b94a      	cbnz	r2, 4016c8 <__aeabi_uldivmod+0x18>
  4016b4:	2900      	cmp	r1, #0
  4016b6:	bf08      	it	eq
  4016b8:	2800      	cmpeq	r0, #0
  4016ba:	bf1c      	itt	ne
  4016bc:	f04f 31ff 	movne.w	r1, #4294967295
  4016c0:	f04f 30ff 	movne.w	r0, #4294967295
  4016c4:	f000 b97a 	b.w	4019bc <__aeabi_idiv0>
  4016c8:	f1ad 0c08 	sub.w	ip, sp, #8
  4016cc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
  4016d0:	f000 f806 	bl	4016e0 <__udivmoddi4>
  4016d4:	f8dd e004 	ldr.w	lr, [sp, #4]
  4016d8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
  4016dc:	b004      	add	sp, #16
  4016de:	4770      	bx	lr

004016e0 <__udivmoddi4>:
  4016e0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  4016e4:	468c      	mov	ip, r1
  4016e6:	460d      	mov	r5, r1
  4016e8:	4604      	mov	r4, r0
  4016ea:	9e08      	ldr	r6, [sp, #32]
  4016ec:	2b00      	cmp	r3, #0
  4016ee:	d151      	bne.n	401794 <__udivmoddi4+0xb4>
  4016f0:	428a      	cmp	r2, r1
  4016f2:	4617      	mov	r7, r2
  4016f4:	d96d      	bls.n	4017d2 <__udivmoddi4+0xf2>
  4016f6:	fab2 fe82 	clz	lr, r2
  4016fa:	f1be 0f00 	cmp.w	lr, #0
  4016fe:	d00b      	beq.n	401718 <__udivmoddi4+0x38>
  401700:	f1ce 0c20 	rsb	ip, lr, #32
  401704:	fa01 f50e 	lsl.w	r5, r1, lr
  401708:	fa20 fc0c 	lsr.w	ip, r0, ip
  40170c:	fa02 f70e 	lsl.w	r7, r2, lr
  401710:	ea4c 0c05 	orr.w	ip, ip, r5
  401714:	fa00 f40e 	lsl.w	r4, r0, lr
  401718:	ea4f 4a17 	mov.w	sl, r7, lsr #16
  40171c:	0c25      	lsrs	r5, r4, #16
  40171e:	fbbc f8fa 	udiv	r8, ip, sl
  401722:	fa1f f987 	uxth.w	r9, r7
  401726:	fb0a cc18 	mls	ip, sl, r8, ip
  40172a:	ea45 450c 	orr.w	r5, r5, ip, lsl #16
  40172e:	fb08 f309 	mul.w	r3, r8, r9
  401732:	42ab      	cmp	r3, r5
  401734:	d90a      	bls.n	40174c <__udivmoddi4+0x6c>
  401736:	19ed      	adds	r5, r5, r7
  401738:	f108 32ff 	add.w	r2, r8, #4294967295
  40173c:	f080 8123 	bcs.w	401986 <__udivmoddi4+0x2a6>
  401740:	42ab      	cmp	r3, r5
  401742:	f240 8120 	bls.w	401986 <__udivmoddi4+0x2a6>
  401746:	f1a8 0802 	sub.w	r8, r8, #2
  40174a:	443d      	add	r5, r7
  40174c:	1aed      	subs	r5, r5, r3
  40174e:	b2a4      	uxth	r4, r4
  401750:	fbb5 f0fa 	udiv	r0, r5, sl
  401754:	fb0a 5510 	mls	r5, sl, r0, r5
  401758:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
  40175c:	fb00 f909 	mul.w	r9, r0, r9
  401760:	45a1      	cmp	r9, r4
  401762:	d909      	bls.n	401778 <__udivmoddi4+0x98>
  401764:	19e4      	adds	r4, r4, r7
  401766:	f100 33ff 	add.w	r3, r0, #4294967295
  40176a:	f080 810a 	bcs.w	401982 <__udivmoddi4+0x2a2>
  40176e:	45a1      	cmp	r9, r4
  401770:	f240 8107 	bls.w	401982 <__udivmoddi4+0x2a2>
  401774:	3802      	subs	r0, #2
  401776:	443c      	add	r4, r7
  401778:	eba4 0409 	sub.w	r4, r4, r9
  40177c:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  401780:	2100      	movs	r1, #0
  401782:	2e00      	cmp	r6, #0
  401784:	d061      	beq.n	40184a <__udivmoddi4+0x16a>
  401786:	fa24 f40e 	lsr.w	r4, r4, lr
  40178a:	2300      	movs	r3, #0
  40178c:	6034      	str	r4, [r6, #0]
  40178e:	6073      	str	r3, [r6, #4]
  401790:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401794:	428b      	cmp	r3, r1
  401796:	d907      	bls.n	4017a8 <__udivmoddi4+0xc8>
  401798:	2e00      	cmp	r6, #0
  40179a:	d054      	beq.n	401846 <__udivmoddi4+0x166>
  40179c:	2100      	movs	r1, #0
  40179e:	e886 0021 	stmia.w	r6, {r0, r5}
  4017a2:	4608      	mov	r0, r1
  4017a4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4017a8:	fab3 f183 	clz	r1, r3
  4017ac:	2900      	cmp	r1, #0
  4017ae:	f040 808e 	bne.w	4018ce <__udivmoddi4+0x1ee>
  4017b2:	42ab      	cmp	r3, r5
  4017b4:	d302      	bcc.n	4017bc <__udivmoddi4+0xdc>
  4017b6:	4282      	cmp	r2, r0
  4017b8:	f200 80fa 	bhi.w	4019b0 <__udivmoddi4+0x2d0>
  4017bc:	1a84      	subs	r4, r0, r2
  4017be:	eb65 0503 	sbc.w	r5, r5, r3
  4017c2:	2001      	movs	r0, #1
  4017c4:	46ac      	mov	ip, r5
  4017c6:	2e00      	cmp	r6, #0
  4017c8:	d03f      	beq.n	40184a <__udivmoddi4+0x16a>
  4017ca:	e886 1010 	stmia.w	r6, {r4, ip}
  4017ce:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  4017d2:	b912      	cbnz	r2, 4017da <__udivmoddi4+0xfa>
  4017d4:	2701      	movs	r7, #1
  4017d6:	fbb7 f7f2 	udiv	r7, r7, r2
  4017da:	fab7 fe87 	clz	lr, r7
  4017de:	f1be 0f00 	cmp.w	lr, #0
  4017e2:	d134      	bne.n	40184e <__udivmoddi4+0x16e>
  4017e4:	1beb      	subs	r3, r5, r7
  4017e6:	0c3a      	lsrs	r2, r7, #16
  4017e8:	fa1f fc87 	uxth.w	ip, r7
  4017ec:	2101      	movs	r1, #1
  4017ee:	fbb3 f8f2 	udiv	r8, r3, r2
  4017f2:	0c25      	lsrs	r5, r4, #16
  4017f4:	fb02 3318 	mls	r3, r2, r8, r3
  4017f8:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4017fc:	fb0c f308 	mul.w	r3, ip, r8
  401800:	42ab      	cmp	r3, r5
  401802:	d907      	bls.n	401814 <__udivmoddi4+0x134>
  401804:	19ed      	adds	r5, r5, r7
  401806:	f108 30ff 	add.w	r0, r8, #4294967295
  40180a:	d202      	bcs.n	401812 <__udivmoddi4+0x132>
  40180c:	42ab      	cmp	r3, r5
  40180e:	f200 80d1 	bhi.w	4019b4 <__udivmoddi4+0x2d4>
  401812:	4680      	mov	r8, r0
  401814:	1aed      	subs	r5, r5, r3
  401816:	b2a3      	uxth	r3, r4
  401818:	fbb5 f0f2 	udiv	r0, r5, r2
  40181c:	fb02 5510 	mls	r5, r2, r0, r5
  401820:	ea43 4405 	orr.w	r4, r3, r5, lsl #16
  401824:	fb0c fc00 	mul.w	ip, ip, r0
  401828:	45a4      	cmp	ip, r4
  40182a:	d907      	bls.n	40183c <__udivmoddi4+0x15c>
  40182c:	19e4      	adds	r4, r4, r7
  40182e:	f100 33ff 	add.w	r3, r0, #4294967295
  401832:	d202      	bcs.n	40183a <__udivmoddi4+0x15a>
  401834:	45a4      	cmp	ip, r4
  401836:	f200 80b8 	bhi.w	4019aa <__udivmoddi4+0x2ca>
  40183a:	4618      	mov	r0, r3
  40183c:	eba4 040c 	sub.w	r4, r4, ip
  401840:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
  401844:	e79d      	b.n	401782 <__udivmoddi4+0xa2>
  401846:	4631      	mov	r1, r6
  401848:	4630      	mov	r0, r6
  40184a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  40184e:	f1ce 0420 	rsb	r4, lr, #32
  401852:	fa05 f30e 	lsl.w	r3, r5, lr
  401856:	fa07 f70e 	lsl.w	r7, r7, lr
  40185a:	fa20 f804 	lsr.w	r8, r0, r4
  40185e:	0c3a      	lsrs	r2, r7, #16
  401860:	fa25 f404 	lsr.w	r4, r5, r4
  401864:	ea48 0803 	orr.w	r8, r8, r3
  401868:	fbb4 f1f2 	udiv	r1, r4, r2
  40186c:	ea4f 4518 	mov.w	r5, r8, lsr #16
  401870:	fb02 4411 	mls	r4, r2, r1, r4
  401874:	fa1f fc87 	uxth.w	ip, r7
  401878:	ea45 4504 	orr.w	r5, r5, r4, lsl #16
  40187c:	fb01 f30c 	mul.w	r3, r1, ip
  401880:	42ab      	cmp	r3, r5
  401882:	fa00 f40e 	lsl.w	r4, r0, lr
  401886:	d909      	bls.n	40189c <__udivmoddi4+0x1bc>
  401888:	19ed      	adds	r5, r5, r7
  40188a:	f101 30ff 	add.w	r0, r1, #4294967295
  40188e:	f080 808a 	bcs.w	4019a6 <__udivmoddi4+0x2c6>
  401892:	42ab      	cmp	r3, r5
  401894:	f240 8087 	bls.w	4019a6 <__udivmoddi4+0x2c6>
  401898:	3902      	subs	r1, #2
  40189a:	443d      	add	r5, r7
  40189c:	1aeb      	subs	r3, r5, r3
  40189e:	fa1f f588 	uxth.w	r5, r8
  4018a2:	fbb3 f0f2 	udiv	r0, r3, r2
  4018a6:	fb02 3310 	mls	r3, r2, r0, r3
  4018aa:	ea45 4503 	orr.w	r5, r5, r3, lsl #16
  4018ae:	fb00 f30c 	mul.w	r3, r0, ip
  4018b2:	42ab      	cmp	r3, r5
  4018b4:	d907      	bls.n	4018c6 <__udivmoddi4+0x1e6>
  4018b6:	19ed      	adds	r5, r5, r7
  4018b8:	f100 38ff 	add.w	r8, r0, #4294967295
  4018bc:	d26f      	bcs.n	40199e <__udivmoddi4+0x2be>
  4018be:	42ab      	cmp	r3, r5
  4018c0:	d96d      	bls.n	40199e <__udivmoddi4+0x2be>
  4018c2:	3802      	subs	r0, #2
  4018c4:	443d      	add	r5, r7
  4018c6:	1aeb      	subs	r3, r5, r3
  4018c8:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
  4018cc:	e78f      	b.n	4017ee <__udivmoddi4+0x10e>
  4018ce:	f1c1 0720 	rsb	r7, r1, #32
  4018d2:	fa22 f807 	lsr.w	r8, r2, r7
  4018d6:	408b      	lsls	r3, r1
  4018d8:	fa05 f401 	lsl.w	r4, r5, r1
  4018dc:	ea48 0303 	orr.w	r3, r8, r3
  4018e0:	fa20 fe07 	lsr.w	lr, r0, r7
  4018e4:	ea4f 4c13 	mov.w	ip, r3, lsr #16
  4018e8:	40fd      	lsrs	r5, r7
  4018ea:	ea4e 0e04 	orr.w	lr, lr, r4
  4018ee:	fbb5 f9fc 	udiv	r9, r5, ip
  4018f2:	ea4f 441e 	mov.w	r4, lr, lsr #16
  4018f6:	fb0c 5519 	mls	r5, ip, r9, r5
  4018fa:	fa1f f883 	uxth.w	r8, r3
  4018fe:	ea44 4505 	orr.w	r5, r4, r5, lsl #16
  401902:	fb09 f408 	mul.w	r4, r9, r8
  401906:	42ac      	cmp	r4, r5
  401908:	fa02 f201 	lsl.w	r2, r2, r1
  40190c:	fa00 fa01 	lsl.w	sl, r0, r1
  401910:	d908      	bls.n	401924 <__udivmoddi4+0x244>
  401912:	18ed      	adds	r5, r5, r3
  401914:	f109 30ff 	add.w	r0, r9, #4294967295
  401918:	d243      	bcs.n	4019a2 <__udivmoddi4+0x2c2>
  40191a:	42ac      	cmp	r4, r5
  40191c:	d941      	bls.n	4019a2 <__udivmoddi4+0x2c2>
  40191e:	f1a9 0902 	sub.w	r9, r9, #2
  401922:	441d      	add	r5, r3
  401924:	1b2d      	subs	r5, r5, r4
  401926:	fa1f fe8e 	uxth.w	lr, lr
  40192a:	fbb5 f0fc 	udiv	r0, r5, ip
  40192e:	fb0c 5510 	mls	r5, ip, r0, r5
  401932:	ea4e 4405 	orr.w	r4, lr, r5, lsl #16
  401936:	fb00 f808 	mul.w	r8, r0, r8
  40193a:	45a0      	cmp	r8, r4
  40193c:	d907      	bls.n	40194e <__udivmoddi4+0x26e>
  40193e:	18e4      	adds	r4, r4, r3
  401940:	f100 35ff 	add.w	r5, r0, #4294967295
  401944:	d229      	bcs.n	40199a <__udivmoddi4+0x2ba>
  401946:	45a0      	cmp	r8, r4
  401948:	d927      	bls.n	40199a <__udivmoddi4+0x2ba>
  40194a:	3802      	subs	r0, #2
  40194c:	441c      	add	r4, r3
  40194e:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
  401952:	eba4 0408 	sub.w	r4, r4, r8
  401956:	fba0 8902 	umull	r8, r9, r0, r2
  40195a:	454c      	cmp	r4, r9
  40195c:	46c6      	mov	lr, r8
  40195e:	464d      	mov	r5, r9
  401960:	d315      	bcc.n	40198e <__udivmoddi4+0x2ae>
  401962:	d012      	beq.n	40198a <__udivmoddi4+0x2aa>
  401964:	b156      	cbz	r6, 40197c <__udivmoddi4+0x29c>
  401966:	ebba 030e 	subs.w	r3, sl, lr
  40196a:	eb64 0405 	sbc.w	r4, r4, r5
  40196e:	fa04 f707 	lsl.w	r7, r4, r7
  401972:	40cb      	lsrs	r3, r1
  401974:	431f      	orrs	r7, r3
  401976:	40cc      	lsrs	r4, r1
  401978:	6037      	str	r7, [r6, #0]
  40197a:	6074      	str	r4, [r6, #4]
  40197c:	2100      	movs	r1, #0
  40197e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  401982:	4618      	mov	r0, r3
  401984:	e6f8      	b.n	401778 <__udivmoddi4+0x98>
  401986:	4690      	mov	r8, r2
  401988:	e6e0      	b.n	40174c <__udivmoddi4+0x6c>
  40198a:	45c2      	cmp	sl, r8
  40198c:	d2ea      	bcs.n	401964 <__udivmoddi4+0x284>
  40198e:	ebb8 0e02 	subs.w	lr, r8, r2
  401992:	eb69 0503 	sbc.w	r5, r9, r3
  401996:	3801      	subs	r0, #1
  401998:	e7e4      	b.n	401964 <__udivmoddi4+0x284>
  40199a:	4628      	mov	r0, r5
  40199c:	e7d7      	b.n	40194e <__udivmoddi4+0x26e>
  40199e:	4640      	mov	r0, r8
  4019a0:	e791      	b.n	4018c6 <__udivmoddi4+0x1e6>
  4019a2:	4681      	mov	r9, r0
  4019a4:	e7be      	b.n	401924 <__udivmoddi4+0x244>
  4019a6:	4601      	mov	r1, r0
  4019a8:	e778      	b.n	40189c <__udivmoddi4+0x1bc>
  4019aa:	3802      	subs	r0, #2
  4019ac:	443c      	add	r4, r7
  4019ae:	e745      	b.n	40183c <__udivmoddi4+0x15c>
  4019b0:	4608      	mov	r0, r1
  4019b2:	e708      	b.n	4017c6 <__udivmoddi4+0xe6>
  4019b4:	f1a8 0802 	sub.w	r8, r8, #2
  4019b8:	443d      	add	r5, r7
  4019ba:	e72b      	b.n	401814 <__udivmoddi4+0x134>

004019bc <__aeabi_idiv0>:
  4019bc:	4770      	bx	lr
  4019be:	bf00      	nop

004019c0 <__libc_init_array>:
  4019c0:	b570      	push	{r4, r5, r6, lr}
  4019c2:	4e0f      	ldr	r6, [pc, #60]	; (401a00 <__libc_init_array+0x40>)
  4019c4:	4d0f      	ldr	r5, [pc, #60]	; (401a04 <__libc_init_array+0x44>)
  4019c6:	1b76      	subs	r6, r6, r5
  4019c8:	10b6      	asrs	r6, r6, #2
  4019ca:	bf18      	it	ne
  4019cc:	2400      	movne	r4, #0
  4019ce:	d005      	beq.n	4019dc <__libc_init_array+0x1c>
  4019d0:	3401      	adds	r4, #1
  4019d2:	f855 3b04 	ldr.w	r3, [r5], #4
  4019d6:	4798      	blx	r3
  4019d8:	42a6      	cmp	r6, r4
  4019da:	d1f9      	bne.n	4019d0 <__libc_init_array+0x10>
  4019dc:	4e0a      	ldr	r6, [pc, #40]	; (401a08 <__libc_init_array+0x48>)
  4019de:	4d0b      	ldr	r5, [pc, #44]	; (401a0c <__libc_init_array+0x4c>)
  4019e0:	1b76      	subs	r6, r6, r5
  4019e2:	f005 f94d 	bl	406c80 <_init>
  4019e6:	10b6      	asrs	r6, r6, #2
  4019e8:	bf18      	it	ne
  4019ea:	2400      	movne	r4, #0
  4019ec:	d006      	beq.n	4019fc <__libc_init_array+0x3c>
  4019ee:	3401      	adds	r4, #1
  4019f0:	f855 3b04 	ldr.w	r3, [r5], #4
  4019f4:	4798      	blx	r3
  4019f6:	42a6      	cmp	r6, r4
  4019f8:	d1f9      	bne.n	4019ee <__libc_init_array+0x2e>
  4019fa:	bd70      	pop	{r4, r5, r6, pc}
  4019fc:	bd70      	pop	{r4, r5, r6, pc}
  4019fe:	bf00      	nop
  401a00:	00406c8c 	.word	0x00406c8c
  401a04:	00406c8c 	.word	0x00406c8c
  401a08:	00406c94 	.word	0x00406c94
  401a0c:	00406c8c 	.word	0x00406c8c

00401a10 <memset>:
  401a10:	b470      	push	{r4, r5, r6}
  401a12:	0786      	lsls	r6, r0, #30
  401a14:	d046      	beq.n	401aa4 <memset+0x94>
  401a16:	1e54      	subs	r4, r2, #1
  401a18:	2a00      	cmp	r2, #0
  401a1a:	d041      	beq.n	401aa0 <memset+0x90>
  401a1c:	b2ca      	uxtb	r2, r1
  401a1e:	4603      	mov	r3, r0
  401a20:	e002      	b.n	401a28 <memset+0x18>
  401a22:	f114 34ff 	adds.w	r4, r4, #4294967295
  401a26:	d33b      	bcc.n	401aa0 <memset+0x90>
  401a28:	f803 2b01 	strb.w	r2, [r3], #1
  401a2c:	079d      	lsls	r5, r3, #30
  401a2e:	d1f8      	bne.n	401a22 <memset+0x12>
  401a30:	2c03      	cmp	r4, #3
  401a32:	d92e      	bls.n	401a92 <memset+0x82>
  401a34:	b2cd      	uxtb	r5, r1
  401a36:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
  401a3a:	2c0f      	cmp	r4, #15
  401a3c:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
  401a40:	d919      	bls.n	401a76 <memset+0x66>
  401a42:	f103 0210 	add.w	r2, r3, #16
  401a46:	4626      	mov	r6, r4
  401a48:	3e10      	subs	r6, #16
  401a4a:	2e0f      	cmp	r6, #15
  401a4c:	f842 5c10 	str.w	r5, [r2, #-16]
  401a50:	f842 5c0c 	str.w	r5, [r2, #-12]
  401a54:	f842 5c08 	str.w	r5, [r2, #-8]
  401a58:	f842 5c04 	str.w	r5, [r2, #-4]
  401a5c:	f102 0210 	add.w	r2, r2, #16
  401a60:	d8f2      	bhi.n	401a48 <memset+0x38>
  401a62:	f1a4 0210 	sub.w	r2, r4, #16
  401a66:	f022 020f 	bic.w	r2, r2, #15
  401a6a:	f004 040f 	and.w	r4, r4, #15
  401a6e:	3210      	adds	r2, #16
  401a70:	2c03      	cmp	r4, #3
  401a72:	4413      	add	r3, r2
  401a74:	d90d      	bls.n	401a92 <memset+0x82>
  401a76:	461e      	mov	r6, r3
  401a78:	4622      	mov	r2, r4
  401a7a:	3a04      	subs	r2, #4
  401a7c:	2a03      	cmp	r2, #3
  401a7e:	f846 5b04 	str.w	r5, [r6], #4
  401a82:	d8fa      	bhi.n	401a7a <memset+0x6a>
  401a84:	1f22      	subs	r2, r4, #4
  401a86:	f022 0203 	bic.w	r2, r2, #3
  401a8a:	3204      	adds	r2, #4
  401a8c:	4413      	add	r3, r2
  401a8e:	f004 0403 	and.w	r4, r4, #3
  401a92:	b12c      	cbz	r4, 401aa0 <memset+0x90>
  401a94:	b2c9      	uxtb	r1, r1
  401a96:	441c      	add	r4, r3
  401a98:	f803 1b01 	strb.w	r1, [r3], #1
  401a9c:	429c      	cmp	r4, r3
  401a9e:	d1fb      	bne.n	401a98 <memset+0x88>
  401aa0:	bc70      	pop	{r4, r5, r6}
  401aa2:	4770      	bx	lr
  401aa4:	4614      	mov	r4, r2
  401aa6:	4603      	mov	r3, r0
  401aa8:	e7c2      	b.n	401a30 <memset+0x20>
  401aaa:	bf00      	nop

00401aac <sprintf>:
  401aac:	b40e      	push	{r1, r2, r3}
  401aae:	b5f0      	push	{r4, r5, r6, r7, lr}
  401ab0:	b09c      	sub	sp, #112	; 0x70
  401ab2:	ab21      	add	r3, sp, #132	; 0x84
  401ab4:	490f      	ldr	r1, [pc, #60]	; (401af4 <sprintf+0x48>)
  401ab6:	f853 2b04 	ldr.w	r2, [r3], #4
  401aba:	9301      	str	r3, [sp, #4]
  401abc:	4605      	mov	r5, r0
  401abe:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
  401ac2:	6808      	ldr	r0, [r1, #0]
  401ac4:	9502      	str	r5, [sp, #8]
  401ac6:	f44f 7702 	mov.w	r7, #520	; 0x208
  401aca:	f64f 76ff 	movw	r6, #65535	; 0xffff
  401ace:	a902      	add	r1, sp, #8
  401ad0:	9506      	str	r5, [sp, #24]
  401ad2:	f8ad 7014 	strh.w	r7, [sp, #20]
  401ad6:	9404      	str	r4, [sp, #16]
  401ad8:	9407      	str	r4, [sp, #28]
  401ada:	f8ad 6016 	strh.w	r6, [sp, #22]
  401ade:	f000 f80b 	bl	401af8 <_svfprintf_r>
  401ae2:	9b02      	ldr	r3, [sp, #8]
  401ae4:	2200      	movs	r2, #0
  401ae6:	701a      	strb	r2, [r3, #0]
  401ae8:	b01c      	add	sp, #112	; 0x70
  401aea:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
  401aee:	b003      	add	sp, #12
  401af0:	4770      	bx	lr
  401af2:	bf00      	nop
  401af4:	20400020 	.word	0x20400020

00401af8 <_svfprintf_r>:
  401af8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  401afc:	b0c3      	sub	sp, #268	; 0x10c
  401afe:	460c      	mov	r4, r1
  401b00:	910b      	str	r1, [sp, #44]	; 0x2c
  401b02:	4692      	mov	sl, r2
  401b04:	930f      	str	r3, [sp, #60]	; 0x3c
  401b06:	900c      	str	r0, [sp, #48]	; 0x30
  401b08:	f002 fa0e 	bl	403f28 <_localeconv_r>
  401b0c:	6803      	ldr	r3, [r0, #0]
  401b0e:	931a      	str	r3, [sp, #104]	; 0x68
  401b10:	4618      	mov	r0, r3
  401b12:	f003 f8d5 	bl	404cc0 <strlen>
  401b16:	89a3      	ldrh	r3, [r4, #12]
  401b18:	9019      	str	r0, [sp, #100]	; 0x64
  401b1a:	0619      	lsls	r1, r3, #24
  401b1c:	d503      	bpl.n	401b26 <_svfprintf_r+0x2e>
  401b1e:	6923      	ldr	r3, [r4, #16]
  401b20:	2b00      	cmp	r3, #0
  401b22:	f001 8003 	beq.w	402b2c <_svfprintf_r+0x1034>
  401b26:	2300      	movs	r3, #0
  401b28:	f10d 09c8 	add.w	r9, sp, #200	; 0xc8
  401b2c:	9313      	str	r3, [sp, #76]	; 0x4c
  401b2e:	9315      	str	r3, [sp, #84]	; 0x54
  401b30:	9314      	str	r3, [sp, #80]	; 0x50
  401b32:	9327      	str	r3, [sp, #156]	; 0x9c
  401b34:	9326      	str	r3, [sp, #152]	; 0x98
  401b36:	9318      	str	r3, [sp, #96]	; 0x60
  401b38:	931b      	str	r3, [sp, #108]	; 0x6c
  401b3a:	9309      	str	r3, [sp, #36]	; 0x24
  401b3c:	f8cd 9094 	str.w	r9, [sp, #148]	; 0x94
  401b40:	46c8      	mov	r8, r9
  401b42:	9316      	str	r3, [sp, #88]	; 0x58
  401b44:	9317      	str	r3, [sp, #92]	; 0x5c
  401b46:	f89a 3000 	ldrb.w	r3, [sl]
  401b4a:	4654      	mov	r4, sl
  401b4c:	b1e3      	cbz	r3, 401b88 <_svfprintf_r+0x90>
  401b4e:	2b25      	cmp	r3, #37	; 0x25
  401b50:	d102      	bne.n	401b58 <_svfprintf_r+0x60>
  401b52:	e019      	b.n	401b88 <_svfprintf_r+0x90>
  401b54:	2b25      	cmp	r3, #37	; 0x25
  401b56:	d003      	beq.n	401b60 <_svfprintf_r+0x68>
  401b58:	f814 3f01 	ldrb.w	r3, [r4, #1]!
  401b5c:	2b00      	cmp	r3, #0
  401b5e:	d1f9      	bne.n	401b54 <_svfprintf_r+0x5c>
  401b60:	eba4 050a 	sub.w	r5, r4, sl
  401b64:	b185      	cbz	r5, 401b88 <_svfprintf_r+0x90>
  401b66:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401b68:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  401b6a:	f8c8 a000 	str.w	sl, [r8]
  401b6e:	3301      	adds	r3, #1
  401b70:	442a      	add	r2, r5
  401b72:	2b07      	cmp	r3, #7
  401b74:	f8c8 5004 	str.w	r5, [r8, #4]
  401b78:	9227      	str	r2, [sp, #156]	; 0x9c
  401b7a:	9326      	str	r3, [sp, #152]	; 0x98
  401b7c:	dc7f      	bgt.n	401c7e <_svfprintf_r+0x186>
  401b7e:	f108 0808 	add.w	r8, r8, #8
  401b82:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401b84:	442b      	add	r3, r5
  401b86:	9309      	str	r3, [sp, #36]	; 0x24
  401b88:	7823      	ldrb	r3, [r4, #0]
  401b8a:	2b00      	cmp	r3, #0
  401b8c:	d07f      	beq.n	401c8e <_svfprintf_r+0x196>
  401b8e:	2300      	movs	r3, #0
  401b90:	461a      	mov	r2, r3
  401b92:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  401b96:	4619      	mov	r1, r3
  401b98:	930d      	str	r3, [sp, #52]	; 0x34
  401b9a:	469b      	mov	fp, r3
  401b9c:	f04f 30ff 	mov.w	r0, #4294967295
  401ba0:	7863      	ldrb	r3, [r4, #1]
  401ba2:	900a      	str	r0, [sp, #40]	; 0x28
  401ba4:	f104 0a01 	add.w	sl, r4, #1
  401ba8:	f10a 0a01 	add.w	sl, sl, #1
  401bac:	f1a3 0020 	sub.w	r0, r3, #32
  401bb0:	2858      	cmp	r0, #88	; 0x58
  401bb2:	f200 83c1 	bhi.w	402338 <_svfprintf_r+0x840>
  401bb6:	e8df f010 	tbh	[pc, r0, lsl #1]
  401bba:	0238      	.short	0x0238
  401bbc:	03bf03bf 	.word	0x03bf03bf
  401bc0:	03bf0240 	.word	0x03bf0240
  401bc4:	03bf03bf 	.word	0x03bf03bf
  401bc8:	03bf03bf 	.word	0x03bf03bf
  401bcc:	024503bf 	.word	0x024503bf
  401bd0:	03bf0203 	.word	0x03bf0203
  401bd4:	026b005d 	.word	0x026b005d
  401bd8:	028603bf 	.word	0x028603bf
  401bdc:	039d039d 	.word	0x039d039d
  401be0:	039d039d 	.word	0x039d039d
  401be4:	039d039d 	.word	0x039d039d
  401be8:	039d039d 	.word	0x039d039d
  401bec:	03bf039d 	.word	0x03bf039d
  401bf0:	03bf03bf 	.word	0x03bf03bf
  401bf4:	03bf03bf 	.word	0x03bf03bf
  401bf8:	03bf03bf 	.word	0x03bf03bf
  401bfc:	03bf03bf 	.word	0x03bf03bf
  401c00:	033703bf 	.word	0x033703bf
  401c04:	03bf0357 	.word	0x03bf0357
  401c08:	03bf0357 	.word	0x03bf0357
  401c0c:	03bf03bf 	.word	0x03bf03bf
  401c10:	039803bf 	.word	0x039803bf
  401c14:	03bf03bf 	.word	0x03bf03bf
  401c18:	03bf03ad 	.word	0x03bf03ad
  401c1c:	03bf03bf 	.word	0x03bf03bf
  401c20:	03bf03bf 	.word	0x03bf03bf
  401c24:	03bf0259 	.word	0x03bf0259
  401c28:	031e03bf 	.word	0x031e03bf
  401c2c:	03bf03bf 	.word	0x03bf03bf
  401c30:	03bf03bf 	.word	0x03bf03bf
  401c34:	03bf03bf 	.word	0x03bf03bf
  401c38:	03bf03bf 	.word	0x03bf03bf
  401c3c:	03bf03bf 	.word	0x03bf03bf
  401c40:	02db02c6 	.word	0x02db02c6
  401c44:	03570357 	.word	0x03570357
  401c48:	028b0357 	.word	0x028b0357
  401c4c:	03bf02db 	.word	0x03bf02db
  401c50:	029003bf 	.word	0x029003bf
  401c54:	029d03bf 	.word	0x029d03bf
  401c58:	02b401cc 	.word	0x02b401cc
  401c5c:	03bf0208 	.word	0x03bf0208
  401c60:	03bf01e1 	.word	0x03bf01e1
  401c64:	03bf007e 	.word	0x03bf007e
  401c68:	020d03bf 	.word	0x020d03bf
  401c6c:	980d      	ldr	r0, [sp, #52]	; 0x34
  401c6e:	930f      	str	r3, [sp, #60]	; 0x3c
  401c70:	4240      	negs	r0, r0
  401c72:	900d      	str	r0, [sp, #52]	; 0x34
  401c74:	f04b 0b04 	orr.w	fp, fp, #4
  401c78:	f89a 3000 	ldrb.w	r3, [sl]
  401c7c:	e794      	b.n	401ba8 <_svfprintf_r+0xb0>
  401c7e:	aa25      	add	r2, sp, #148	; 0x94
  401c80:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401c82:	980c      	ldr	r0, [sp, #48]	; 0x30
  401c84:	f003 f88a 	bl	404d9c <__ssprint_r>
  401c88:	b940      	cbnz	r0, 401c9c <_svfprintf_r+0x1a4>
  401c8a:	46c8      	mov	r8, r9
  401c8c:	e779      	b.n	401b82 <_svfprintf_r+0x8a>
  401c8e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
  401c90:	b123      	cbz	r3, 401c9c <_svfprintf_r+0x1a4>
  401c92:	980c      	ldr	r0, [sp, #48]	; 0x30
  401c94:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401c96:	aa25      	add	r2, sp, #148	; 0x94
  401c98:	f003 f880 	bl	404d9c <__ssprint_r>
  401c9c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  401c9e:	899b      	ldrh	r3, [r3, #12]
  401ca0:	f013 0f40 	tst.w	r3, #64	; 0x40
  401ca4:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401ca6:	bf18      	it	ne
  401ca8:	f04f 33ff 	movne.w	r3, #4294967295
  401cac:	9309      	str	r3, [sp, #36]	; 0x24
  401cae:	9809      	ldr	r0, [sp, #36]	; 0x24
  401cb0:	b043      	add	sp, #268	; 0x10c
  401cb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  401cb6:	f01b 0f20 	tst.w	fp, #32
  401cba:	9311      	str	r3, [sp, #68]	; 0x44
  401cbc:	f040 81dd 	bne.w	40207a <_svfprintf_r+0x582>
  401cc0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401cc2:	f01b 0f10 	tst.w	fp, #16
  401cc6:	4613      	mov	r3, r2
  401cc8:	f040 856e 	bne.w	4027a8 <_svfprintf_r+0xcb0>
  401ccc:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401cd0:	f000 856a 	beq.w	4027a8 <_svfprintf_r+0xcb0>
  401cd4:	8814      	ldrh	r4, [r2, #0]
  401cd6:	3204      	adds	r2, #4
  401cd8:	2500      	movs	r5, #0
  401cda:	2301      	movs	r3, #1
  401cdc:	920f      	str	r2, [sp, #60]	; 0x3c
  401cde:	2700      	movs	r7, #0
  401ce0:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  401ce4:	990a      	ldr	r1, [sp, #40]	; 0x28
  401ce6:	1c4a      	adds	r2, r1, #1
  401ce8:	f000 8265 	beq.w	4021b6 <_svfprintf_r+0x6be>
  401cec:	f02b 0280 	bic.w	r2, fp, #128	; 0x80
  401cf0:	9207      	str	r2, [sp, #28]
  401cf2:	ea54 0205 	orrs.w	r2, r4, r5
  401cf6:	f040 8264 	bne.w	4021c2 <_svfprintf_r+0x6ca>
  401cfa:	2900      	cmp	r1, #0
  401cfc:	f040 843c 	bne.w	402578 <_svfprintf_r+0xa80>
  401d00:	2b00      	cmp	r3, #0
  401d02:	f040 84d7 	bne.w	4026b4 <_svfprintf_r+0xbbc>
  401d06:	f01b 0301 	ands.w	r3, fp, #1
  401d0a:	930e      	str	r3, [sp, #56]	; 0x38
  401d0c:	f000 8604 	beq.w	402918 <_svfprintf_r+0xe20>
  401d10:	ae42      	add	r6, sp, #264	; 0x108
  401d12:	2330      	movs	r3, #48	; 0x30
  401d14:	f806 3d41 	strb.w	r3, [r6, #-65]!
  401d18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401d1a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401d1c:	4293      	cmp	r3, r2
  401d1e:	bfb8      	it	lt
  401d20:	4613      	movlt	r3, r2
  401d22:	9308      	str	r3, [sp, #32]
  401d24:	2300      	movs	r3, #0
  401d26:	9312      	str	r3, [sp, #72]	; 0x48
  401d28:	b117      	cbz	r7, 401d30 <_svfprintf_r+0x238>
  401d2a:	9b08      	ldr	r3, [sp, #32]
  401d2c:	3301      	adds	r3, #1
  401d2e:	9308      	str	r3, [sp, #32]
  401d30:	9b07      	ldr	r3, [sp, #28]
  401d32:	f013 0302 	ands.w	r3, r3, #2
  401d36:	9310      	str	r3, [sp, #64]	; 0x40
  401d38:	d002      	beq.n	401d40 <_svfprintf_r+0x248>
  401d3a:	9b08      	ldr	r3, [sp, #32]
  401d3c:	3302      	adds	r3, #2
  401d3e:	9308      	str	r3, [sp, #32]
  401d40:	9b07      	ldr	r3, [sp, #28]
  401d42:	f013 0584 	ands.w	r5, r3, #132	; 0x84
  401d46:	f040 830e 	bne.w	402366 <_svfprintf_r+0x86e>
  401d4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401d4c:	9a08      	ldr	r2, [sp, #32]
  401d4e:	eba3 0b02 	sub.w	fp, r3, r2
  401d52:	f1bb 0f00 	cmp.w	fp, #0
  401d56:	f340 8306 	ble.w	402366 <_svfprintf_r+0x86e>
  401d5a:	f1bb 0f10 	cmp.w	fp, #16
  401d5e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401d60:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401d62:	dd29      	ble.n	401db8 <_svfprintf_r+0x2c0>
  401d64:	4643      	mov	r3, r8
  401d66:	4621      	mov	r1, r4
  401d68:	46a8      	mov	r8, r5
  401d6a:	2710      	movs	r7, #16
  401d6c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401d6e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401d70:	e006      	b.n	401d80 <_svfprintf_r+0x288>
  401d72:	f1ab 0b10 	sub.w	fp, fp, #16
  401d76:	f1bb 0f10 	cmp.w	fp, #16
  401d7a:	f103 0308 	add.w	r3, r3, #8
  401d7e:	dd18      	ble.n	401db2 <_svfprintf_r+0x2ba>
  401d80:	3201      	adds	r2, #1
  401d82:	48b7      	ldr	r0, [pc, #732]	; (402060 <_svfprintf_r+0x568>)
  401d84:	9226      	str	r2, [sp, #152]	; 0x98
  401d86:	3110      	adds	r1, #16
  401d88:	2a07      	cmp	r2, #7
  401d8a:	9127      	str	r1, [sp, #156]	; 0x9c
  401d8c:	e883 0081 	stmia.w	r3, {r0, r7}
  401d90:	ddef      	ble.n	401d72 <_svfprintf_r+0x27a>
  401d92:	aa25      	add	r2, sp, #148	; 0x94
  401d94:	4629      	mov	r1, r5
  401d96:	4620      	mov	r0, r4
  401d98:	f003 f800 	bl	404d9c <__ssprint_r>
  401d9c:	2800      	cmp	r0, #0
  401d9e:	f47f af7d 	bne.w	401c9c <_svfprintf_r+0x1a4>
  401da2:	f1ab 0b10 	sub.w	fp, fp, #16
  401da6:	f1bb 0f10 	cmp.w	fp, #16
  401daa:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401dac:	9a26      	ldr	r2, [sp, #152]	; 0x98
  401dae:	464b      	mov	r3, r9
  401db0:	dce6      	bgt.n	401d80 <_svfprintf_r+0x288>
  401db2:	4645      	mov	r5, r8
  401db4:	460c      	mov	r4, r1
  401db6:	4698      	mov	r8, r3
  401db8:	3201      	adds	r2, #1
  401dba:	4ba9      	ldr	r3, [pc, #676]	; (402060 <_svfprintf_r+0x568>)
  401dbc:	9226      	str	r2, [sp, #152]	; 0x98
  401dbe:	445c      	add	r4, fp
  401dc0:	2a07      	cmp	r2, #7
  401dc2:	9427      	str	r4, [sp, #156]	; 0x9c
  401dc4:	e888 0808 	stmia.w	r8, {r3, fp}
  401dc8:	f300 8498 	bgt.w	4026fc <_svfprintf_r+0xc04>
  401dcc:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401dd0:	f108 0808 	add.w	r8, r8, #8
  401dd4:	b177      	cbz	r7, 401df4 <_svfprintf_r+0x2fc>
  401dd6:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401dd8:	3301      	adds	r3, #1
  401dda:	3401      	adds	r4, #1
  401ddc:	f10d 0177 	add.w	r1, sp, #119	; 0x77
  401de0:	2201      	movs	r2, #1
  401de2:	2b07      	cmp	r3, #7
  401de4:	9427      	str	r4, [sp, #156]	; 0x9c
  401de6:	9326      	str	r3, [sp, #152]	; 0x98
  401de8:	e888 0006 	stmia.w	r8, {r1, r2}
  401dec:	f300 83db 	bgt.w	4025a6 <_svfprintf_r+0xaae>
  401df0:	f108 0808 	add.w	r8, r8, #8
  401df4:	9b10      	ldr	r3, [sp, #64]	; 0x40
  401df6:	b16b      	cbz	r3, 401e14 <_svfprintf_r+0x31c>
  401df8:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401dfa:	3301      	adds	r3, #1
  401dfc:	3402      	adds	r4, #2
  401dfe:	a91e      	add	r1, sp, #120	; 0x78
  401e00:	2202      	movs	r2, #2
  401e02:	2b07      	cmp	r3, #7
  401e04:	9427      	str	r4, [sp, #156]	; 0x9c
  401e06:	9326      	str	r3, [sp, #152]	; 0x98
  401e08:	e888 0006 	stmia.w	r8, {r1, r2}
  401e0c:	f300 83d6 	bgt.w	4025bc <_svfprintf_r+0xac4>
  401e10:	f108 0808 	add.w	r8, r8, #8
  401e14:	2d80      	cmp	r5, #128	; 0x80
  401e16:	f000 8315 	beq.w	402444 <_svfprintf_r+0x94c>
  401e1a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  401e1c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  401e1e:	1a9f      	subs	r7, r3, r2
  401e20:	2f00      	cmp	r7, #0
  401e22:	dd36      	ble.n	401e92 <_svfprintf_r+0x39a>
  401e24:	2f10      	cmp	r7, #16
  401e26:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e28:	4d8e      	ldr	r5, [pc, #568]	; (402064 <_svfprintf_r+0x56c>)
  401e2a:	dd27      	ble.n	401e7c <_svfprintf_r+0x384>
  401e2c:	4642      	mov	r2, r8
  401e2e:	4621      	mov	r1, r4
  401e30:	46b0      	mov	r8, r6
  401e32:	f04f 0b10 	mov.w	fp, #16
  401e36:	462e      	mov	r6, r5
  401e38:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  401e3a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  401e3c:	e004      	b.n	401e48 <_svfprintf_r+0x350>
  401e3e:	3f10      	subs	r7, #16
  401e40:	2f10      	cmp	r7, #16
  401e42:	f102 0208 	add.w	r2, r2, #8
  401e46:	dd15      	ble.n	401e74 <_svfprintf_r+0x37c>
  401e48:	3301      	adds	r3, #1
  401e4a:	3110      	adds	r1, #16
  401e4c:	2b07      	cmp	r3, #7
  401e4e:	9127      	str	r1, [sp, #156]	; 0x9c
  401e50:	9326      	str	r3, [sp, #152]	; 0x98
  401e52:	e882 0840 	stmia.w	r2, {r6, fp}
  401e56:	ddf2      	ble.n	401e3e <_svfprintf_r+0x346>
  401e58:	aa25      	add	r2, sp, #148	; 0x94
  401e5a:	4629      	mov	r1, r5
  401e5c:	4620      	mov	r0, r4
  401e5e:	f002 ff9d 	bl	404d9c <__ssprint_r>
  401e62:	2800      	cmp	r0, #0
  401e64:	f47f af1a 	bne.w	401c9c <_svfprintf_r+0x1a4>
  401e68:	3f10      	subs	r7, #16
  401e6a:	2f10      	cmp	r7, #16
  401e6c:	9927      	ldr	r1, [sp, #156]	; 0x9c
  401e6e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e70:	464a      	mov	r2, r9
  401e72:	dce9      	bgt.n	401e48 <_svfprintf_r+0x350>
  401e74:	4635      	mov	r5, r6
  401e76:	460c      	mov	r4, r1
  401e78:	4646      	mov	r6, r8
  401e7a:	4690      	mov	r8, r2
  401e7c:	3301      	adds	r3, #1
  401e7e:	443c      	add	r4, r7
  401e80:	2b07      	cmp	r3, #7
  401e82:	9427      	str	r4, [sp, #156]	; 0x9c
  401e84:	9326      	str	r3, [sp, #152]	; 0x98
  401e86:	e888 00a0 	stmia.w	r8, {r5, r7}
  401e8a:	f300 8381 	bgt.w	402590 <_svfprintf_r+0xa98>
  401e8e:	f108 0808 	add.w	r8, r8, #8
  401e92:	9b07      	ldr	r3, [sp, #28]
  401e94:	05df      	lsls	r7, r3, #23
  401e96:	f100 8268 	bmi.w	40236a <_svfprintf_r+0x872>
  401e9a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401e9c:	990e      	ldr	r1, [sp, #56]	; 0x38
  401e9e:	f8c8 6000 	str.w	r6, [r8]
  401ea2:	3301      	adds	r3, #1
  401ea4:	440c      	add	r4, r1
  401ea6:	2b07      	cmp	r3, #7
  401ea8:	9427      	str	r4, [sp, #156]	; 0x9c
  401eaa:	f8c8 1004 	str.w	r1, [r8, #4]
  401eae:	9326      	str	r3, [sp, #152]	; 0x98
  401eb0:	f300 834d 	bgt.w	40254e <_svfprintf_r+0xa56>
  401eb4:	f108 0808 	add.w	r8, r8, #8
  401eb8:	9b07      	ldr	r3, [sp, #28]
  401eba:	075b      	lsls	r3, r3, #29
  401ebc:	d53a      	bpl.n	401f34 <_svfprintf_r+0x43c>
  401ebe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  401ec0:	9a08      	ldr	r2, [sp, #32]
  401ec2:	1a9d      	subs	r5, r3, r2
  401ec4:	2d00      	cmp	r5, #0
  401ec6:	dd35      	ble.n	401f34 <_svfprintf_r+0x43c>
  401ec8:	2d10      	cmp	r5, #16
  401eca:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401ecc:	dd20      	ble.n	401f10 <_svfprintf_r+0x418>
  401ece:	2610      	movs	r6, #16
  401ed0:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  401ed2:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
  401ed6:	e004      	b.n	401ee2 <_svfprintf_r+0x3ea>
  401ed8:	3d10      	subs	r5, #16
  401eda:	2d10      	cmp	r5, #16
  401edc:	f108 0808 	add.w	r8, r8, #8
  401ee0:	dd16      	ble.n	401f10 <_svfprintf_r+0x418>
  401ee2:	3301      	adds	r3, #1
  401ee4:	4a5e      	ldr	r2, [pc, #376]	; (402060 <_svfprintf_r+0x568>)
  401ee6:	9326      	str	r3, [sp, #152]	; 0x98
  401ee8:	3410      	adds	r4, #16
  401eea:	2b07      	cmp	r3, #7
  401eec:	9427      	str	r4, [sp, #156]	; 0x9c
  401eee:	e888 0044 	stmia.w	r8, {r2, r6}
  401ef2:	ddf1      	ble.n	401ed8 <_svfprintf_r+0x3e0>
  401ef4:	aa25      	add	r2, sp, #148	; 0x94
  401ef6:	4659      	mov	r1, fp
  401ef8:	4638      	mov	r0, r7
  401efa:	f002 ff4f 	bl	404d9c <__ssprint_r>
  401efe:	2800      	cmp	r0, #0
  401f00:	f47f aecc 	bne.w	401c9c <_svfprintf_r+0x1a4>
  401f04:	3d10      	subs	r5, #16
  401f06:	2d10      	cmp	r5, #16
  401f08:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401f0a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  401f0c:	46c8      	mov	r8, r9
  401f0e:	dce8      	bgt.n	401ee2 <_svfprintf_r+0x3ea>
  401f10:	3301      	adds	r3, #1
  401f12:	4a53      	ldr	r2, [pc, #332]	; (402060 <_svfprintf_r+0x568>)
  401f14:	9326      	str	r3, [sp, #152]	; 0x98
  401f16:	442c      	add	r4, r5
  401f18:	2b07      	cmp	r3, #7
  401f1a:	9427      	str	r4, [sp, #156]	; 0x9c
  401f1c:	e888 0024 	stmia.w	r8, {r2, r5}
  401f20:	dd08      	ble.n	401f34 <_svfprintf_r+0x43c>
  401f22:	aa25      	add	r2, sp, #148	; 0x94
  401f24:	990b      	ldr	r1, [sp, #44]	; 0x2c
  401f26:	980c      	ldr	r0, [sp, #48]	; 0x30
  401f28:	f002 ff38 	bl	404d9c <__ssprint_r>
  401f2c:	2800      	cmp	r0, #0
  401f2e:	f47f aeb5 	bne.w	401c9c <_svfprintf_r+0x1a4>
  401f32:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  401f34:	9b09      	ldr	r3, [sp, #36]	; 0x24
  401f36:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  401f38:	9908      	ldr	r1, [sp, #32]
  401f3a:	428a      	cmp	r2, r1
  401f3c:	bfac      	ite	ge
  401f3e:	189b      	addge	r3, r3, r2
  401f40:	185b      	addlt	r3, r3, r1
  401f42:	9309      	str	r3, [sp, #36]	; 0x24
  401f44:	2c00      	cmp	r4, #0
  401f46:	f040 830d 	bne.w	402564 <_svfprintf_r+0xa6c>
  401f4a:	2300      	movs	r3, #0
  401f4c:	9326      	str	r3, [sp, #152]	; 0x98
  401f4e:	46c8      	mov	r8, r9
  401f50:	e5f9      	b.n	401b46 <_svfprintf_r+0x4e>
  401f52:	9311      	str	r3, [sp, #68]	; 0x44
  401f54:	f01b 0320 	ands.w	r3, fp, #32
  401f58:	f040 81e3 	bne.w	402322 <_svfprintf_r+0x82a>
  401f5c:	f01b 0210 	ands.w	r2, fp, #16
  401f60:	f040 842e 	bne.w	4027c0 <_svfprintf_r+0xcc8>
  401f64:	f01b 0340 	ands.w	r3, fp, #64	; 0x40
  401f68:	f000 842a 	beq.w	4027c0 <_svfprintf_r+0xcc8>
  401f6c:	990f      	ldr	r1, [sp, #60]	; 0x3c
  401f6e:	4613      	mov	r3, r2
  401f70:	460a      	mov	r2, r1
  401f72:	3204      	adds	r2, #4
  401f74:	880c      	ldrh	r4, [r1, #0]
  401f76:	920f      	str	r2, [sp, #60]	; 0x3c
  401f78:	2500      	movs	r5, #0
  401f7a:	e6b0      	b.n	401cde <_svfprintf_r+0x1e6>
  401f7c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401f7e:	9311      	str	r3, [sp, #68]	; 0x44
  401f80:	6816      	ldr	r6, [r2, #0]
  401f82:	2400      	movs	r4, #0
  401f84:	f88d 4077 	strb.w	r4, [sp, #119]	; 0x77
  401f88:	1d15      	adds	r5, r2, #4
  401f8a:	2e00      	cmp	r6, #0
  401f8c:	f000 86a7 	beq.w	402cde <_svfprintf_r+0x11e6>
  401f90:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  401f92:	1c53      	adds	r3, r2, #1
  401f94:	f000 8609 	beq.w	402baa <_svfprintf_r+0x10b2>
  401f98:	4621      	mov	r1, r4
  401f9a:	4630      	mov	r0, r6
  401f9c:	f002 fa88 	bl	4044b0 <memchr>
  401fa0:	2800      	cmp	r0, #0
  401fa2:	f000 86e1 	beq.w	402d68 <_svfprintf_r+0x1270>
  401fa6:	1b83      	subs	r3, r0, r6
  401fa8:	930e      	str	r3, [sp, #56]	; 0x38
  401faa:	940a      	str	r4, [sp, #40]	; 0x28
  401fac:	950f      	str	r5, [sp, #60]	; 0x3c
  401fae:	f8cd b01c 	str.w	fp, [sp, #28]
  401fb2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  401fb6:	9308      	str	r3, [sp, #32]
  401fb8:	9412      	str	r4, [sp, #72]	; 0x48
  401fba:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  401fbe:	e6b3      	b.n	401d28 <_svfprintf_r+0x230>
  401fc0:	f89a 3000 	ldrb.w	r3, [sl]
  401fc4:	2201      	movs	r2, #1
  401fc6:	212b      	movs	r1, #43	; 0x2b
  401fc8:	e5ee      	b.n	401ba8 <_svfprintf_r+0xb0>
  401fca:	f04b 0b20 	orr.w	fp, fp, #32
  401fce:	f89a 3000 	ldrb.w	r3, [sl]
  401fd2:	e5e9      	b.n	401ba8 <_svfprintf_r+0xb0>
  401fd4:	9311      	str	r3, [sp, #68]	; 0x44
  401fd6:	2a00      	cmp	r2, #0
  401fd8:	f040 8795 	bne.w	402f06 <_svfprintf_r+0x140e>
  401fdc:	4b22      	ldr	r3, [pc, #136]	; (402068 <_svfprintf_r+0x570>)
  401fde:	9318      	str	r3, [sp, #96]	; 0x60
  401fe0:	f01b 0f20 	tst.w	fp, #32
  401fe4:	f040 8111 	bne.w	40220a <_svfprintf_r+0x712>
  401fe8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  401fea:	f01b 0f10 	tst.w	fp, #16
  401fee:	4613      	mov	r3, r2
  401ff0:	f040 83e1 	bne.w	4027b6 <_svfprintf_r+0xcbe>
  401ff4:	f01b 0f40 	tst.w	fp, #64	; 0x40
  401ff8:	f000 83dd 	beq.w	4027b6 <_svfprintf_r+0xcbe>
  401ffc:	3304      	adds	r3, #4
  401ffe:	8814      	ldrh	r4, [r2, #0]
  402000:	930f      	str	r3, [sp, #60]	; 0x3c
  402002:	2500      	movs	r5, #0
  402004:	f01b 0f01 	tst.w	fp, #1
  402008:	f000 810c 	beq.w	402224 <_svfprintf_r+0x72c>
  40200c:	ea54 0305 	orrs.w	r3, r4, r5
  402010:	f000 8108 	beq.w	402224 <_svfprintf_r+0x72c>
  402014:	2330      	movs	r3, #48	; 0x30
  402016:	f89d 2044 	ldrb.w	r2, [sp, #68]	; 0x44
  40201a:	f88d 3078 	strb.w	r3, [sp, #120]	; 0x78
  40201e:	f88d 2079 	strb.w	r2, [sp, #121]	; 0x79
  402022:	f04b 0b02 	orr.w	fp, fp, #2
  402026:	2302      	movs	r3, #2
  402028:	e659      	b.n	401cde <_svfprintf_r+0x1e6>
  40202a:	f89a 3000 	ldrb.w	r3, [sl]
  40202e:	2900      	cmp	r1, #0
  402030:	f47f adba 	bne.w	401ba8 <_svfprintf_r+0xb0>
  402034:	2201      	movs	r2, #1
  402036:	2120      	movs	r1, #32
  402038:	e5b6      	b.n	401ba8 <_svfprintf_r+0xb0>
  40203a:	f04b 0b01 	orr.w	fp, fp, #1
  40203e:	f89a 3000 	ldrb.w	r3, [sl]
  402042:	e5b1      	b.n	401ba8 <_svfprintf_r+0xb0>
  402044:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
  402046:	6823      	ldr	r3, [r4, #0]
  402048:	930d      	str	r3, [sp, #52]	; 0x34
  40204a:	4618      	mov	r0, r3
  40204c:	2800      	cmp	r0, #0
  40204e:	4623      	mov	r3, r4
  402050:	f103 0304 	add.w	r3, r3, #4
  402054:	f6ff ae0a 	blt.w	401c6c <_svfprintf_r+0x174>
  402058:	930f      	str	r3, [sp, #60]	; 0x3c
  40205a:	f89a 3000 	ldrb.w	r3, [sl]
  40205e:	e5a3      	b.n	401ba8 <_svfprintf_r+0xb0>
  402060:	00406a3c 	.word	0x00406a3c
  402064:	00406a4c 	.word	0x00406a4c
  402068:	00406a1c 	.word	0x00406a1c
  40206c:	f04b 0b10 	orr.w	fp, fp, #16
  402070:	f01b 0f20 	tst.w	fp, #32
  402074:	9311      	str	r3, [sp, #68]	; 0x44
  402076:	f43f ae23 	beq.w	401cc0 <_svfprintf_r+0x1c8>
  40207a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40207c:	3507      	adds	r5, #7
  40207e:	f025 0307 	bic.w	r3, r5, #7
  402082:	f103 0208 	add.w	r2, r3, #8
  402086:	e9d3 4500 	ldrd	r4, r5, [r3]
  40208a:	920f      	str	r2, [sp, #60]	; 0x3c
  40208c:	2301      	movs	r3, #1
  40208e:	e626      	b.n	401cde <_svfprintf_r+0x1e6>
  402090:	f89a 3000 	ldrb.w	r3, [sl]
  402094:	2b2a      	cmp	r3, #42	; 0x2a
  402096:	f10a 0401 	add.w	r4, sl, #1
  40209a:	f000 8727 	beq.w	402eec <_svfprintf_r+0x13f4>
  40209e:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4020a2:	2809      	cmp	r0, #9
  4020a4:	46a2      	mov	sl, r4
  4020a6:	f200 86ad 	bhi.w	402e04 <_svfprintf_r+0x130c>
  4020aa:	2300      	movs	r3, #0
  4020ac:	461c      	mov	r4, r3
  4020ae:	f81a 3b01 	ldrb.w	r3, [sl], #1
  4020b2:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  4020b6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  4020ba:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4020be:	2809      	cmp	r0, #9
  4020c0:	d9f5      	bls.n	4020ae <_svfprintf_r+0x5b6>
  4020c2:	940a      	str	r4, [sp, #40]	; 0x28
  4020c4:	e572      	b.n	401bac <_svfprintf_r+0xb4>
  4020c6:	f04b 0b80 	orr.w	fp, fp, #128	; 0x80
  4020ca:	f89a 3000 	ldrb.w	r3, [sl]
  4020ce:	e56b      	b.n	401ba8 <_svfprintf_r+0xb0>
  4020d0:	f04b 0b40 	orr.w	fp, fp, #64	; 0x40
  4020d4:	f89a 3000 	ldrb.w	r3, [sl]
  4020d8:	e566      	b.n	401ba8 <_svfprintf_r+0xb0>
  4020da:	f89a 3000 	ldrb.w	r3, [sl]
  4020de:	2b6c      	cmp	r3, #108	; 0x6c
  4020e0:	bf03      	ittte	eq
  4020e2:	f89a 3001 	ldrbeq.w	r3, [sl, #1]
  4020e6:	f04b 0b20 	orreq.w	fp, fp, #32
  4020ea:	f10a 0a01 	addeq.w	sl, sl, #1
  4020ee:	f04b 0b10 	orrne.w	fp, fp, #16
  4020f2:	e559      	b.n	401ba8 <_svfprintf_r+0xb0>
  4020f4:	2a00      	cmp	r2, #0
  4020f6:	f040 8711 	bne.w	402f1c <_svfprintf_r+0x1424>
  4020fa:	f01b 0f20 	tst.w	fp, #32
  4020fe:	f040 84f9 	bne.w	402af4 <_svfprintf_r+0xffc>
  402102:	f01b 0f10 	tst.w	fp, #16
  402106:	f040 84ac 	bne.w	402a62 <_svfprintf_r+0xf6a>
  40210a:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40210e:	f000 84a8 	beq.w	402a62 <_svfprintf_r+0xf6a>
  402112:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402114:	6813      	ldr	r3, [r2, #0]
  402116:	3204      	adds	r2, #4
  402118:	920f      	str	r2, [sp, #60]	; 0x3c
  40211a:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
  40211e:	801a      	strh	r2, [r3, #0]
  402120:	e511      	b.n	401b46 <_svfprintf_r+0x4e>
  402122:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402124:	4bb3      	ldr	r3, [pc, #716]	; (4023f4 <_svfprintf_r+0x8fc>)
  402126:	680c      	ldr	r4, [r1, #0]
  402128:	9318      	str	r3, [sp, #96]	; 0x60
  40212a:	2230      	movs	r2, #48	; 0x30
  40212c:	2378      	movs	r3, #120	; 0x78
  40212e:	3104      	adds	r1, #4
  402130:	f88d 3079 	strb.w	r3, [sp, #121]	; 0x79
  402134:	9311      	str	r3, [sp, #68]	; 0x44
  402136:	f04b 0b02 	orr.w	fp, fp, #2
  40213a:	910f      	str	r1, [sp, #60]	; 0x3c
  40213c:	2500      	movs	r5, #0
  40213e:	f88d 2078 	strb.w	r2, [sp, #120]	; 0x78
  402142:	2302      	movs	r3, #2
  402144:	e5cb      	b.n	401cde <_svfprintf_r+0x1e6>
  402146:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402148:	9311      	str	r3, [sp, #68]	; 0x44
  40214a:	680a      	ldr	r2, [r1, #0]
  40214c:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402150:	2300      	movs	r3, #0
  402152:	460a      	mov	r2, r1
  402154:	461f      	mov	r7, r3
  402156:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40215a:	3204      	adds	r2, #4
  40215c:	2301      	movs	r3, #1
  40215e:	9308      	str	r3, [sp, #32]
  402160:	f8cd b01c 	str.w	fp, [sp, #28]
  402164:	970a      	str	r7, [sp, #40]	; 0x28
  402166:	9712      	str	r7, [sp, #72]	; 0x48
  402168:	920f      	str	r2, [sp, #60]	; 0x3c
  40216a:	930e      	str	r3, [sp, #56]	; 0x38
  40216c:	ae28      	add	r6, sp, #160	; 0xa0
  40216e:	e5df      	b.n	401d30 <_svfprintf_r+0x238>
  402170:	9311      	str	r3, [sp, #68]	; 0x44
  402172:	2a00      	cmp	r2, #0
  402174:	f040 86ea 	bne.w	402f4c <_svfprintf_r+0x1454>
  402178:	f01b 0f20 	tst.w	fp, #32
  40217c:	d15d      	bne.n	40223a <_svfprintf_r+0x742>
  40217e:	f01b 0f10 	tst.w	fp, #16
  402182:	f040 8308 	bne.w	402796 <_svfprintf_r+0xc9e>
  402186:	f01b 0f40 	tst.w	fp, #64	; 0x40
  40218a:	f000 8304 	beq.w	402796 <_svfprintf_r+0xc9e>
  40218e:	990f      	ldr	r1, [sp, #60]	; 0x3c
  402190:	f9b1 4000 	ldrsh.w	r4, [r1]
  402194:	3104      	adds	r1, #4
  402196:	17e5      	asrs	r5, r4, #31
  402198:	4622      	mov	r2, r4
  40219a:	462b      	mov	r3, r5
  40219c:	910f      	str	r1, [sp, #60]	; 0x3c
  40219e:	2a00      	cmp	r2, #0
  4021a0:	f173 0300 	sbcs.w	r3, r3, #0
  4021a4:	db58      	blt.n	402258 <_svfprintf_r+0x760>
  4021a6:	990a      	ldr	r1, [sp, #40]	; 0x28
  4021a8:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4021ac:	1c4a      	adds	r2, r1, #1
  4021ae:	f04f 0301 	mov.w	r3, #1
  4021b2:	f47f ad9b 	bne.w	401cec <_svfprintf_r+0x1f4>
  4021b6:	ea54 0205 	orrs.w	r2, r4, r5
  4021ba:	f000 81df 	beq.w	40257c <_svfprintf_r+0xa84>
  4021be:	f8cd b01c 	str.w	fp, [sp, #28]
  4021c2:	2b01      	cmp	r3, #1
  4021c4:	f000 827b 	beq.w	4026be <_svfprintf_r+0xbc6>
  4021c8:	2b02      	cmp	r3, #2
  4021ca:	f040 8206 	bne.w	4025da <_svfprintf_r+0xae2>
  4021ce:	9818      	ldr	r0, [sp, #96]	; 0x60
  4021d0:	464e      	mov	r6, r9
  4021d2:	0923      	lsrs	r3, r4, #4
  4021d4:	f004 010f 	and.w	r1, r4, #15
  4021d8:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
  4021dc:	092a      	lsrs	r2, r5, #4
  4021de:	461c      	mov	r4, r3
  4021e0:	4615      	mov	r5, r2
  4021e2:	5c43      	ldrb	r3, [r0, r1]
  4021e4:	f806 3d01 	strb.w	r3, [r6, #-1]!
  4021e8:	ea54 0305 	orrs.w	r3, r4, r5
  4021ec:	d1f1      	bne.n	4021d2 <_svfprintf_r+0x6da>
  4021ee:	eba9 0306 	sub.w	r3, r9, r6
  4021f2:	930e      	str	r3, [sp, #56]	; 0x38
  4021f4:	e590      	b.n	401d18 <_svfprintf_r+0x220>
  4021f6:	9311      	str	r3, [sp, #68]	; 0x44
  4021f8:	2a00      	cmp	r2, #0
  4021fa:	f040 86a3 	bne.w	402f44 <_svfprintf_r+0x144c>
  4021fe:	4b7e      	ldr	r3, [pc, #504]	; (4023f8 <_svfprintf_r+0x900>)
  402200:	9318      	str	r3, [sp, #96]	; 0x60
  402202:	f01b 0f20 	tst.w	fp, #32
  402206:	f43f aeef 	beq.w	401fe8 <_svfprintf_r+0x4f0>
  40220a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40220c:	3507      	adds	r5, #7
  40220e:	f025 0307 	bic.w	r3, r5, #7
  402212:	f103 0208 	add.w	r2, r3, #8
  402216:	f01b 0f01 	tst.w	fp, #1
  40221a:	920f      	str	r2, [sp, #60]	; 0x3c
  40221c:	e9d3 4500 	ldrd	r4, r5, [r3]
  402220:	f47f aef4 	bne.w	40200c <_svfprintf_r+0x514>
  402224:	2302      	movs	r3, #2
  402226:	e55a      	b.n	401cde <_svfprintf_r+0x1e6>
  402228:	9311      	str	r3, [sp, #68]	; 0x44
  40222a:	2a00      	cmp	r2, #0
  40222c:	f040 8686 	bne.w	402f3c <_svfprintf_r+0x1444>
  402230:	f04b 0b10 	orr.w	fp, fp, #16
  402234:	f01b 0f20 	tst.w	fp, #32
  402238:	d0a1      	beq.n	40217e <_svfprintf_r+0x686>
  40223a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  40223c:	3507      	adds	r5, #7
  40223e:	f025 0507 	bic.w	r5, r5, #7
  402242:	e9d5 2300 	ldrd	r2, r3, [r5]
  402246:	2a00      	cmp	r2, #0
  402248:	f105 0108 	add.w	r1, r5, #8
  40224c:	461d      	mov	r5, r3
  40224e:	f173 0300 	sbcs.w	r3, r3, #0
  402252:	910f      	str	r1, [sp, #60]	; 0x3c
  402254:	4614      	mov	r4, r2
  402256:	daa6      	bge.n	4021a6 <_svfprintf_r+0x6ae>
  402258:	272d      	movs	r7, #45	; 0x2d
  40225a:	4264      	negs	r4, r4
  40225c:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
  402260:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402264:	2301      	movs	r3, #1
  402266:	e53d      	b.n	401ce4 <_svfprintf_r+0x1ec>
  402268:	9311      	str	r3, [sp, #68]	; 0x44
  40226a:	2a00      	cmp	r2, #0
  40226c:	f040 8662 	bne.w	402f34 <_svfprintf_r+0x143c>
  402270:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402272:	3507      	adds	r5, #7
  402274:	f025 0307 	bic.w	r3, r5, #7
  402278:	f103 0208 	add.w	r2, r3, #8
  40227c:	920f      	str	r2, [sp, #60]	; 0x3c
  40227e:	681a      	ldr	r2, [r3, #0]
  402280:	9215      	str	r2, [sp, #84]	; 0x54
  402282:	685b      	ldr	r3, [r3, #4]
  402284:	9314      	str	r3, [sp, #80]	; 0x50
  402286:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402288:	9d15      	ldr	r5, [sp, #84]	; 0x54
  40228a:	f023 4400 	bic.w	r4, r3, #2147483648	; 0x80000000
  40228e:	4628      	mov	r0, r5
  402290:	4621      	mov	r1, r4
  402292:	f04f 32ff 	mov.w	r2, #4294967295
  402296:	4b59      	ldr	r3, [pc, #356]	; (4023fc <_svfprintf_r+0x904>)
  402298:	f003 fe46 	bl	405f28 <__aeabi_dcmpun>
  40229c:	2800      	cmp	r0, #0
  40229e:	f040 834a 	bne.w	402936 <_svfprintf_r+0xe3e>
  4022a2:	4628      	mov	r0, r5
  4022a4:	4621      	mov	r1, r4
  4022a6:	f04f 32ff 	mov.w	r2, #4294967295
  4022aa:	4b54      	ldr	r3, [pc, #336]	; (4023fc <_svfprintf_r+0x904>)
  4022ac:	f003 fe1e 	bl	405eec <__aeabi_dcmple>
  4022b0:	2800      	cmp	r0, #0
  4022b2:	f040 8340 	bne.w	402936 <_svfprintf_r+0xe3e>
  4022b6:	a815      	add	r0, sp, #84	; 0x54
  4022b8:	c80d      	ldmia	r0, {r0, r2, r3}
  4022ba:	9914      	ldr	r1, [sp, #80]	; 0x50
  4022bc:	f003 fe0c 	bl	405ed8 <__aeabi_dcmplt>
  4022c0:	2800      	cmp	r0, #0
  4022c2:	f040 8530 	bne.w	402d26 <_svfprintf_r+0x122e>
  4022c6:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  4022ca:	4e4d      	ldr	r6, [pc, #308]	; (402400 <_svfprintf_r+0x908>)
  4022cc:	4b4d      	ldr	r3, [pc, #308]	; (402404 <_svfprintf_r+0x90c>)
  4022ce:	f02b 0080 	bic.w	r0, fp, #128	; 0x80
  4022d2:	9007      	str	r0, [sp, #28]
  4022d4:	9811      	ldr	r0, [sp, #68]	; 0x44
  4022d6:	2203      	movs	r2, #3
  4022d8:	2100      	movs	r1, #0
  4022da:	9208      	str	r2, [sp, #32]
  4022dc:	910a      	str	r1, [sp, #40]	; 0x28
  4022de:	2847      	cmp	r0, #71	; 0x47
  4022e0:	bfd8      	it	le
  4022e2:	461e      	movle	r6, r3
  4022e4:	920e      	str	r2, [sp, #56]	; 0x38
  4022e6:	9112      	str	r1, [sp, #72]	; 0x48
  4022e8:	e51e      	b.n	401d28 <_svfprintf_r+0x230>
  4022ea:	f04b 0b08 	orr.w	fp, fp, #8
  4022ee:	f89a 3000 	ldrb.w	r3, [sl]
  4022f2:	e459      	b.n	401ba8 <_svfprintf_r+0xb0>
  4022f4:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  4022f8:	2300      	movs	r3, #0
  4022fa:	461c      	mov	r4, r3
  4022fc:	f81a 3b01 	ldrb.w	r3, [sl], #1
  402300:	eb04 0484 	add.w	r4, r4, r4, lsl #2
  402304:	eb00 0444 	add.w	r4, r0, r4, lsl #1
  402308:	f1a3 0030 	sub.w	r0, r3, #48	; 0x30
  40230c:	2809      	cmp	r0, #9
  40230e:	d9f5      	bls.n	4022fc <_svfprintf_r+0x804>
  402310:	940d      	str	r4, [sp, #52]	; 0x34
  402312:	e44b      	b.n	401bac <_svfprintf_r+0xb4>
  402314:	f04b 0b10 	orr.w	fp, fp, #16
  402318:	9311      	str	r3, [sp, #68]	; 0x44
  40231a:	f01b 0320 	ands.w	r3, fp, #32
  40231e:	f43f ae1d 	beq.w	401f5c <_svfprintf_r+0x464>
  402322:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402324:	3507      	adds	r5, #7
  402326:	f025 0307 	bic.w	r3, r5, #7
  40232a:	f103 0208 	add.w	r2, r3, #8
  40232e:	e9d3 4500 	ldrd	r4, r5, [r3]
  402332:	920f      	str	r2, [sp, #60]	; 0x3c
  402334:	2300      	movs	r3, #0
  402336:	e4d2      	b.n	401cde <_svfprintf_r+0x1e6>
  402338:	9311      	str	r3, [sp, #68]	; 0x44
  40233a:	2a00      	cmp	r2, #0
  40233c:	f040 85e7 	bne.w	402f0e <_svfprintf_r+0x1416>
  402340:	9a11      	ldr	r2, [sp, #68]	; 0x44
  402342:	2a00      	cmp	r2, #0
  402344:	f43f aca3 	beq.w	401c8e <_svfprintf_r+0x196>
  402348:	2300      	movs	r3, #0
  40234a:	2101      	movs	r1, #1
  40234c:	461f      	mov	r7, r3
  40234e:	9108      	str	r1, [sp, #32]
  402350:	f88d 20a0 	strb.w	r2, [sp, #160]	; 0xa0
  402354:	f8cd b01c 	str.w	fp, [sp, #28]
  402358:	f88d 3077 	strb.w	r3, [sp, #119]	; 0x77
  40235c:	930a      	str	r3, [sp, #40]	; 0x28
  40235e:	9312      	str	r3, [sp, #72]	; 0x48
  402360:	910e      	str	r1, [sp, #56]	; 0x38
  402362:	ae28      	add	r6, sp, #160	; 0xa0
  402364:	e4e4      	b.n	401d30 <_svfprintf_r+0x238>
  402366:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402368:	e534      	b.n	401dd4 <_svfprintf_r+0x2dc>
  40236a:	9b11      	ldr	r3, [sp, #68]	; 0x44
  40236c:	2b65      	cmp	r3, #101	; 0x65
  40236e:	f340 80a7 	ble.w	4024c0 <_svfprintf_r+0x9c8>
  402372:	a815      	add	r0, sp, #84	; 0x54
  402374:	c80d      	ldmia	r0, {r0, r2, r3}
  402376:	9914      	ldr	r1, [sp, #80]	; 0x50
  402378:	f003 fda4 	bl	405ec4 <__aeabi_dcmpeq>
  40237c:	2800      	cmp	r0, #0
  40237e:	f000 8150 	beq.w	402622 <_svfprintf_r+0xb2a>
  402382:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402384:	4a20      	ldr	r2, [pc, #128]	; (402408 <_svfprintf_r+0x910>)
  402386:	f8c8 2000 	str.w	r2, [r8]
  40238a:	3301      	adds	r3, #1
  40238c:	3401      	adds	r4, #1
  40238e:	2201      	movs	r2, #1
  402390:	2b07      	cmp	r3, #7
  402392:	9427      	str	r4, [sp, #156]	; 0x9c
  402394:	9326      	str	r3, [sp, #152]	; 0x98
  402396:	f8c8 2004 	str.w	r2, [r8, #4]
  40239a:	f300 836a 	bgt.w	402a72 <_svfprintf_r+0xf7a>
  40239e:	f108 0808 	add.w	r8, r8, #8
  4023a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  4023a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  4023a6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4023a8:	4293      	cmp	r3, r2
  4023aa:	db03      	blt.n	4023b4 <_svfprintf_r+0x8bc>
  4023ac:	9b07      	ldr	r3, [sp, #28]
  4023ae:	07dd      	lsls	r5, r3, #31
  4023b0:	f57f ad82 	bpl.w	401eb8 <_svfprintf_r+0x3c0>
  4023b4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023b6:	9919      	ldr	r1, [sp, #100]	; 0x64
  4023b8:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  4023ba:	f8c8 2000 	str.w	r2, [r8]
  4023be:	3301      	adds	r3, #1
  4023c0:	440c      	add	r4, r1
  4023c2:	2b07      	cmp	r3, #7
  4023c4:	f8c8 1004 	str.w	r1, [r8, #4]
  4023c8:	9427      	str	r4, [sp, #156]	; 0x9c
  4023ca:	9326      	str	r3, [sp, #152]	; 0x98
  4023cc:	f300 839e 	bgt.w	402b0c <_svfprintf_r+0x1014>
  4023d0:	f108 0808 	add.w	r8, r8, #8
  4023d4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4023d6:	1e5e      	subs	r6, r3, #1
  4023d8:	2e00      	cmp	r6, #0
  4023da:	f77f ad6d 	ble.w	401eb8 <_svfprintf_r+0x3c0>
  4023de:	2e10      	cmp	r6, #16
  4023e0:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4023e2:	4d0a      	ldr	r5, [pc, #40]	; (40240c <_svfprintf_r+0x914>)
  4023e4:	f340 81f5 	ble.w	4027d2 <_svfprintf_r+0xcda>
  4023e8:	4622      	mov	r2, r4
  4023ea:	2710      	movs	r7, #16
  4023ec:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  4023f0:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  4023f2:	e013      	b.n	40241c <_svfprintf_r+0x924>
  4023f4:	00406a1c 	.word	0x00406a1c
  4023f8:	00406a08 	.word	0x00406a08
  4023fc:	7fefffff 	.word	0x7fefffff
  402400:	004069fc 	.word	0x004069fc
  402404:	004069f8 	.word	0x004069f8
  402408:	00406a38 	.word	0x00406a38
  40240c:	00406a4c 	.word	0x00406a4c
  402410:	f108 0808 	add.w	r8, r8, #8
  402414:	3e10      	subs	r6, #16
  402416:	2e10      	cmp	r6, #16
  402418:	f340 81da 	ble.w	4027d0 <_svfprintf_r+0xcd8>
  40241c:	3301      	adds	r3, #1
  40241e:	3210      	adds	r2, #16
  402420:	2b07      	cmp	r3, #7
  402422:	9227      	str	r2, [sp, #156]	; 0x9c
  402424:	9326      	str	r3, [sp, #152]	; 0x98
  402426:	e888 00a0 	stmia.w	r8, {r5, r7}
  40242a:	ddf1      	ble.n	402410 <_svfprintf_r+0x918>
  40242c:	aa25      	add	r2, sp, #148	; 0x94
  40242e:	4621      	mov	r1, r4
  402430:	4658      	mov	r0, fp
  402432:	f002 fcb3 	bl	404d9c <__ssprint_r>
  402436:	2800      	cmp	r0, #0
  402438:	f47f ac30 	bne.w	401c9c <_svfprintf_r+0x1a4>
  40243c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40243e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402440:	46c8      	mov	r8, r9
  402442:	e7e7      	b.n	402414 <_svfprintf_r+0x91c>
  402444:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  402446:	9a08      	ldr	r2, [sp, #32]
  402448:	1a9f      	subs	r7, r3, r2
  40244a:	2f00      	cmp	r7, #0
  40244c:	f77f ace5 	ble.w	401e1a <_svfprintf_r+0x322>
  402450:	2f10      	cmp	r7, #16
  402452:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402454:	4db6      	ldr	r5, [pc, #728]	; (402730 <_svfprintf_r+0xc38>)
  402456:	dd27      	ble.n	4024a8 <_svfprintf_r+0x9b0>
  402458:	4642      	mov	r2, r8
  40245a:	4621      	mov	r1, r4
  40245c:	46b0      	mov	r8, r6
  40245e:	f04f 0b10 	mov.w	fp, #16
  402462:	462e      	mov	r6, r5
  402464:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  402466:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402468:	e004      	b.n	402474 <_svfprintf_r+0x97c>
  40246a:	3f10      	subs	r7, #16
  40246c:	2f10      	cmp	r7, #16
  40246e:	f102 0208 	add.w	r2, r2, #8
  402472:	dd15      	ble.n	4024a0 <_svfprintf_r+0x9a8>
  402474:	3301      	adds	r3, #1
  402476:	3110      	adds	r1, #16
  402478:	2b07      	cmp	r3, #7
  40247a:	9127      	str	r1, [sp, #156]	; 0x9c
  40247c:	9326      	str	r3, [sp, #152]	; 0x98
  40247e:	e882 0840 	stmia.w	r2, {r6, fp}
  402482:	ddf2      	ble.n	40246a <_svfprintf_r+0x972>
  402484:	aa25      	add	r2, sp, #148	; 0x94
  402486:	4629      	mov	r1, r5
  402488:	4620      	mov	r0, r4
  40248a:	f002 fc87 	bl	404d9c <__ssprint_r>
  40248e:	2800      	cmp	r0, #0
  402490:	f47f ac04 	bne.w	401c9c <_svfprintf_r+0x1a4>
  402494:	3f10      	subs	r7, #16
  402496:	2f10      	cmp	r7, #16
  402498:	9927      	ldr	r1, [sp, #156]	; 0x9c
  40249a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40249c:	464a      	mov	r2, r9
  40249e:	dce9      	bgt.n	402474 <_svfprintf_r+0x97c>
  4024a0:	4635      	mov	r5, r6
  4024a2:	460c      	mov	r4, r1
  4024a4:	4646      	mov	r6, r8
  4024a6:	4690      	mov	r8, r2
  4024a8:	3301      	adds	r3, #1
  4024aa:	443c      	add	r4, r7
  4024ac:	2b07      	cmp	r3, #7
  4024ae:	9427      	str	r4, [sp, #156]	; 0x9c
  4024b0:	9326      	str	r3, [sp, #152]	; 0x98
  4024b2:	e888 00a0 	stmia.w	r8, {r5, r7}
  4024b6:	f300 8232 	bgt.w	40291e <_svfprintf_r+0xe26>
  4024ba:	f108 0808 	add.w	r8, r8, #8
  4024be:	e4ac      	b.n	401e1a <_svfprintf_r+0x322>
  4024c0:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  4024c2:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4024c4:	2b01      	cmp	r3, #1
  4024c6:	f340 81fe 	ble.w	4028c6 <_svfprintf_r+0xdce>
  4024ca:	3701      	adds	r7, #1
  4024cc:	3401      	adds	r4, #1
  4024ce:	2301      	movs	r3, #1
  4024d0:	2f07      	cmp	r7, #7
  4024d2:	9427      	str	r4, [sp, #156]	; 0x9c
  4024d4:	9726      	str	r7, [sp, #152]	; 0x98
  4024d6:	f8c8 6000 	str.w	r6, [r8]
  4024da:	f8c8 3004 	str.w	r3, [r8, #4]
  4024de:	f300 8203 	bgt.w	4028e8 <_svfprintf_r+0xdf0>
  4024e2:	f108 0808 	add.w	r8, r8, #8
  4024e6:	9a19      	ldr	r2, [sp, #100]	; 0x64
  4024e8:	9b1a      	ldr	r3, [sp, #104]	; 0x68
  4024ea:	f8c8 3000 	str.w	r3, [r8]
  4024ee:	3701      	adds	r7, #1
  4024f0:	4414      	add	r4, r2
  4024f2:	2f07      	cmp	r7, #7
  4024f4:	9427      	str	r4, [sp, #156]	; 0x9c
  4024f6:	9726      	str	r7, [sp, #152]	; 0x98
  4024f8:	f8c8 2004 	str.w	r2, [r8, #4]
  4024fc:	f300 8200 	bgt.w	402900 <_svfprintf_r+0xe08>
  402500:	f108 0808 	add.w	r8, r8, #8
  402504:	a815      	add	r0, sp, #84	; 0x54
  402506:	c80d      	ldmia	r0, {r0, r2, r3}
  402508:	9914      	ldr	r1, [sp, #80]	; 0x50
  40250a:	f003 fcdb 	bl	405ec4 <__aeabi_dcmpeq>
  40250e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402510:	2800      	cmp	r0, #0
  402512:	f040 8101 	bne.w	402718 <_svfprintf_r+0xc20>
  402516:	3b01      	subs	r3, #1
  402518:	3701      	adds	r7, #1
  40251a:	3601      	adds	r6, #1
  40251c:	441c      	add	r4, r3
  40251e:	2f07      	cmp	r7, #7
  402520:	9726      	str	r7, [sp, #152]	; 0x98
  402522:	9427      	str	r4, [sp, #156]	; 0x9c
  402524:	f8c8 6000 	str.w	r6, [r8]
  402528:	f8c8 3004 	str.w	r3, [r8, #4]
  40252c:	f300 8127 	bgt.w	40277e <_svfprintf_r+0xc86>
  402530:	f108 0808 	add.w	r8, r8, #8
  402534:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
  402536:	f8c8 2004 	str.w	r2, [r8, #4]
  40253a:	3701      	adds	r7, #1
  40253c:	4414      	add	r4, r2
  40253e:	ab21      	add	r3, sp, #132	; 0x84
  402540:	2f07      	cmp	r7, #7
  402542:	9427      	str	r4, [sp, #156]	; 0x9c
  402544:	9726      	str	r7, [sp, #152]	; 0x98
  402546:	f8c8 3000 	str.w	r3, [r8]
  40254a:	f77f acb3 	ble.w	401eb4 <_svfprintf_r+0x3bc>
  40254e:	aa25      	add	r2, sp, #148	; 0x94
  402550:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402552:	980c      	ldr	r0, [sp, #48]	; 0x30
  402554:	f002 fc22 	bl	404d9c <__ssprint_r>
  402558:	2800      	cmp	r0, #0
  40255a:	f47f ab9f 	bne.w	401c9c <_svfprintf_r+0x1a4>
  40255e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402560:	46c8      	mov	r8, r9
  402562:	e4a9      	b.n	401eb8 <_svfprintf_r+0x3c0>
  402564:	aa25      	add	r2, sp, #148	; 0x94
  402566:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402568:	980c      	ldr	r0, [sp, #48]	; 0x30
  40256a:	f002 fc17 	bl	404d9c <__ssprint_r>
  40256e:	2800      	cmp	r0, #0
  402570:	f43f aceb 	beq.w	401f4a <_svfprintf_r+0x452>
  402574:	f7ff bb92 	b.w	401c9c <_svfprintf_r+0x1a4>
  402578:	f8dd b01c 	ldr.w	fp, [sp, #28]
  40257c:	2b01      	cmp	r3, #1
  40257e:	f000 8134 	beq.w	4027ea <_svfprintf_r+0xcf2>
  402582:	2b02      	cmp	r3, #2
  402584:	d125      	bne.n	4025d2 <_svfprintf_r+0xada>
  402586:	f8cd b01c 	str.w	fp, [sp, #28]
  40258a:	2400      	movs	r4, #0
  40258c:	2500      	movs	r5, #0
  40258e:	e61e      	b.n	4021ce <_svfprintf_r+0x6d6>
  402590:	aa25      	add	r2, sp, #148	; 0x94
  402592:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402594:	980c      	ldr	r0, [sp, #48]	; 0x30
  402596:	f002 fc01 	bl	404d9c <__ssprint_r>
  40259a:	2800      	cmp	r0, #0
  40259c:	f47f ab7e 	bne.w	401c9c <_svfprintf_r+0x1a4>
  4025a0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4025a2:	46c8      	mov	r8, r9
  4025a4:	e475      	b.n	401e92 <_svfprintf_r+0x39a>
  4025a6:	aa25      	add	r2, sp, #148	; 0x94
  4025a8:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4025aa:	980c      	ldr	r0, [sp, #48]	; 0x30
  4025ac:	f002 fbf6 	bl	404d9c <__ssprint_r>
  4025b0:	2800      	cmp	r0, #0
  4025b2:	f47f ab73 	bne.w	401c9c <_svfprintf_r+0x1a4>
  4025b6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4025b8:	46c8      	mov	r8, r9
  4025ba:	e41b      	b.n	401df4 <_svfprintf_r+0x2fc>
  4025bc:	aa25      	add	r2, sp, #148	; 0x94
  4025be:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4025c0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4025c2:	f002 fbeb 	bl	404d9c <__ssprint_r>
  4025c6:	2800      	cmp	r0, #0
  4025c8:	f47f ab68 	bne.w	401c9c <_svfprintf_r+0x1a4>
  4025cc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4025ce:	46c8      	mov	r8, r9
  4025d0:	e420      	b.n	401e14 <_svfprintf_r+0x31c>
  4025d2:	f8cd b01c 	str.w	fp, [sp, #28]
  4025d6:	2400      	movs	r4, #0
  4025d8:	2500      	movs	r5, #0
  4025da:	4649      	mov	r1, r9
  4025dc:	e000      	b.n	4025e0 <_svfprintf_r+0xae8>
  4025de:	4631      	mov	r1, r6
  4025e0:	08e2      	lsrs	r2, r4, #3
  4025e2:	ea42 7245 	orr.w	r2, r2, r5, lsl #29
  4025e6:	08e8      	lsrs	r0, r5, #3
  4025e8:	f004 0307 	and.w	r3, r4, #7
  4025ec:	4605      	mov	r5, r0
  4025ee:	4614      	mov	r4, r2
  4025f0:	3330      	adds	r3, #48	; 0x30
  4025f2:	ea54 0205 	orrs.w	r2, r4, r5
  4025f6:	f801 3c01 	strb.w	r3, [r1, #-1]
  4025fa:	f101 36ff 	add.w	r6, r1, #4294967295
  4025fe:	d1ee      	bne.n	4025de <_svfprintf_r+0xae6>
  402600:	9a07      	ldr	r2, [sp, #28]
  402602:	07d2      	lsls	r2, r2, #31
  402604:	f57f adf3 	bpl.w	4021ee <_svfprintf_r+0x6f6>
  402608:	2b30      	cmp	r3, #48	; 0x30
  40260a:	f43f adf0 	beq.w	4021ee <_svfprintf_r+0x6f6>
  40260e:	3902      	subs	r1, #2
  402610:	2330      	movs	r3, #48	; 0x30
  402612:	f806 3c01 	strb.w	r3, [r6, #-1]
  402616:	eba9 0301 	sub.w	r3, r9, r1
  40261a:	930e      	str	r3, [sp, #56]	; 0x38
  40261c:	460e      	mov	r6, r1
  40261e:	f7ff bb7b 	b.w	401d18 <_svfprintf_r+0x220>
  402622:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402624:	2900      	cmp	r1, #0
  402626:	f340 822e 	ble.w	402a86 <_svfprintf_r+0xf8e>
  40262a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  40262c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  40262e:	4293      	cmp	r3, r2
  402630:	bfa8      	it	ge
  402632:	4613      	movge	r3, r2
  402634:	2b00      	cmp	r3, #0
  402636:	461f      	mov	r7, r3
  402638:	dd0d      	ble.n	402656 <_svfprintf_r+0xb5e>
  40263a:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40263c:	f8c8 6000 	str.w	r6, [r8]
  402640:	3301      	adds	r3, #1
  402642:	443c      	add	r4, r7
  402644:	2b07      	cmp	r3, #7
  402646:	9427      	str	r4, [sp, #156]	; 0x9c
  402648:	f8c8 7004 	str.w	r7, [r8, #4]
  40264c:	9326      	str	r3, [sp, #152]	; 0x98
  40264e:	f300 831f 	bgt.w	402c90 <_svfprintf_r+0x1198>
  402652:	f108 0808 	add.w	r8, r8, #8
  402656:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402658:	2f00      	cmp	r7, #0
  40265a:	bfa8      	it	ge
  40265c:	1bdb      	subge	r3, r3, r7
  40265e:	2b00      	cmp	r3, #0
  402660:	461f      	mov	r7, r3
  402662:	f340 80d6 	ble.w	402812 <_svfprintf_r+0xd1a>
  402666:	2f10      	cmp	r7, #16
  402668:	9b26      	ldr	r3, [sp, #152]	; 0x98
  40266a:	4d31      	ldr	r5, [pc, #196]	; (402730 <_svfprintf_r+0xc38>)
  40266c:	f340 81ed 	ble.w	402a4a <_svfprintf_r+0xf52>
  402670:	4642      	mov	r2, r8
  402672:	4621      	mov	r1, r4
  402674:	46b0      	mov	r8, r6
  402676:	f04f 0b10 	mov.w	fp, #16
  40267a:	462e      	mov	r6, r5
  40267c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40267e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
  402680:	e004      	b.n	40268c <_svfprintf_r+0xb94>
  402682:	3208      	adds	r2, #8
  402684:	3f10      	subs	r7, #16
  402686:	2f10      	cmp	r7, #16
  402688:	f340 81db 	ble.w	402a42 <_svfprintf_r+0xf4a>
  40268c:	3301      	adds	r3, #1
  40268e:	3110      	adds	r1, #16
  402690:	2b07      	cmp	r3, #7
  402692:	9127      	str	r1, [sp, #156]	; 0x9c
  402694:	9326      	str	r3, [sp, #152]	; 0x98
  402696:	e882 0840 	stmia.w	r2, {r6, fp}
  40269a:	ddf2      	ble.n	402682 <_svfprintf_r+0xb8a>
  40269c:	aa25      	add	r2, sp, #148	; 0x94
  40269e:	4629      	mov	r1, r5
  4026a0:	4620      	mov	r0, r4
  4026a2:	f002 fb7b 	bl	404d9c <__ssprint_r>
  4026a6:	2800      	cmp	r0, #0
  4026a8:	f47f aaf8 	bne.w	401c9c <_svfprintf_r+0x1a4>
  4026ac:	9927      	ldr	r1, [sp, #156]	; 0x9c
  4026ae:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4026b0:	464a      	mov	r2, r9
  4026b2:	e7e7      	b.n	402684 <_svfprintf_r+0xb8c>
  4026b4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4026b6:	930e      	str	r3, [sp, #56]	; 0x38
  4026b8:	464e      	mov	r6, r9
  4026ba:	f7ff bb2d 	b.w	401d18 <_svfprintf_r+0x220>
  4026be:	2d00      	cmp	r5, #0
  4026c0:	bf08      	it	eq
  4026c2:	2c0a      	cmpeq	r4, #10
  4026c4:	f0c0 808f 	bcc.w	4027e6 <_svfprintf_r+0xcee>
  4026c8:	464e      	mov	r6, r9
  4026ca:	4620      	mov	r0, r4
  4026cc:	4629      	mov	r1, r5
  4026ce:	220a      	movs	r2, #10
  4026d0:	2300      	movs	r3, #0
  4026d2:	f7fe ffed 	bl	4016b0 <__aeabi_uldivmod>
  4026d6:	3230      	adds	r2, #48	; 0x30
  4026d8:	f806 2d01 	strb.w	r2, [r6, #-1]!
  4026dc:	4620      	mov	r0, r4
  4026de:	4629      	mov	r1, r5
  4026e0:	2300      	movs	r3, #0
  4026e2:	220a      	movs	r2, #10
  4026e4:	f7fe ffe4 	bl	4016b0 <__aeabi_uldivmod>
  4026e8:	4604      	mov	r4, r0
  4026ea:	460d      	mov	r5, r1
  4026ec:	ea54 0305 	orrs.w	r3, r4, r5
  4026f0:	d1eb      	bne.n	4026ca <_svfprintf_r+0xbd2>
  4026f2:	eba9 0306 	sub.w	r3, r9, r6
  4026f6:	930e      	str	r3, [sp, #56]	; 0x38
  4026f8:	f7ff bb0e 	b.w	401d18 <_svfprintf_r+0x220>
  4026fc:	aa25      	add	r2, sp, #148	; 0x94
  4026fe:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402700:	980c      	ldr	r0, [sp, #48]	; 0x30
  402702:	f002 fb4b 	bl	404d9c <__ssprint_r>
  402706:	2800      	cmp	r0, #0
  402708:	f47f aac8 	bne.w	401c9c <_svfprintf_r+0x1a4>
  40270c:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402710:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402712:	46c8      	mov	r8, r9
  402714:	f7ff bb5e 	b.w	401dd4 <_svfprintf_r+0x2dc>
  402718:	1e5e      	subs	r6, r3, #1
  40271a:	2e00      	cmp	r6, #0
  40271c:	f77f af0a 	ble.w	402534 <_svfprintf_r+0xa3c>
  402720:	2e10      	cmp	r6, #16
  402722:	4d03      	ldr	r5, [pc, #12]	; (402730 <_svfprintf_r+0xc38>)
  402724:	dd22      	ble.n	40276c <_svfprintf_r+0xc74>
  402726:	4622      	mov	r2, r4
  402728:	f04f 0b10 	mov.w	fp, #16
  40272c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  40272e:	e006      	b.n	40273e <_svfprintf_r+0xc46>
  402730:	00406a4c 	.word	0x00406a4c
  402734:	3e10      	subs	r6, #16
  402736:	2e10      	cmp	r6, #16
  402738:	f108 0808 	add.w	r8, r8, #8
  40273c:	dd15      	ble.n	40276a <_svfprintf_r+0xc72>
  40273e:	3701      	adds	r7, #1
  402740:	3210      	adds	r2, #16
  402742:	2f07      	cmp	r7, #7
  402744:	9227      	str	r2, [sp, #156]	; 0x9c
  402746:	9726      	str	r7, [sp, #152]	; 0x98
  402748:	e888 0820 	stmia.w	r8, {r5, fp}
  40274c:	ddf2      	ble.n	402734 <_svfprintf_r+0xc3c>
  40274e:	aa25      	add	r2, sp, #148	; 0x94
  402750:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402752:	4620      	mov	r0, r4
  402754:	f002 fb22 	bl	404d9c <__ssprint_r>
  402758:	2800      	cmp	r0, #0
  40275a:	f47f aa9f 	bne.w	401c9c <_svfprintf_r+0x1a4>
  40275e:	3e10      	subs	r6, #16
  402760:	2e10      	cmp	r6, #16
  402762:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402764:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402766:	46c8      	mov	r8, r9
  402768:	dce9      	bgt.n	40273e <_svfprintf_r+0xc46>
  40276a:	4614      	mov	r4, r2
  40276c:	3701      	adds	r7, #1
  40276e:	4434      	add	r4, r6
  402770:	2f07      	cmp	r7, #7
  402772:	9427      	str	r4, [sp, #156]	; 0x9c
  402774:	9726      	str	r7, [sp, #152]	; 0x98
  402776:	e888 0060 	stmia.w	r8, {r5, r6}
  40277a:	f77f aed9 	ble.w	402530 <_svfprintf_r+0xa38>
  40277e:	aa25      	add	r2, sp, #148	; 0x94
  402780:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402782:	980c      	ldr	r0, [sp, #48]	; 0x30
  402784:	f002 fb0a 	bl	404d9c <__ssprint_r>
  402788:	2800      	cmp	r0, #0
  40278a:	f47f aa87 	bne.w	401c9c <_svfprintf_r+0x1a4>
  40278e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402790:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402792:	46c8      	mov	r8, r9
  402794:	e6ce      	b.n	402534 <_svfprintf_r+0xa3c>
  402796:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402798:	6814      	ldr	r4, [r2, #0]
  40279a:	4613      	mov	r3, r2
  40279c:	3304      	adds	r3, #4
  40279e:	17e5      	asrs	r5, r4, #31
  4027a0:	930f      	str	r3, [sp, #60]	; 0x3c
  4027a2:	4622      	mov	r2, r4
  4027a4:	462b      	mov	r3, r5
  4027a6:	e4fa      	b.n	40219e <_svfprintf_r+0x6a6>
  4027a8:	3204      	adds	r2, #4
  4027aa:	681c      	ldr	r4, [r3, #0]
  4027ac:	920f      	str	r2, [sp, #60]	; 0x3c
  4027ae:	2301      	movs	r3, #1
  4027b0:	2500      	movs	r5, #0
  4027b2:	f7ff ba94 	b.w	401cde <_svfprintf_r+0x1e6>
  4027b6:	681c      	ldr	r4, [r3, #0]
  4027b8:	3304      	adds	r3, #4
  4027ba:	930f      	str	r3, [sp, #60]	; 0x3c
  4027bc:	2500      	movs	r5, #0
  4027be:	e421      	b.n	402004 <_svfprintf_r+0x50c>
  4027c0:	990f      	ldr	r1, [sp, #60]	; 0x3c
  4027c2:	460a      	mov	r2, r1
  4027c4:	3204      	adds	r2, #4
  4027c6:	680c      	ldr	r4, [r1, #0]
  4027c8:	920f      	str	r2, [sp, #60]	; 0x3c
  4027ca:	2500      	movs	r5, #0
  4027cc:	f7ff ba87 	b.w	401cde <_svfprintf_r+0x1e6>
  4027d0:	4614      	mov	r4, r2
  4027d2:	3301      	adds	r3, #1
  4027d4:	4434      	add	r4, r6
  4027d6:	2b07      	cmp	r3, #7
  4027d8:	9427      	str	r4, [sp, #156]	; 0x9c
  4027da:	9326      	str	r3, [sp, #152]	; 0x98
  4027dc:	e888 0060 	stmia.w	r8, {r5, r6}
  4027e0:	f77f ab68 	ble.w	401eb4 <_svfprintf_r+0x3bc>
  4027e4:	e6b3      	b.n	40254e <_svfprintf_r+0xa56>
  4027e6:	f8dd b01c 	ldr.w	fp, [sp, #28]
  4027ea:	f8cd b01c 	str.w	fp, [sp, #28]
  4027ee:	ae42      	add	r6, sp, #264	; 0x108
  4027f0:	3430      	adds	r4, #48	; 0x30
  4027f2:	2301      	movs	r3, #1
  4027f4:	f806 4d41 	strb.w	r4, [r6, #-65]!
  4027f8:	930e      	str	r3, [sp, #56]	; 0x38
  4027fa:	f7ff ba8d 	b.w	401d18 <_svfprintf_r+0x220>
  4027fe:	aa25      	add	r2, sp, #148	; 0x94
  402800:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402802:	980c      	ldr	r0, [sp, #48]	; 0x30
  402804:	f002 faca 	bl	404d9c <__ssprint_r>
  402808:	2800      	cmp	r0, #0
  40280a:	f47f aa47 	bne.w	401c9c <_svfprintf_r+0x1a4>
  40280e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402810:	46c8      	mov	r8, r9
  402812:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402814:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402816:	429a      	cmp	r2, r3
  402818:	db44      	blt.n	4028a4 <_svfprintf_r+0xdac>
  40281a:	9b07      	ldr	r3, [sp, #28]
  40281c:	07d9      	lsls	r1, r3, #31
  40281e:	d441      	bmi.n	4028a4 <_svfprintf_r+0xdac>
  402820:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402822:	9812      	ldr	r0, [sp, #72]	; 0x48
  402824:	1a9a      	subs	r2, r3, r2
  402826:	1a1d      	subs	r5, r3, r0
  402828:	4295      	cmp	r5, r2
  40282a:	bfa8      	it	ge
  40282c:	4615      	movge	r5, r2
  40282e:	2d00      	cmp	r5, #0
  402830:	dd0e      	ble.n	402850 <_svfprintf_r+0xd58>
  402832:	9926      	ldr	r1, [sp, #152]	; 0x98
  402834:	f8c8 5004 	str.w	r5, [r8, #4]
  402838:	3101      	adds	r1, #1
  40283a:	4406      	add	r6, r0
  40283c:	442c      	add	r4, r5
  40283e:	2907      	cmp	r1, #7
  402840:	f8c8 6000 	str.w	r6, [r8]
  402844:	9427      	str	r4, [sp, #156]	; 0x9c
  402846:	9126      	str	r1, [sp, #152]	; 0x98
  402848:	f300 823b 	bgt.w	402cc2 <_svfprintf_r+0x11ca>
  40284c:	f108 0808 	add.w	r8, r8, #8
  402850:	2d00      	cmp	r5, #0
  402852:	bfac      	ite	ge
  402854:	1b56      	subge	r6, r2, r5
  402856:	4616      	movlt	r6, r2
  402858:	2e00      	cmp	r6, #0
  40285a:	f77f ab2d 	ble.w	401eb8 <_svfprintf_r+0x3c0>
  40285e:	2e10      	cmp	r6, #16
  402860:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402862:	4db0      	ldr	r5, [pc, #704]	; (402b24 <_svfprintf_r+0x102c>)
  402864:	ddb5      	ble.n	4027d2 <_svfprintf_r+0xcda>
  402866:	4622      	mov	r2, r4
  402868:	2710      	movs	r7, #16
  40286a:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  40286e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
  402870:	e004      	b.n	40287c <_svfprintf_r+0xd84>
  402872:	f108 0808 	add.w	r8, r8, #8
  402876:	3e10      	subs	r6, #16
  402878:	2e10      	cmp	r6, #16
  40287a:	dda9      	ble.n	4027d0 <_svfprintf_r+0xcd8>
  40287c:	3301      	adds	r3, #1
  40287e:	3210      	adds	r2, #16
  402880:	2b07      	cmp	r3, #7
  402882:	9227      	str	r2, [sp, #156]	; 0x9c
  402884:	9326      	str	r3, [sp, #152]	; 0x98
  402886:	e888 00a0 	stmia.w	r8, {r5, r7}
  40288a:	ddf2      	ble.n	402872 <_svfprintf_r+0xd7a>
  40288c:	aa25      	add	r2, sp, #148	; 0x94
  40288e:	4621      	mov	r1, r4
  402890:	4658      	mov	r0, fp
  402892:	f002 fa83 	bl	404d9c <__ssprint_r>
  402896:	2800      	cmp	r0, #0
  402898:	f47f aa00 	bne.w	401c9c <_svfprintf_r+0x1a4>
  40289c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  40289e:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028a0:	46c8      	mov	r8, r9
  4028a2:	e7e8      	b.n	402876 <_svfprintf_r+0xd7e>
  4028a4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  4028a6:	9819      	ldr	r0, [sp, #100]	; 0x64
  4028a8:	991a      	ldr	r1, [sp, #104]	; 0x68
  4028aa:	f8c8 1000 	str.w	r1, [r8]
  4028ae:	3301      	adds	r3, #1
  4028b0:	4404      	add	r4, r0
  4028b2:	2b07      	cmp	r3, #7
  4028b4:	9427      	str	r4, [sp, #156]	; 0x9c
  4028b6:	f8c8 0004 	str.w	r0, [r8, #4]
  4028ba:	9326      	str	r3, [sp, #152]	; 0x98
  4028bc:	f300 81f5 	bgt.w	402caa <_svfprintf_r+0x11b2>
  4028c0:	f108 0808 	add.w	r8, r8, #8
  4028c4:	e7ac      	b.n	402820 <_svfprintf_r+0xd28>
  4028c6:	9b07      	ldr	r3, [sp, #28]
  4028c8:	07da      	lsls	r2, r3, #31
  4028ca:	f53f adfe 	bmi.w	4024ca <_svfprintf_r+0x9d2>
  4028ce:	3701      	adds	r7, #1
  4028d0:	3401      	adds	r4, #1
  4028d2:	2301      	movs	r3, #1
  4028d4:	2f07      	cmp	r7, #7
  4028d6:	9427      	str	r4, [sp, #156]	; 0x9c
  4028d8:	9726      	str	r7, [sp, #152]	; 0x98
  4028da:	f8c8 6000 	str.w	r6, [r8]
  4028de:	f8c8 3004 	str.w	r3, [r8, #4]
  4028e2:	f77f ae25 	ble.w	402530 <_svfprintf_r+0xa38>
  4028e6:	e74a      	b.n	40277e <_svfprintf_r+0xc86>
  4028e8:	aa25      	add	r2, sp, #148	; 0x94
  4028ea:	990b      	ldr	r1, [sp, #44]	; 0x2c
  4028ec:	980c      	ldr	r0, [sp, #48]	; 0x30
  4028ee:	f002 fa55 	bl	404d9c <__ssprint_r>
  4028f2:	2800      	cmp	r0, #0
  4028f4:	f47f a9d2 	bne.w	401c9c <_svfprintf_r+0x1a4>
  4028f8:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  4028fa:	9f26      	ldr	r7, [sp, #152]	; 0x98
  4028fc:	46c8      	mov	r8, r9
  4028fe:	e5f2      	b.n	4024e6 <_svfprintf_r+0x9ee>
  402900:	aa25      	add	r2, sp, #148	; 0x94
  402902:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402904:	980c      	ldr	r0, [sp, #48]	; 0x30
  402906:	f002 fa49 	bl	404d9c <__ssprint_r>
  40290a:	2800      	cmp	r0, #0
  40290c:	f47f a9c6 	bne.w	401c9c <_svfprintf_r+0x1a4>
  402910:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402912:	9f26      	ldr	r7, [sp, #152]	; 0x98
  402914:	46c8      	mov	r8, r9
  402916:	e5f5      	b.n	402504 <_svfprintf_r+0xa0c>
  402918:	464e      	mov	r6, r9
  40291a:	f7ff b9fd 	b.w	401d18 <_svfprintf_r+0x220>
  40291e:	aa25      	add	r2, sp, #148	; 0x94
  402920:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402922:	980c      	ldr	r0, [sp, #48]	; 0x30
  402924:	f002 fa3a 	bl	404d9c <__ssprint_r>
  402928:	2800      	cmp	r0, #0
  40292a:	f47f a9b7 	bne.w	401c9c <_svfprintf_r+0x1a4>
  40292e:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402930:	46c8      	mov	r8, r9
  402932:	f7ff ba72 	b.w	401e1a <_svfprintf_r+0x322>
  402936:	9c15      	ldr	r4, [sp, #84]	; 0x54
  402938:	4622      	mov	r2, r4
  40293a:	4620      	mov	r0, r4
  40293c:	9c14      	ldr	r4, [sp, #80]	; 0x50
  40293e:	4623      	mov	r3, r4
  402940:	4621      	mov	r1, r4
  402942:	f003 faf1 	bl	405f28 <__aeabi_dcmpun>
  402946:	2800      	cmp	r0, #0
  402948:	f040 8286 	bne.w	402e58 <_svfprintf_r+0x1360>
  40294c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40294e:	3301      	adds	r3, #1
  402950:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402952:	f023 0320 	bic.w	r3, r3, #32
  402956:	930e      	str	r3, [sp, #56]	; 0x38
  402958:	f000 81e2 	beq.w	402d20 <_svfprintf_r+0x1228>
  40295c:	2b47      	cmp	r3, #71	; 0x47
  40295e:	f000 811e 	beq.w	402b9e <_svfprintf_r+0x10a6>
  402962:	f44b 7380 	orr.w	r3, fp, #256	; 0x100
  402966:	9307      	str	r3, [sp, #28]
  402968:	9b14      	ldr	r3, [sp, #80]	; 0x50
  40296a:	1e1f      	subs	r7, r3, #0
  40296c:	9b15      	ldr	r3, [sp, #84]	; 0x54
  40296e:	9308      	str	r3, [sp, #32]
  402970:	bfbb      	ittet	lt
  402972:	463b      	movlt	r3, r7
  402974:	f103 4700 	addlt.w	r7, r3, #2147483648	; 0x80000000
  402978:	2300      	movge	r3, #0
  40297a:	232d      	movlt	r3, #45	; 0x2d
  40297c:	9310      	str	r3, [sp, #64]	; 0x40
  40297e:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402980:	2b66      	cmp	r3, #102	; 0x66
  402982:	f000 81bb 	beq.w	402cfc <_svfprintf_r+0x1204>
  402986:	2b46      	cmp	r3, #70	; 0x46
  402988:	f000 80df 	beq.w	402b4a <_svfprintf_r+0x1052>
  40298c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40298e:	9a08      	ldr	r2, [sp, #32]
  402990:	2b45      	cmp	r3, #69	; 0x45
  402992:	bf0c      	ite	eq
  402994:	9b0a      	ldreq	r3, [sp, #40]	; 0x28
  402996:	9d0a      	ldrne	r5, [sp, #40]	; 0x28
  402998:	a823      	add	r0, sp, #140	; 0x8c
  40299a:	a920      	add	r1, sp, #128	; 0x80
  40299c:	bf08      	it	eq
  40299e:	1c5d      	addeq	r5, r3, #1
  4029a0:	9004      	str	r0, [sp, #16]
  4029a2:	9103      	str	r1, [sp, #12]
  4029a4:	a81f      	add	r0, sp, #124	; 0x7c
  4029a6:	2102      	movs	r1, #2
  4029a8:	463b      	mov	r3, r7
  4029aa:	9002      	str	r0, [sp, #8]
  4029ac:	9501      	str	r5, [sp, #4]
  4029ae:	9100      	str	r1, [sp, #0]
  4029b0:	980c      	ldr	r0, [sp, #48]	; 0x30
  4029b2:	f000 fb75 	bl	4030a0 <_dtoa_r>
  4029b6:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4029b8:	2b67      	cmp	r3, #103	; 0x67
  4029ba:	4606      	mov	r6, r0
  4029bc:	f040 81e0 	bne.w	402d80 <_svfprintf_r+0x1288>
  4029c0:	f01b 0f01 	tst.w	fp, #1
  4029c4:	f000 8246 	beq.w	402e54 <_svfprintf_r+0x135c>
  4029c8:	1974      	adds	r4, r6, r5
  4029ca:	9a16      	ldr	r2, [sp, #88]	; 0x58
  4029cc:	9808      	ldr	r0, [sp, #32]
  4029ce:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  4029d0:	4639      	mov	r1, r7
  4029d2:	f003 fa77 	bl	405ec4 <__aeabi_dcmpeq>
  4029d6:	2800      	cmp	r0, #0
  4029d8:	f040 8165 	bne.w	402ca6 <_svfprintf_r+0x11ae>
  4029dc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4029de:	42a3      	cmp	r3, r4
  4029e0:	d206      	bcs.n	4029f0 <_svfprintf_r+0xef8>
  4029e2:	2130      	movs	r1, #48	; 0x30
  4029e4:	1c5a      	adds	r2, r3, #1
  4029e6:	9223      	str	r2, [sp, #140]	; 0x8c
  4029e8:	7019      	strb	r1, [r3, #0]
  4029ea:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  4029ec:	429c      	cmp	r4, r3
  4029ee:	d8f9      	bhi.n	4029e4 <_svfprintf_r+0xeec>
  4029f0:	1b9b      	subs	r3, r3, r6
  4029f2:	9313      	str	r3, [sp, #76]	; 0x4c
  4029f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4029f6:	2b47      	cmp	r3, #71	; 0x47
  4029f8:	f000 80e9 	beq.w	402bce <_svfprintf_r+0x10d6>
  4029fc:	9b11      	ldr	r3, [sp, #68]	; 0x44
  4029fe:	2b65      	cmp	r3, #101	; 0x65
  402a00:	f340 81cd 	ble.w	402d9e <_svfprintf_r+0x12a6>
  402a04:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402a06:	2b66      	cmp	r3, #102	; 0x66
  402a08:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402a0a:	9312      	str	r3, [sp, #72]	; 0x48
  402a0c:	f000 819e 	beq.w	402d4c <_svfprintf_r+0x1254>
  402a10:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402a12:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402a14:	4619      	mov	r1, r3
  402a16:	4291      	cmp	r1, r2
  402a18:	f300 818a 	bgt.w	402d30 <_svfprintf_r+0x1238>
  402a1c:	f01b 0f01 	tst.w	fp, #1
  402a20:	f040 8213 	bne.w	402e4a <_svfprintf_r+0x1352>
  402a24:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402a28:	9308      	str	r3, [sp, #32]
  402a2a:	2367      	movs	r3, #103	; 0x67
  402a2c:	920e      	str	r2, [sp, #56]	; 0x38
  402a2e:	9311      	str	r3, [sp, #68]	; 0x44
  402a30:	9b10      	ldr	r3, [sp, #64]	; 0x40
  402a32:	2b00      	cmp	r3, #0
  402a34:	f040 80c4 	bne.w	402bc0 <_svfprintf_r+0x10c8>
  402a38:	930a      	str	r3, [sp, #40]	; 0x28
  402a3a:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402a3e:	f7ff b973 	b.w	401d28 <_svfprintf_r+0x230>
  402a42:	4635      	mov	r5, r6
  402a44:	460c      	mov	r4, r1
  402a46:	4646      	mov	r6, r8
  402a48:	4690      	mov	r8, r2
  402a4a:	3301      	adds	r3, #1
  402a4c:	443c      	add	r4, r7
  402a4e:	2b07      	cmp	r3, #7
  402a50:	9427      	str	r4, [sp, #156]	; 0x9c
  402a52:	9326      	str	r3, [sp, #152]	; 0x98
  402a54:	e888 00a0 	stmia.w	r8, {r5, r7}
  402a58:	f73f aed1 	bgt.w	4027fe <_svfprintf_r+0xd06>
  402a5c:	f108 0808 	add.w	r8, r8, #8
  402a60:	e6d7      	b.n	402812 <_svfprintf_r+0xd1a>
  402a62:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402a64:	6813      	ldr	r3, [r2, #0]
  402a66:	3204      	adds	r2, #4
  402a68:	920f      	str	r2, [sp, #60]	; 0x3c
  402a6a:	9a09      	ldr	r2, [sp, #36]	; 0x24
  402a6c:	601a      	str	r2, [r3, #0]
  402a6e:	f7ff b86a 	b.w	401b46 <_svfprintf_r+0x4e>
  402a72:	aa25      	add	r2, sp, #148	; 0x94
  402a74:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402a76:	980c      	ldr	r0, [sp, #48]	; 0x30
  402a78:	f002 f990 	bl	404d9c <__ssprint_r>
  402a7c:	2800      	cmp	r0, #0
  402a7e:	f47f a90d 	bne.w	401c9c <_svfprintf_r+0x1a4>
  402a82:	46c8      	mov	r8, r9
  402a84:	e48d      	b.n	4023a2 <_svfprintf_r+0x8aa>
  402a86:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402a88:	4a27      	ldr	r2, [pc, #156]	; (402b28 <_svfprintf_r+0x1030>)
  402a8a:	f8c8 2000 	str.w	r2, [r8]
  402a8e:	3301      	adds	r3, #1
  402a90:	3401      	adds	r4, #1
  402a92:	2201      	movs	r2, #1
  402a94:	2b07      	cmp	r3, #7
  402a96:	9427      	str	r4, [sp, #156]	; 0x9c
  402a98:	9326      	str	r3, [sp, #152]	; 0x98
  402a9a:	f8c8 2004 	str.w	r2, [r8, #4]
  402a9e:	dc72      	bgt.n	402b86 <_svfprintf_r+0x108e>
  402aa0:	f108 0808 	add.w	r8, r8, #8
  402aa4:	b929      	cbnz	r1, 402ab2 <_svfprintf_r+0xfba>
  402aa6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402aa8:	b91b      	cbnz	r3, 402ab2 <_svfprintf_r+0xfba>
  402aaa:	9b07      	ldr	r3, [sp, #28]
  402aac:	07d8      	lsls	r0, r3, #31
  402aae:	f57f aa03 	bpl.w	401eb8 <_svfprintf_r+0x3c0>
  402ab2:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402ab4:	9819      	ldr	r0, [sp, #100]	; 0x64
  402ab6:	9a1a      	ldr	r2, [sp, #104]	; 0x68
  402ab8:	f8c8 2000 	str.w	r2, [r8]
  402abc:	3301      	adds	r3, #1
  402abe:	4602      	mov	r2, r0
  402ac0:	4422      	add	r2, r4
  402ac2:	2b07      	cmp	r3, #7
  402ac4:	9227      	str	r2, [sp, #156]	; 0x9c
  402ac6:	f8c8 0004 	str.w	r0, [r8, #4]
  402aca:	9326      	str	r3, [sp, #152]	; 0x98
  402acc:	f300 818d 	bgt.w	402dea <_svfprintf_r+0x12f2>
  402ad0:	f108 0808 	add.w	r8, r8, #8
  402ad4:	2900      	cmp	r1, #0
  402ad6:	f2c0 8165 	blt.w	402da4 <_svfprintf_r+0x12ac>
  402ada:	9913      	ldr	r1, [sp, #76]	; 0x4c
  402adc:	f8c8 6000 	str.w	r6, [r8]
  402ae0:	3301      	adds	r3, #1
  402ae2:	188c      	adds	r4, r1, r2
  402ae4:	2b07      	cmp	r3, #7
  402ae6:	9427      	str	r4, [sp, #156]	; 0x9c
  402ae8:	9326      	str	r3, [sp, #152]	; 0x98
  402aea:	f8c8 1004 	str.w	r1, [r8, #4]
  402aee:	f77f a9e1 	ble.w	401eb4 <_svfprintf_r+0x3bc>
  402af2:	e52c      	b.n	40254e <_svfprintf_r+0xa56>
  402af4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
  402af6:	9909      	ldr	r1, [sp, #36]	; 0x24
  402af8:	6813      	ldr	r3, [r2, #0]
  402afa:	17cd      	asrs	r5, r1, #31
  402afc:	4608      	mov	r0, r1
  402afe:	3204      	adds	r2, #4
  402b00:	4629      	mov	r1, r5
  402b02:	920f      	str	r2, [sp, #60]	; 0x3c
  402b04:	e9c3 0100 	strd	r0, r1, [r3]
  402b08:	f7ff b81d 	b.w	401b46 <_svfprintf_r+0x4e>
  402b0c:	aa25      	add	r2, sp, #148	; 0x94
  402b0e:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b10:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b12:	f002 f943 	bl	404d9c <__ssprint_r>
  402b16:	2800      	cmp	r0, #0
  402b18:	f47f a8c0 	bne.w	401c9c <_svfprintf_r+0x1a4>
  402b1c:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b1e:	46c8      	mov	r8, r9
  402b20:	e458      	b.n	4023d4 <_svfprintf_r+0x8dc>
  402b22:	bf00      	nop
  402b24:	00406a4c 	.word	0x00406a4c
  402b28:	00406a38 	.word	0x00406a38
  402b2c:	2140      	movs	r1, #64	; 0x40
  402b2e:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b30:	f001 fa0c 	bl	403f4c <_malloc_r>
  402b34:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402b36:	6010      	str	r0, [r2, #0]
  402b38:	6110      	str	r0, [r2, #16]
  402b3a:	2800      	cmp	r0, #0
  402b3c:	f000 81f2 	beq.w	402f24 <_svfprintf_r+0x142c>
  402b40:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  402b42:	2340      	movs	r3, #64	; 0x40
  402b44:	6153      	str	r3, [r2, #20]
  402b46:	f7fe bfee 	b.w	401b26 <_svfprintf_r+0x2e>
  402b4a:	a823      	add	r0, sp, #140	; 0x8c
  402b4c:	a920      	add	r1, sp, #128	; 0x80
  402b4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
  402b50:	9004      	str	r0, [sp, #16]
  402b52:	9103      	str	r1, [sp, #12]
  402b54:	a81f      	add	r0, sp, #124	; 0x7c
  402b56:	2103      	movs	r1, #3
  402b58:	9002      	str	r0, [sp, #8]
  402b5a:	9a08      	ldr	r2, [sp, #32]
  402b5c:	9401      	str	r4, [sp, #4]
  402b5e:	463b      	mov	r3, r7
  402b60:	9100      	str	r1, [sp, #0]
  402b62:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b64:	f000 fa9c 	bl	4030a0 <_dtoa_r>
  402b68:	4625      	mov	r5, r4
  402b6a:	4606      	mov	r6, r0
  402b6c:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402b6e:	2b46      	cmp	r3, #70	; 0x46
  402b70:	eb06 0405 	add.w	r4, r6, r5
  402b74:	f47f af29 	bne.w	4029ca <_svfprintf_r+0xed2>
  402b78:	7833      	ldrb	r3, [r6, #0]
  402b7a:	2b30      	cmp	r3, #48	; 0x30
  402b7c:	f000 8178 	beq.w	402e70 <_svfprintf_r+0x1378>
  402b80:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
  402b82:	442c      	add	r4, r5
  402b84:	e721      	b.n	4029ca <_svfprintf_r+0xed2>
  402b86:	aa25      	add	r2, sp, #148	; 0x94
  402b88:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402b8a:	980c      	ldr	r0, [sp, #48]	; 0x30
  402b8c:	f002 f906 	bl	404d9c <__ssprint_r>
  402b90:	2800      	cmp	r0, #0
  402b92:	f47f a883 	bne.w	401c9c <_svfprintf_r+0x1a4>
  402b96:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402b98:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402b9a:	46c8      	mov	r8, r9
  402b9c:	e782      	b.n	402aa4 <_svfprintf_r+0xfac>
  402b9e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402ba0:	2b00      	cmp	r3, #0
  402ba2:	bf08      	it	eq
  402ba4:	2301      	moveq	r3, #1
  402ba6:	930a      	str	r3, [sp, #40]	; 0x28
  402ba8:	e6db      	b.n	402962 <_svfprintf_r+0xe6a>
  402baa:	4630      	mov	r0, r6
  402bac:	940a      	str	r4, [sp, #40]	; 0x28
  402bae:	f002 f887 	bl	404cc0 <strlen>
  402bb2:	950f      	str	r5, [sp, #60]	; 0x3c
  402bb4:	900e      	str	r0, [sp, #56]	; 0x38
  402bb6:	f8cd b01c 	str.w	fp, [sp, #28]
  402bba:	4603      	mov	r3, r0
  402bbc:	f7ff b9f9 	b.w	401fb2 <_svfprintf_r+0x4ba>
  402bc0:	272d      	movs	r7, #45	; 0x2d
  402bc2:	2300      	movs	r3, #0
  402bc4:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402bc8:	930a      	str	r3, [sp, #40]	; 0x28
  402bca:	f7ff b8ae 	b.w	401d2a <_svfprintf_r+0x232>
  402bce:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402bd0:	9312      	str	r3, [sp, #72]	; 0x48
  402bd2:	461a      	mov	r2, r3
  402bd4:	3303      	adds	r3, #3
  402bd6:	db04      	blt.n	402be2 <_svfprintf_r+0x10ea>
  402bd8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402bda:	4619      	mov	r1, r3
  402bdc:	4291      	cmp	r1, r2
  402bde:	f6bf af17 	bge.w	402a10 <_svfprintf_r+0xf18>
  402be2:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402be4:	3b02      	subs	r3, #2
  402be6:	9311      	str	r3, [sp, #68]	; 0x44
  402be8:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
  402bec:	f88d 3084 	strb.w	r3, [sp, #132]	; 0x84
  402bf0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402bf2:	3b01      	subs	r3, #1
  402bf4:	2b00      	cmp	r3, #0
  402bf6:	931f      	str	r3, [sp, #124]	; 0x7c
  402bf8:	bfbd      	ittte	lt
  402bfa:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
  402bfc:	f1c3 0301 	rsblt	r3, r3, #1
  402c00:	222d      	movlt	r2, #45	; 0x2d
  402c02:	222b      	movge	r2, #43	; 0x2b
  402c04:	2b09      	cmp	r3, #9
  402c06:	f88d 2085 	strb.w	r2, [sp, #133]	; 0x85
  402c0a:	f340 8116 	ble.w	402e3a <_svfprintf_r+0x1342>
  402c0e:	f10d 0493 	add.w	r4, sp, #147	; 0x93
  402c12:	4620      	mov	r0, r4
  402c14:	4dab      	ldr	r5, [pc, #684]	; (402ec4 <_svfprintf_r+0x13cc>)
  402c16:	e000      	b.n	402c1a <_svfprintf_r+0x1122>
  402c18:	4610      	mov	r0, r2
  402c1a:	fb85 1203 	smull	r1, r2, r5, r3
  402c1e:	17d9      	asrs	r1, r3, #31
  402c20:	ebc1 01a2 	rsb	r1, r1, r2, asr #2
  402c24:	eb01 0281 	add.w	r2, r1, r1, lsl #2
  402c28:	eba3 0242 	sub.w	r2, r3, r2, lsl #1
  402c2c:	3230      	adds	r2, #48	; 0x30
  402c2e:	2909      	cmp	r1, #9
  402c30:	f800 2c01 	strb.w	r2, [r0, #-1]
  402c34:	460b      	mov	r3, r1
  402c36:	f100 32ff 	add.w	r2, r0, #4294967295
  402c3a:	dced      	bgt.n	402c18 <_svfprintf_r+0x1120>
  402c3c:	3330      	adds	r3, #48	; 0x30
  402c3e:	3802      	subs	r0, #2
  402c40:	b2d9      	uxtb	r1, r3
  402c42:	4284      	cmp	r4, r0
  402c44:	f802 1c01 	strb.w	r1, [r2, #-1]
  402c48:	f240 8165 	bls.w	402f16 <_svfprintf_r+0x141e>
  402c4c:	f10d 0086 	add.w	r0, sp, #134	; 0x86
  402c50:	4613      	mov	r3, r2
  402c52:	e001      	b.n	402c58 <_svfprintf_r+0x1160>
  402c54:	f813 1b01 	ldrb.w	r1, [r3], #1
  402c58:	f800 1b01 	strb.w	r1, [r0], #1
  402c5c:	42a3      	cmp	r3, r4
  402c5e:	d1f9      	bne.n	402c54 <_svfprintf_r+0x115c>
  402c60:	3301      	adds	r3, #1
  402c62:	1a9b      	subs	r3, r3, r2
  402c64:	f10d 0286 	add.w	r2, sp, #134	; 0x86
  402c68:	4413      	add	r3, r2
  402c6a:	aa21      	add	r2, sp, #132	; 0x84
  402c6c:	1a9b      	subs	r3, r3, r2
  402c6e:	9a13      	ldr	r2, [sp, #76]	; 0x4c
  402c70:	931b      	str	r3, [sp, #108]	; 0x6c
  402c72:	2a01      	cmp	r2, #1
  402c74:	4413      	add	r3, r2
  402c76:	930e      	str	r3, [sp, #56]	; 0x38
  402c78:	f340 8119 	ble.w	402eae <_svfprintf_r+0x13b6>
  402c7c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402c7e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402c80:	4413      	add	r3, r2
  402c82:	930e      	str	r3, [sp, #56]	; 0x38
  402c84:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402c88:	9308      	str	r3, [sp, #32]
  402c8a:	2300      	movs	r3, #0
  402c8c:	9312      	str	r3, [sp, #72]	; 0x48
  402c8e:	e6cf      	b.n	402a30 <_svfprintf_r+0xf38>
  402c90:	aa25      	add	r2, sp, #148	; 0x94
  402c92:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402c94:	980c      	ldr	r0, [sp, #48]	; 0x30
  402c96:	f002 f881 	bl	404d9c <__ssprint_r>
  402c9a:	2800      	cmp	r0, #0
  402c9c:	f47e affe 	bne.w	401c9c <_svfprintf_r+0x1a4>
  402ca0:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402ca2:	46c8      	mov	r8, r9
  402ca4:	e4d7      	b.n	402656 <_svfprintf_r+0xb5e>
  402ca6:	4623      	mov	r3, r4
  402ca8:	e6a2      	b.n	4029f0 <_svfprintf_r+0xef8>
  402caa:	aa25      	add	r2, sp, #148	; 0x94
  402cac:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cae:	980c      	ldr	r0, [sp, #48]	; 0x30
  402cb0:	f002 f874 	bl	404d9c <__ssprint_r>
  402cb4:	2800      	cmp	r0, #0
  402cb6:	f47e aff1 	bne.w	401c9c <_svfprintf_r+0x1a4>
  402cba:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402cbc:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402cbe:	46c8      	mov	r8, r9
  402cc0:	e5ae      	b.n	402820 <_svfprintf_r+0xd28>
  402cc2:	aa25      	add	r2, sp, #148	; 0x94
  402cc4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402cc6:	980c      	ldr	r0, [sp, #48]	; 0x30
  402cc8:	f002 f868 	bl	404d9c <__ssprint_r>
  402ccc:	2800      	cmp	r0, #0
  402cce:	f47e afe5 	bne.w	401c9c <_svfprintf_r+0x1a4>
  402cd2:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
  402cd4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402cd6:	9c27      	ldr	r4, [sp, #156]	; 0x9c
  402cd8:	1a9a      	subs	r2, r3, r2
  402cda:	46c8      	mov	r8, r9
  402cdc:	e5b8      	b.n	402850 <_svfprintf_r+0xd58>
  402cde:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402ce0:	9612      	str	r6, [sp, #72]	; 0x48
  402ce2:	2b06      	cmp	r3, #6
  402ce4:	bf28      	it	cs
  402ce6:	2306      	movcs	r3, #6
  402ce8:	960a      	str	r6, [sp, #40]	; 0x28
  402cea:	4637      	mov	r7, r6
  402cec:	9308      	str	r3, [sp, #32]
  402cee:	950f      	str	r5, [sp, #60]	; 0x3c
  402cf0:	f8cd b01c 	str.w	fp, [sp, #28]
  402cf4:	930e      	str	r3, [sp, #56]	; 0x38
  402cf6:	4e74      	ldr	r6, [pc, #464]	; (402ec8 <_svfprintf_r+0x13d0>)
  402cf8:	f7ff b816 	b.w	401d28 <_svfprintf_r+0x230>
  402cfc:	a823      	add	r0, sp, #140	; 0x8c
  402cfe:	a920      	add	r1, sp, #128	; 0x80
  402d00:	9d0a      	ldr	r5, [sp, #40]	; 0x28
  402d02:	9004      	str	r0, [sp, #16]
  402d04:	9103      	str	r1, [sp, #12]
  402d06:	a81f      	add	r0, sp, #124	; 0x7c
  402d08:	2103      	movs	r1, #3
  402d0a:	9002      	str	r0, [sp, #8]
  402d0c:	9a08      	ldr	r2, [sp, #32]
  402d0e:	9501      	str	r5, [sp, #4]
  402d10:	463b      	mov	r3, r7
  402d12:	9100      	str	r1, [sp, #0]
  402d14:	980c      	ldr	r0, [sp, #48]	; 0x30
  402d16:	f000 f9c3 	bl	4030a0 <_dtoa_r>
  402d1a:	4606      	mov	r6, r0
  402d1c:	1944      	adds	r4, r0, r5
  402d1e:	e72b      	b.n	402b78 <_svfprintf_r+0x1080>
  402d20:	2306      	movs	r3, #6
  402d22:	930a      	str	r3, [sp, #40]	; 0x28
  402d24:	e61d      	b.n	402962 <_svfprintf_r+0xe6a>
  402d26:	272d      	movs	r7, #45	; 0x2d
  402d28:	f88d 7077 	strb.w	r7, [sp, #119]	; 0x77
  402d2c:	f7ff bacd 	b.w	4022ca <_svfprintf_r+0x7d2>
  402d30:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402d32:	9b13      	ldr	r3, [sp, #76]	; 0x4c
  402d34:	4413      	add	r3, r2
  402d36:	9a12      	ldr	r2, [sp, #72]	; 0x48
  402d38:	930e      	str	r3, [sp, #56]	; 0x38
  402d3a:	2a00      	cmp	r2, #0
  402d3c:	f340 80b0 	ble.w	402ea0 <_svfprintf_r+0x13a8>
  402d40:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402d44:	9308      	str	r3, [sp, #32]
  402d46:	2367      	movs	r3, #103	; 0x67
  402d48:	9311      	str	r3, [sp, #68]	; 0x44
  402d4a:	e671      	b.n	402a30 <_svfprintf_r+0xf38>
  402d4c:	2b00      	cmp	r3, #0
  402d4e:	f340 80c3 	ble.w	402ed8 <_svfprintf_r+0x13e0>
  402d52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402d54:	2a00      	cmp	r2, #0
  402d56:	f040 8099 	bne.w	402e8c <_svfprintf_r+0x1394>
  402d5a:	f01b 0f01 	tst.w	fp, #1
  402d5e:	f040 8095 	bne.w	402e8c <_svfprintf_r+0x1394>
  402d62:	9308      	str	r3, [sp, #32]
  402d64:	930e      	str	r3, [sp, #56]	; 0x38
  402d66:	e663      	b.n	402a30 <_svfprintf_r+0xf38>
  402d68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402d6a:	9308      	str	r3, [sp, #32]
  402d6c:	930e      	str	r3, [sp, #56]	; 0x38
  402d6e:	900a      	str	r0, [sp, #40]	; 0x28
  402d70:	950f      	str	r5, [sp, #60]	; 0x3c
  402d72:	f8cd b01c 	str.w	fp, [sp, #28]
  402d76:	9012      	str	r0, [sp, #72]	; 0x48
  402d78:	f89d 7077 	ldrb.w	r7, [sp, #119]	; 0x77
  402d7c:	f7fe bfd4 	b.w	401d28 <_svfprintf_r+0x230>
  402d80:	9b11      	ldr	r3, [sp, #68]	; 0x44
  402d82:	2b47      	cmp	r3, #71	; 0x47
  402d84:	f47f ae20 	bne.w	4029c8 <_svfprintf_r+0xed0>
  402d88:	f01b 0f01 	tst.w	fp, #1
  402d8c:	f47f aeee 	bne.w	402b6c <_svfprintf_r+0x1074>
  402d90:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402d92:	1b9b      	subs	r3, r3, r6
  402d94:	9313      	str	r3, [sp, #76]	; 0x4c
  402d96:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402d98:	2b47      	cmp	r3, #71	; 0x47
  402d9a:	f43f af18 	beq.w	402bce <_svfprintf_r+0x10d6>
  402d9e:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
  402da0:	9312      	str	r3, [sp, #72]	; 0x48
  402da2:	e721      	b.n	402be8 <_svfprintf_r+0x10f0>
  402da4:	424f      	negs	r7, r1
  402da6:	3110      	adds	r1, #16
  402da8:	4d48      	ldr	r5, [pc, #288]	; (402ecc <_svfprintf_r+0x13d4>)
  402daa:	da2f      	bge.n	402e0c <_svfprintf_r+0x1314>
  402dac:	2410      	movs	r4, #16
  402dae:	f8dd b030 	ldr.w	fp, [sp, #48]	; 0x30
  402db2:	e004      	b.n	402dbe <_svfprintf_r+0x12c6>
  402db4:	f108 0808 	add.w	r8, r8, #8
  402db8:	3f10      	subs	r7, #16
  402dba:	2f10      	cmp	r7, #16
  402dbc:	dd26      	ble.n	402e0c <_svfprintf_r+0x1314>
  402dbe:	3301      	adds	r3, #1
  402dc0:	3210      	adds	r2, #16
  402dc2:	2b07      	cmp	r3, #7
  402dc4:	9227      	str	r2, [sp, #156]	; 0x9c
  402dc6:	9326      	str	r3, [sp, #152]	; 0x98
  402dc8:	f8c8 5000 	str.w	r5, [r8]
  402dcc:	f8c8 4004 	str.w	r4, [r8, #4]
  402dd0:	ddf0      	ble.n	402db4 <_svfprintf_r+0x12bc>
  402dd2:	aa25      	add	r2, sp, #148	; 0x94
  402dd4:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dd6:	4658      	mov	r0, fp
  402dd8:	f001 ffe0 	bl	404d9c <__ssprint_r>
  402ddc:	2800      	cmp	r0, #0
  402dde:	f47e af5d 	bne.w	401c9c <_svfprintf_r+0x1a4>
  402de2:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402de4:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402de6:	46c8      	mov	r8, r9
  402de8:	e7e6      	b.n	402db8 <_svfprintf_r+0x12c0>
  402dea:	aa25      	add	r2, sp, #148	; 0x94
  402dec:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402dee:	980c      	ldr	r0, [sp, #48]	; 0x30
  402df0:	f001 ffd4 	bl	404d9c <__ssprint_r>
  402df4:	2800      	cmp	r0, #0
  402df6:	f47e af51 	bne.w	401c9c <_svfprintf_r+0x1a4>
  402dfa:	991f      	ldr	r1, [sp, #124]	; 0x7c
  402dfc:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402dfe:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e00:	46c8      	mov	r8, r9
  402e02:	e667      	b.n	402ad4 <_svfprintf_r+0xfdc>
  402e04:	2000      	movs	r0, #0
  402e06:	900a      	str	r0, [sp, #40]	; 0x28
  402e08:	f7fe bed0 	b.w	401bac <_svfprintf_r+0xb4>
  402e0c:	3301      	adds	r3, #1
  402e0e:	443a      	add	r2, r7
  402e10:	2b07      	cmp	r3, #7
  402e12:	e888 00a0 	stmia.w	r8, {r5, r7}
  402e16:	9227      	str	r2, [sp, #156]	; 0x9c
  402e18:	9326      	str	r3, [sp, #152]	; 0x98
  402e1a:	f108 0808 	add.w	r8, r8, #8
  402e1e:	f77f ae5c 	ble.w	402ada <_svfprintf_r+0xfe2>
  402e22:	aa25      	add	r2, sp, #148	; 0x94
  402e24:	990b      	ldr	r1, [sp, #44]	; 0x2c
  402e26:	980c      	ldr	r0, [sp, #48]	; 0x30
  402e28:	f001 ffb8 	bl	404d9c <__ssprint_r>
  402e2c:	2800      	cmp	r0, #0
  402e2e:	f47e af35 	bne.w	401c9c <_svfprintf_r+0x1a4>
  402e32:	9a27      	ldr	r2, [sp, #156]	; 0x9c
  402e34:	9b26      	ldr	r3, [sp, #152]	; 0x98
  402e36:	46c8      	mov	r8, r9
  402e38:	e64f      	b.n	402ada <_svfprintf_r+0xfe2>
  402e3a:	3330      	adds	r3, #48	; 0x30
  402e3c:	2230      	movs	r2, #48	; 0x30
  402e3e:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
  402e42:	f88d 2086 	strb.w	r2, [sp, #134]	; 0x86
  402e46:	ab22      	add	r3, sp, #136	; 0x88
  402e48:	e70f      	b.n	402c6a <_svfprintf_r+0x1172>
  402e4a:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402e4c:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402e4e:	4413      	add	r3, r2
  402e50:	930e      	str	r3, [sp, #56]	; 0x38
  402e52:	e775      	b.n	402d40 <_svfprintf_r+0x1248>
  402e54:	9b23      	ldr	r3, [sp, #140]	; 0x8c
  402e56:	e5cb      	b.n	4029f0 <_svfprintf_r+0xef8>
  402e58:	9b14      	ldr	r3, [sp, #80]	; 0x50
  402e5a:	4e1d      	ldr	r6, [pc, #116]	; (402ed0 <_svfprintf_r+0x13d8>)
  402e5c:	2b00      	cmp	r3, #0
  402e5e:	bfb6      	itet	lt
  402e60:	272d      	movlt	r7, #45	; 0x2d
  402e62:	f89d 7077 	ldrbge.w	r7, [sp, #119]	; 0x77
  402e66:	f88d 7077 	strblt.w	r7, [sp, #119]	; 0x77
  402e6a:	4b1a      	ldr	r3, [pc, #104]	; (402ed4 <_svfprintf_r+0x13dc>)
  402e6c:	f7ff ba2f 	b.w	4022ce <_svfprintf_r+0x7d6>
  402e70:	9a16      	ldr	r2, [sp, #88]	; 0x58
  402e72:	9808      	ldr	r0, [sp, #32]
  402e74:	9b17      	ldr	r3, [sp, #92]	; 0x5c
  402e76:	4639      	mov	r1, r7
  402e78:	f003 f824 	bl	405ec4 <__aeabi_dcmpeq>
  402e7c:	2800      	cmp	r0, #0
  402e7e:	f47f ae7f 	bne.w	402b80 <_svfprintf_r+0x1088>
  402e82:	f1c5 0501 	rsb	r5, r5, #1
  402e86:	951f      	str	r5, [sp, #124]	; 0x7c
  402e88:	442c      	add	r4, r5
  402e8a:	e59e      	b.n	4029ca <_svfprintf_r+0xed2>
  402e8c:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402e8e:	9a19      	ldr	r2, [sp, #100]	; 0x64
  402e90:	4413      	add	r3, r2
  402e92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  402e94:	441a      	add	r2, r3
  402e96:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
  402e9a:	920e      	str	r2, [sp, #56]	; 0x38
  402e9c:	9308      	str	r3, [sp, #32]
  402e9e:	e5c7      	b.n	402a30 <_svfprintf_r+0xf38>
  402ea0:	9b12      	ldr	r3, [sp, #72]	; 0x48
  402ea2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
  402ea4:	f1c3 0301 	rsb	r3, r3, #1
  402ea8:	441a      	add	r2, r3
  402eaa:	4613      	mov	r3, r2
  402eac:	e7d0      	b.n	402e50 <_svfprintf_r+0x1358>
  402eae:	f01b 0301 	ands.w	r3, fp, #1
  402eb2:	9312      	str	r3, [sp, #72]	; 0x48
  402eb4:	f47f aee2 	bne.w	402c7c <_svfprintf_r+0x1184>
  402eb8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  402eba:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
  402ebe:	9308      	str	r3, [sp, #32]
  402ec0:	e5b6      	b.n	402a30 <_svfprintf_r+0xf38>
  402ec2:	bf00      	nop
  402ec4:	66666667 	.word	0x66666667
  402ec8:	00406a30 	.word	0x00406a30
  402ecc:	00406a4c 	.word	0x00406a4c
  402ed0:	00406a04 	.word	0x00406a04
  402ed4:	00406a00 	.word	0x00406a00
  402ed8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  402eda:	b913      	cbnz	r3, 402ee2 <_svfprintf_r+0x13ea>
  402edc:	f01b 0f01 	tst.w	fp, #1
  402ee0:	d002      	beq.n	402ee8 <_svfprintf_r+0x13f0>
  402ee2:	9b19      	ldr	r3, [sp, #100]	; 0x64
  402ee4:	3301      	adds	r3, #1
  402ee6:	e7d4      	b.n	402e92 <_svfprintf_r+0x139a>
  402ee8:	2301      	movs	r3, #1
  402eea:	e73a      	b.n	402d62 <_svfprintf_r+0x126a>
  402eec:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
  402eee:	f89a 3001 	ldrb.w	r3, [sl, #1]
  402ef2:	6828      	ldr	r0, [r5, #0]
  402ef4:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
  402ef8:	900a      	str	r0, [sp, #40]	; 0x28
  402efa:	4628      	mov	r0, r5
  402efc:	3004      	adds	r0, #4
  402efe:	46a2      	mov	sl, r4
  402f00:	900f      	str	r0, [sp, #60]	; 0x3c
  402f02:	f7fe be51 	b.w	401ba8 <_svfprintf_r+0xb0>
  402f06:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402f0a:	f7ff b867 	b.w	401fdc <_svfprintf_r+0x4e4>
  402f0e:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402f12:	f7ff ba15 	b.w	402340 <_svfprintf_r+0x848>
  402f16:	f10d 0386 	add.w	r3, sp, #134	; 0x86
  402f1a:	e6a6      	b.n	402c6a <_svfprintf_r+0x1172>
  402f1c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402f20:	f7ff b8eb 	b.w	4020fa <_svfprintf_r+0x602>
  402f24:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  402f26:	230c      	movs	r3, #12
  402f28:	6013      	str	r3, [r2, #0]
  402f2a:	f04f 33ff 	mov.w	r3, #4294967295
  402f2e:	9309      	str	r3, [sp, #36]	; 0x24
  402f30:	f7fe bebd 	b.w	401cae <_svfprintf_r+0x1b6>
  402f34:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402f38:	f7ff b99a 	b.w	402270 <_svfprintf_r+0x778>
  402f3c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402f40:	f7ff b976 	b.w	402230 <_svfprintf_r+0x738>
  402f44:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402f48:	f7ff b959 	b.w	4021fe <_svfprintf_r+0x706>
  402f4c:	f88d 1077 	strb.w	r1, [sp, #119]	; 0x77
  402f50:	f7ff b912 	b.w	402178 <_svfprintf_r+0x680>

00402f54 <register_fini>:
  402f54:	4b02      	ldr	r3, [pc, #8]	; (402f60 <register_fini+0xc>)
  402f56:	b113      	cbz	r3, 402f5e <register_fini+0xa>
  402f58:	4802      	ldr	r0, [pc, #8]	; (402f64 <register_fini+0x10>)
  402f5a:	f000 b805 	b.w	402f68 <atexit>
  402f5e:	4770      	bx	lr
  402f60:	00000000 	.word	0x00000000
  402f64:	00403ef5 	.word	0x00403ef5

00402f68 <atexit>:
  402f68:	2300      	movs	r3, #0
  402f6a:	4601      	mov	r1, r0
  402f6c:	461a      	mov	r2, r3
  402f6e:	4618      	mov	r0, r3
  402f70:	f001 bf92 	b.w	404e98 <__register_exitproc>

00402f74 <quorem>:
  402f74:	6902      	ldr	r2, [r0, #16]
  402f76:	690b      	ldr	r3, [r1, #16]
  402f78:	4293      	cmp	r3, r2
  402f7a:	f300 808d 	bgt.w	403098 <quorem+0x124>
  402f7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  402f82:	f103 38ff 	add.w	r8, r3, #4294967295
  402f86:	f101 0714 	add.w	r7, r1, #20
  402f8a:	f100 0b14 	add.w	fp, r0, #20
  402f8e:	f857 2028 	ldr.w	r2, [r7, r8, lsl #2]
  402f92:	f85b 3028 	ldr.w	r3, [fp, r8, lsl #2]
  402f96:	ea4f 0488 	mov.w	r4, r8, lsl #2
  402f9a:	b083      	sub	sp, #12
  402f9c:	3201      	adds	r2, #1
  402f9e:	fbb3 f9f2 	udiv	r9, r3, r2
  402fa2:	eb0b 0304 	add.w	r3, fp, r4
  402fa6:	9400      	str	r4, [sp, #0]
  402fa8:	eb07 0a04 	add.w	sl, r7, r4
  402fac:	9301      	str	r3, [sp, #4]
  402fae:	f1b9 0f00 	cmp.w	r9, #0
  402fb2:	d039      	beq.n	403028 <quorem+0xb4>
  402fb4:	2500      	movs	r5, #0
  402fb6:	462e      	mov	r6, r5
  402fb8:	46bc      	mov	ip, r7
  402fba:	46de      	mov	lr, fp
  402fbc:	f85c 4b04 	ldr.w	r4, [ip], #4
  402fc0:	f8de 3000 	ldr.w	r3, [lr]
  402fc4:	b2a2      	uxth	r2, r4
  402fc6:	fb09 5502 	mla	r5, r9, r2, r5
  402fca:	0c22      	lsrs	r2, r4, #16
  402fcc:	0c2c      	lsrs	r4, r5, #16
  402fce:	fb09 4202 	mla	r2, r9, r2, r4
  402fd2:	b2ad      	uxth	r5, r5
  402fd4:	1b75      	subs	r5, r6, r5
  402fd6:	b296      	uxth	r6, r2
  402fd8:	ebc6 4613 	rsb	r6, r6, r3, lsr #16
  402fdc:	fa15 f383 	uxtah	r3, r5, r3
  402fe0:	eb06 4623 	add.w	r6, r6, r3, asr #16
  402fe4:	b29b      	uxth	r3, r3
  402fe6:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
  402fea:	45e2      	cmp	sl, ip
  402fec:	ea4f 4512 	mov.w	r5, r2, lsr #16
  402ff0:	f84e 3b04 	str.w	r3, [lr], #4
  402ff4:	ea4f 4626 	mov.w	r6, r6, asr #16
  402ff8:	d2e0      	bcs.n	402fbc <quorem+0x48>
  402ffa:	9b00      	ldr	r3, [sp, #0]
  402ffc:	f85b 3003 	ldr.w	r3, [fp, r3]
  403000:	b993      	cbnz	r3, 403028 <quorem+0xb4>
  403002:	9c01      	ldr	r4, [sp, #4]
  403004:	1f23      	subs	r3, r4, #4
  403006:	459b      	cmp	fp, r3
  403008:	d20c      	bcs.n	403024 <quorem+0xb0>
  40300a:	f854 3c04 	ldr.w	r3, [r4, #-4]
  40300e:	b94b      	cbnz	r3, 403024 <quorem+0xb0>
  403010:	f1a4 0308 	sub.w	r3, r4, #8
  403014:	e002      	b.n	40301c <quorem+0xa8>
  403016:	681a      	ldr	r2, [r3, #0]
  403018:	3b04      	subs	r3, #4
  40301a:	b91a      	cbnz	r2, 403024 <quorem+0xb0>
  40301c:	459b      	cmp	fp, r3
  40301e:	f108 38ff 	add.w	r8, r8, #4294967295
  403022:	d3f8      	bcc.n	403016 <quorem+0xa2>
  403024:	f8c0 8010 	str.w	r8, [r0, #16]
  403028:	4604      	mov	r4, r0
  40302a:	f001 fd35 	bl	404a98 <__mcmp>
  40302e:	2800      	cmp	r0, #0
  403030:	db2e      	blt.n	403090 <quorem+0x11c>
  403032:	f109 0901 	add.w	r9, r9, #1
  403036:	465d      	mov	r5, fp
  403038:	2300      	movs	r3, #0
  40303a:	f857 1b04 	ldr.w	r1, [r7], #4
  40303e:	6828      	ldr	r0, [r5, #0]
  403040:	b28a      	uxth	r2, r1
  403042:	1a9a      	subs	r2, r3, r2
  403044:	0c0b      	lsrs	r3, r1, #16
  403046:	fa12 f280 	uxtah	r2, r2, r0
  40304a:	ebc3 4310 	rsb	r3, r3, r0, lsr #16
  40304e:	eb03 4322 	add.w	r3, r3, r2, asr #16
  403052:	b292      	uxth	r2, r2
  403054:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  403058:	45ba      	cmp	sl, r7
  40305a:	f845 2b04 	str.w	r2, [r5], #4
  40305e:	ea4f 4323 	mov.w	r3, r3, asr #16
  403062:	d2ea      	bcs.n	40303a <quorem+0xc6>
  403064:	f85b 2028 	ldr.w	r2, [fp, r8, lsl #2]
  403068:	eb0b 0388 	add.w	r3, fp, r8, lsl #2
  40306c:	b982      	cbnz	r2, 403090 <quorem+0x11c>
  40306e:	1f1a      	subs	r2, r3, #4
  403070:	4593      	cmp	fp, r2
  403072:	d20b      	bcs.n	40308c <quorem+0x118>
  403074:	f853 2c04 	ldr.w	r2, [r3, #-4]
  403078:	b942      	cbnz	r2, 40308c <quorem+0x118>
  40307a:	3b08      	subs	r3, #8
  40307c:	e002      	b.n	403084 <quorem+0x110>
  40307e:	681a      	ldr	r2, [r3, #0]
  403080:	3b04      	subs	r3, #4
  403082:	b91a      	cbnz	r2, 40308c <quorem+0x118>
  403084:	459b      	cmp	fp, r3
  403086:	f108 38ff 	add.w	r8, r8, #4294967295
  40308a:	d3f8      	bcc.n	40307e <quorem+0x10a>
  40308c:	f8c4 8010 	str.w	r8, [r4, #16]
  403090:	4648      	mov	r0, r9
  403092:	b003      	add	sp, #12
  403094:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403098:	2000      	movs	r0, #0
  40309a:	4770      	bx	lr
  40309c:	0000      	movs	r0, r0
	...

004030a0 <_dtoa_r>:
  4030a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  4030a4:	6c01      	ldr	r1, [r0, #64]	; 0x40
  4030a6:	b09b      	sub	sp, #108	; 0x6c
  4030a8:	4604      	mov	r4, r0
  4030aa:	9e27      	ldr	r6, [sp, #156]	; 0x9c
  4030ac:	4692      	mov	sl, r2
  4030ae:	469b      	mov	fp, r3
  4030b0:	b141      	cbz	r1, 4030c4 <_dtoa_r+0x24>
  4030b2:	6c42      	ldr	r2, [r0, #68]	; 0x44
  4030b4:	604a      	str	r2, [r1, #4]
  4030b6:	2301      	movs	r3, #1
  4030b8:	4093      	lsls	r3, r2
  4030ba:	608b      	str	r3, [r1, #8]
  4030bc:	f001 fb14 	bl	4046e8 <_Bfree>
  4030c0:	2300      	movs	r3, #0
  4030c2:	6423      	str	r3, [r4, #64]	; 0x40
  4030c4:	f1bb 0f00 	cmp.w	fp, #0
  4030c8:	465d      	mov	r5, fp
  4030ca:	db35      	blt.n	403138 <_dtoa_r+0x98>
  4030cc:	2300      	movs	r3, #0
  4030ce:	6033      	str	r3, [r6, #0]
  4030d0:	4b9d      	ldr	r3, [pc, #628]	; (403348 <_dtoa_r+0x2a8>)
  4030d2:	43ab      	bics	r3, r5
  4030d4:	d015      	beq.n	403102 <_dtoa_r+0x62>
  4030d6:	4650      	mov	r0, sl
  4030d8:	4659      	mov	r1, fp
  4030da:	2200      	movs	r2, #0
  4030dc:	2300      	movs	r3, #0
  4030de:	f002 fef1 	bl	405ec4 <__aeabi_dcmpeq>
  4030e2:	4680      	mov	r8, r0
  4030e4:	2800      	cmp	r0, #0
  4030e6:	d02d      	beq.n	403144 <_dtoa_r+0xa4>
  4030e8:	9a26      	ldr	r2, [sp, #152]	; 0x98
  4030ea:	2301      	movs	r3, #1
  4030ec:	6013      	str	r3, [r2, #0]
  4030ee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  4030f0:	2b00      	cmp	r3, #0
  4030f2:	f000 80bd 	beq.w	403270 <_dtoa_r+0x1d0>
  4030f6:	4895      	ldr	r0, [pc, #596]	; (40334c <_dtoa_r+0x2ac>)
  4030f8:	6018      	str	r0, [r3, #0]
  4030fa:	3801      	subs	r0, #1
  4030fc:	b01b      	add	sp, #108	; 0x6c
  4030fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  403102:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403104:	f242 730f 	movw	r3, #9999	; 0x270f
  403108:	6013      	str	r3, [r2, #0]
  40310a:	f1ba 0f00 	cmp.w	sl, #0
  40310e:	d10d      	bne.n	40312c <_dtoa_r+0x8c>
  403110:	f3c5 0513 	ubfx	r5, r5, #0, #20
  403114:	b955      	cbnz	r5, 40312c <_dtoa_r+0x8c>
  403116:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  403118:	488d      	ldr	r0, [pc, #564]	; (403350 <_dtoa_r+0x2b0>)
  40311a:	2b00      	cmp	r3, #0
  40311c:	d0ee      	beq.n	4030fc <_dtoa_r+0x5c>
  40311e:	f100 0308 	add.w	r3, r0, #8
  403122:	9a28      	ldr	r2, [sp, #160]	; 0xa0
  403124:	6013      	str	r3, [r2, #0]
  403126:	b01b      	add	sp, #108	; 0x6c
  403128:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40312c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40312e:	4889      	ldr	r0, [pc, #548]	; (403354 <_dtoa_r+0x2b4>)
  403130:	2b00      	cmp	r3, #0
  403132:	d0e3      	beq.n	4030fc <_dtoa_r+0x5c>
  403134:	1cc3      	adds	r3, r0, #3
  403136:	e7f4      	b.n	403122 <_dtoa_r+0x82>
  403138:	2301      	movs	r3, #1
  40313a:	f02b 4500 	bic.w	r5, fp, #2147483648	; 0x80000000
  40313e:	6033      	str	r3, [r6, #0]
  403140:	46ab      	mov	fp, r5
  403142:	e7c5      	b.n	4030d0 <_dtoa_r+0x30>
  403144:	aa18      	add	r2, sp, #96	; 0x60
  403146:	ab19      	add	r3, sp, #100	; 0x64
  403148:	9201      	str	r2, [sp, #4]
  40314a:	9300      	str	r3, [sp, #0]
  40314c:	4652      	mov	r2, sl
  40314e:	465b      	mov	r3, fp
  403150:	4620      	mov	r0, r4
  403152:	f001 fd41 	bl	404bd8 <__d2b>
  403156:	0d2b      	lsrs	r3, r5, #20
  403158:	4681      	mov	r9, r0
  40315a:	d071      	beq.n	403240 <_dtoa_r+0x1a0>
  40315c:	f3cb 0213 	ubfx	r2, fp, #0, #20
  403160:	f042 517f 	orr.w	r1, r2, #1069547520	; 0x3fc00000
  403164:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403166:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
  40316a:	4650      	mov	r0, sl
  40316c:	f2a3 36ff 	subw	r6, r3, #1023	; 0x3ff
  403170:	f441 1140 	orr.w	r1, r1, #3145728	; 0x300000
  403174:	2200      	movs	r2, #0
  403176:	4b78      	ldr	r3, [pc, #480]	; (403358 <_dtoa_r+0x2b8>)
  403178:	f002 fa88 	bl	40568c <__aeabi_dsub>
  40317c:	a36c      	add	r3, pc, #432	; (adr r3, 403330 <_dtoa_r+0x290>)
  40317e:	e9d3 2300 	ldrd	r2, r3, [r3]
  403182:	f002 fc37 	bl	4059f4 <__aeabi_dmul>
  403186:	a36c      	add	r3, pc, #432	; (adr r3, 403338 <_dtoa_r+0x298>)
  403188:	e9d3 2300 	ldrd	r2, r3, [r3]
  40318c:	f002 fa80 	bl	405690 <__adddf3>
  403190:	e9cd 0102 	strd	r0, r1, [sp, #8]
  403194:	4630      	mov	r0, r6
  403196:	f002 fbc7 	bl	405928 <__aeabi_i2d>
  40319a:	a369      	add	r3, pc, #420	; (adr r3, 403340 <_dtoa_r+0x2a0>)
  40319c:	e9d3 2300 	ldrd	r2, r3, [r3]
  4031a0:	f002 fc28 	bl	4059f4 <__aeabi_dmul>
  4031a4:	4602      	mov	r2, r0
  4031a6:	460b      	mov	r3, r1
  4031a8:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
  4031ac:	f002 fa70 	bl	405690 <__adddf3>
  4031b0:	e9cd 0104 	strd	r0, r1, [sp, #16]
  4031b4:	f002 fece 	bl	405f54 <__aeabi_d2iz>
  4031b8:	2200      	movs	r2, #0
  4031ba:	9002      	str	r0, [sp, #8]
  4031bc:	2300      	movs	r3, #0
  4031be:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4031c2:	f002 fe89 	bl	405ed8 <__aeabi_dcmplt>
  4031c6:	2800      	cmp	r0, #0
  4031c8:	f040 8173 	bne.w	4034b2 <_dtoa_r+0x412>
  4031cc:	9d02      	ldr	r5, [sp, #8]
  4031ce:	2d16      	cmp	r5, #22
  4031d0:	f200 815d 	bhi.w	40348e <_dtoa_r+0x3ee>
  4031d4:	4b61      	ldr	r3, [pc, #388]	; (40335c <_dtoa_r+0x2bc>)
  4031d6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
  4031da:	e9d3 0100 	ldrd	r0, r1, [r3]
  4031de:	4652      	mov	r2, sl
  4031e0:	465b      	mov	r3, fp
  4031e2:	f002 fe97 	bl	405f14 <__aeabi_dcmpgt>
  4031e6:	2800      	cmp	r0, #0
  4031e8:	f000 81c5 	beq.w	403576 <_dtoa_r+0x4d6>
  4031ec:	1e6b      	subs	r3, r5, #1
  4031ee:	9302      	str	r3, [sp, #8]
  4031f0:	2300      	movs	r3, #0
  4031f2:	930e      	str	r3, [sp, #56]	; 0x38
  4031f4:	1bbf      	subs	r7, r7, r6
  4031f6:	1e7b      	subs	r3, r7, #1
  4031f8:	9306      	str	r3, [sp, #24]
  4031fa:	f100 8154 	bmi.w	4034a6 <_dtoa_r+0x406>
  4031fe:	2300      	movs	r3, #0
  403200:	9308      	str	r3, [sp, #32]
  403202:	9b02      	ldr	r3, [sp, #8]
  403204:	2b00      	cmp	r3, #0
  403206:	f2c0 8145 	blt.w	403494 <_dtoa_r+0x3f4>
  40320a:	9a06      	ldr	r2, [sp, #24]
  40320c:	930d      	str	r3, [sp, #52]	; 0x34
  40320e:	4611      	mov	r1, r2
  403210:	4419      	add	r1, r3
  403212:	2300      	movs	r3, #0
  403214:	9106      	str	r1, [sp, #24]
  403216:	930c      	str	r3, [sp, #48]	; 0x30
  403218:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40321a:	2b09      	cmp	r3, #9
  40321c:	d82a      	bhi.n	403274 <_dtoa_r+0x1d4>
  40321e:	2b05      	cmp	r3, #5
  403220:	f340 865b 	ble.w	403eda <_dtoa_r+0xe3a>
  403224:	3b04      	subs	r3, #4
  403226:	9324      	str	r3, [sp, #144]	; 0x90
  403228:	2500      	movs	r5, #0
  40322a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40322c:	3b02      	subs	r3, #2
  40322e:	2b03      	cmp	r3, #3
  403230:	f200 8642 	bhi.w	403eb8 <_dtoa_r+0xe18>
  403234:	e8df f013 	tbh	[pc, r3, lsl #1]
  403238:	02c903d4 	.word	0x02c903d4
  40323c:	046103df 	.word	0x046103df
  403240:	9f18      	ldr	r7, [sp, #96]	; 0x60
  403242:	9e19      	ldr	r6, [sp, #100]	; 0x64
  403244:	443e      	add	r6, r7
  403246:	f206 4332 	addw	r3, r6, #1074	; 0x432
  40324a:	2b20      	cmp	r3, #32
  40324c:	f340 818e 	ble.w	40356c <_dtoa_r+0x4cc>
  403250:	f1c3 0340 	rsb	r3, r3, #64	; 0x40
  403254:	f206 4012 	addw	r0, r6, #1042	; 0x412
  403258:	409d      	lsls	r5, r3
  40325a:	fa2a f000 	lsr.w	r0, sl, r0
  40325e:	4328      	orrs	r0, r5
  403260:	f002 fb52 	bl	405908 <__aeabi_ui2d>
  403264:	2301      	movs	r3, #1
  403266:	3e01      	subs	r6, #1
  403268:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
  40326c:	9314      	str	r3, [sp, #80]	; 0x50
  40326e:	e781      	b.n	403174 <_dtoa_r+0xd4>
  403270:	483b      	ldr	r0, [pc, #236]	; (403360 <_dtoa_r+0x2c0>)
  403272:	e743      	b.n	4030fc <_dtoa_r+0x5c>
  403274:	2100      	movs	r1, #0
  403276:	6461      	str	r1, [r4, #68]	; 0x44
  403278:	4620      	mov	r0, r4
  40327a:	9125      	str	r1, [sp, #148]	; 0x94
  40327c:	f001 fa0e 	bl	40469c <_Balloc>
  403280:	f04f 33ff 	mov.w	r3, #4294967295
  403284:	930a      	str	r3, [sp, #40]	; 0x28
  403286:	9a25      	ldr	r2, [sp, #148]	; 0x94
  403288:	930f      	str	r3, [sp, #60]	; 0x3c
  40328a:	2301      	movs	r3, #1
  40328c:	9004      	str	r0, [sp, #16]
  40328e:	6420      	str	r0, [r4, #64]	; 0x40
  403290:	9224      	str	r2, [sp, #144]	; 0x90
  403292:	930b      	str	r3, [sp, #44]	; 0x2c
  403294:	9b19      	ldr	r3, [sp, #100]	; 0x64
  403296:	2b00      	cmp	r3, #0
  403298:	f2c0 80d9 	blt.w	40344e <_dtoa_r+0x3ae>
  40329c:	9a02      	ldr	r2, [sp, #8]
  40329e:	2a0e      	cmp	r2, #14
  4032a0:	f300 80d5 	bgt.w	40344e <_dtoa_r+0x3ae>
  4032a4:	4b2d      	ldr	r3, [pc, #180]	; (40335c <_dtoa_r+0x2bc>)
  4032a6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4032aa:	e9d3 2300 	ldrd	r2, r3, [r3]
  4032ae:	e9cd 2308 	strd	r2, r3, [sp, #32]
  4032b2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4032b4:	2b00      	cmp	r3, #0
  4032b6:	f2c0 83ba 	blt.w	403a2e <_dtoa_r+0x98e>
  4032ba:	e9dd 5608 	ldrd	r5, r6, [sp, #32]
  4032be:	4650      	mov	r0, sl
  4032c0:	462a      	mov	r2, r5
  4032c2:	4633      	mov	r3, r6
  4032c4:	4659      	mov	r1, fp
  4032c6:	f002 fcbf 	bl	405c48 <__aeabi_ddiv>
  4032ca:	f002 fe43 	bl	405f54 <__aeabi_d2iz>
  4032ce:	4680      	mov	r8, r0
  4032d0:	f002 fb2a 	bl	405928 <__aeabi_i2d>
  4032d4:	462a      	mov	r2, r5
  4032d6:	4633      	mov	r3, r6
  4032d8:	f002 fb8c 	bl	4059f4 <__aeabi_dmul>
  4032dc:	460b      	mov	r3, r1
  4032de:	4602      	mov	r2, r0
  4032e0:	4659      	mov	r1, fp
  4032e2:	4650      	mov	r0, sl
  4032e4:	f002 f9d2 	bl	40568c <__aeabi_dsub>
  4032e8:	9d04      	ldr	r5, [sp, #16]
  4032ea:	f108 0330 	add.w	r3, r8, #48	; 0x30
  4032ee:	702b      	strb	r3, [r5, #0]
  4032f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4032f2:	2b01      	cmp	r3, #1
  4032f4:	4606      	mov	r6, r0
  4032f6:	460f      	mov	r7, r1
  4032f8:	f105 0501 	add.w	r5, r5, #1
  4032fc:	d068      	beq.n	4033d0 <_dtoa_r+0x330>
  4032fe:	2200      	movs	r2, #0
  403300:	4b18      	ldr	r3, [pc, #96]	; (403364 <_dtoa_r+0x2c4>)
  403302:	f002 fb77 	bl	4059f4 <__aeabi_dmul>
  403306:	2200      	movs	r2, #0
  403308:	2300      	movs	r3, #0
  40330a:	4606      	mov	r6, r0
  40330c:	460f      	mov	r7, r1
  40330e:	f002 fdd9 	bl	405ec4 <__aeabi_dcmpeq>
  403312:	2800      	cmp	r0, #0
  403314:	f040 8088 	bne.w	403428 <_dtoa_r+0x388>
  403318:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
  40331c:	f04f 0a00 	mov.w	sl, #0
  403320:	f8df b040 	ldr.w	fp, [pc, #64]	; 403364 <_dtoa_r+0x2c4>
  403324:	940c      	str	r4, [sp, #48]	; 0x30
  403326:	e9dd 8908 	ldrd	r8, r9, [sp, #32]
  40332a:	e028      	b.n	40337e <_dtoa_r+0x2de>
  40332c:	f3af 8000 	nop.w
  403330:	636f4361 	.word	0x636f4361
  403334:	3fd287a7 	.word	0x3fd287a7
  403338:	8b60c8b3 	.word	0x8b60c8b3
  40333c:	3fc68a28 	.word	0x3fc68a28
  403340:	509f79fb 	.word	0x509f79fb
  403344:	3fd34413 	.word	0x3fd34413
  403348:	7ff00000 	.word	0x7ff00000
  40334c:	00406a39 	.word	0x00406a39
  403350:	00406a5c 	.word	0x00406a5c
  403354:	00406a68 	.word	0x00406a68
  403358:	3ff80000 	.word	0x3ff80000
  40335c:	00406a98 	.word	0x00406a98
  403360:	00406a38 	.word	0x00406a38
  403364:	40240000 	.word	0x40240000
  403368:	f002 fb44 	bl	4059f4 <__aeabi_dmul>
  40336c:	2200      	movs	r2, #0
  40336e:	2300      	movs	r3, #0
  403370:	4606      	mov	r6, r0
  403372:	460f      	mov	r7, r1
  403374:	f002 fda6 	bl	405ec4 <__aeabi_dcmpeq>
  403378:	2800      	cmp	r0, #0
  40337a:	f040 83c1 	bne.w	403b00 <_dtoa_r+0xa60>
  40337e:	4642      	mov	r2, r8
  403380:	464b      	mov	r3, r9
  403382:	4630      	mov	r0, r6
  403384:	4639      	mov	r1, r7
  403386:	f002 fc5f 	bl	405c48 <__aeabi_ddiv>
  40338a:	f002 fde3 	bl	405f54 <__aeabi_d2iz>
  40338e:	4604      	mov	r4, r0
  403390:	f002 faca 	bl	405928 <__aeabi_i2d>
  403394:	4642      	mov	r2, r8
  403396:	464b      	mov	r3, r9
  403398:	f002 fb2c 	bl	4059f4 <__aeabi_dmul>
  40339c:	4602      	mov	r2, r0
  40339e:	460b      	mov	r3, r1
  4033a0:	4630      	mov	r0, r6
  4033a2:	4639      	mov	r1, r7
  4033a4:	f002 f972 	bl	40568c <__aeabi_dsub>
  4033a8:	f104 0e30 	add.w	lr, r4, #48	; 0x30
  4033ac:	9e04      	ldr	r6, [sp, #16]
  4033ae:	f805 eb01 	strb.w	lr, [r5], #1
  4033b2:	eba5 0e06 	sub.w	lr, r5, r6
  4033b6:	9e0a      	ldr	r6, [sp, #40]	; 0x28
  4033b8:	45b6      	cmp	lr, r6
  4033ba:	e9cd 0106 	strd	r0, r1, [sp, #24]
  4033be:	4652      	mov	r2, sl
  4033c0:	465b      	mov	r3, fp
  4033c2:	d1d1      	bne.n	403368 <_dtoa_r+0x2c8>
  4033c4:	46a0      	mov	r8, r4
  4033c6:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  4033ca:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  4033cc:	4606      	mov	r6, r0
  4033ce:	460f      	mov	r7, r1
  4033d0:	4632      	mov	r2, r6
  4033d2:	463b      	mov	r3, r7
  4033d4:	4630      	mov	r0, r6
  4033d6:	4639      	mov	r1, r7
  4033d8:	f002 f95a 	bl	405690 <__adddf3>
  4033dc:	4606      	mov	r6, r0
  4033de:	460f      	mov	r7, r1
  4033e0:	4602      	mov	r2, r0
  4033e2:	460b      	mov	r3, r1
  4033e4:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4033e8:	f002 fd76 	bl	405ed8 <__aeabi_dcmplt>
  4033ec:	b948      	cbnz	r0, 403402 <_dtoa_r+0x362>
  4033ee:	4632      	mov	r2, r6
  4033f0:	463b      	mov	r3, r7
  4033f2:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  4033f6:	f002 fd65 	bl	405ec4 <__aeabi_dcmpeq>
  4033fa:	b1a8      	cbz	r0, 403428 <_dtoa_r+0x388>
  4033fc:	f018 0f01 	tst.w	r8, #1
  403400:	d012      	beq.n	403428 <_dtoa_r+0x388>
  403402:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403406:	9a04      	ldr	r2, [sp, #16]
  403408:	1e6b      	subs	r3, r5, #1
  40340a:	e004      	b.n	403416 <_dtoa_r+0x376>
  40340c:	429a      	cmp	r2, r3
  40340e:	f000 8401 	beq.w	403c14 <_dtoa_r+0xb74>
  403412:	f813 8d01 	ldrb.w	r8, [r3, #-1]!
  403416:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
  40341a:	f103 0501 	add.w	r5, r3, #1
  40341e:	d0f5      	beq.n	40340c <_dtoa_r+0x36c>
  403420:	f108 0801 	add.w	r8, r8, #1
  403424:	f883 8000 	strb.w	r8, [r3]
  403428:	4649      	mov	r1, r9
  40342a:	4620      	mov	r0, r4
  40342c:	f001 f95c 	bl	4046e8 <_Bfree>
  403430:	2200      	movs	r2, #0
  403432:	9b02      	ldr	r3, [sp, #8]
  403434:	702a      	strb	r2, [r5, #0]
  403436:	9a26      	ldr	r2, [sp, #152]	; 0x98
  403438:	3301      	adds	r3, #1
  40343a:	6013      	str	r3, [r2, #0]
  40343c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
  40343e:	2b00      	cmp	r3, #0
  403440:	f000 839e 	beq.w	403b80 <_dtoa_r+0xae0>
  403444:	9804      	ldr	r0, [sp, #16]
  403446:	601d      	str	r5, [r3, #0]
  403448:	b01b      	add	sp, #108	; 0x6c
  40344a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40344e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403450:	2a00      	cmp	r2, #0
  403452:	d03e      	beq.n	4034d2 <_dtoa_r+0x432>
  403454:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403456:	2a01      	cmp	r2, #1
  403458:	f340 8311 	ble.w	403a7e <_dtoa_r+0x9de>
  40345c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40345e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403460:	1e5f      	subs	r7, r3, #1
  403462:	42ba      	cmp	r2, r7
  403464:	f2c0 838f 	blt.w	403b86 <_dtoa_r+0xae6>
  403468:	1bd7      	subs	r7, r2, r7
  40346a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40346c:	2b00      	cmp	r3, #0
  40346e:	f2c0 848b 	blt.w	403d88 <_dtoa_r+0xce8>
  403472:	9d08      	ldr	r5, [sp, #32]
  403474:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403476:	9a08      	ldr	r2, [sp, #32]
  403478:	441a      	add	r2, r3
  40347a:	9208      	str	r2, [sp, #32]
  40347c:	9a06      	ldr	r2, [sp, #24]
  40347e:	2101      	movs	r1, #1
  403480:	441a      	add	r2, r3
  403482:	4620      	mov	r0, r4
  403484:	9206      	str	r2, [sp, #24]
  403486:	f001 f9c9 	bl	40481c <__i2b>
  40348a:	4606      	mov	r6, r0
  40348c:	e024      	b.n	4034d8 <_dtoa_r+0x438>
  40348e:	2301      	movs	r3, #1
  403490:	930e      	str	r3, [sp, #56]	; 0x38
  403492:	e6af      	b.n	4031f4 <_dtoa_r+0x154>
  403494:	9a08      	ldr	r2, [sp, #32]
  403496:	9b02      	ldr	r3, [sp, #8]
  403498:	1ad2      	subs	r2, r2, r3
  40349a:	425b      	negs	r3, r3
  40349c:	930c      	str	r3, [sp, #48]	; 0x30
  40349e:	2300      	movs	r3, #0
  4034a0:	9208      	str	r2, [sp, #32]
  4034a2:	930d      	str	r3, [sp, #52]	; 0x34
  4034a4:	e6b8      	b.n	403218 <_dtoa_r+0x178>
  4034a6:	f1c7 0301 	rsb	r3, r7, #1
  4034aa:	9308      	str	r3, [sp, #32]
  4034ac:	2300      	movs	r3, #0
  4034ae:	9306      	str	r3, [sp, #24]
  4034b0:	e6a7      	b.n	403202 <_dtoa_r+0x162>
  4034b2:	9d02      	ldr	r5, [sp, #8]
  4034b4:	4628      	mov	r0, r5
  4034b6:	f002 fa37 	bl	405928 <__aeabi_i2d>
  4034ba:	4602      	mov	r2, r0
  4034bc:	460b      	mov	r3, r1
  4034be:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
  4034c2:	f002 fcff 	bl	405ec4 <__aeabi_dcmpeq>
  4034c6:	2800      	cmp	r0, #0
  4034c8:	f47f ae80 	bne.w	4031cc <_dtoa_r+0x12c>
  4034cc:	1e6b      	subs	r3, r5, #1
  4034ce:	9302      	str	r3, [sp, #8]
  4034d0:	e67c      	b.n	4031cc <_dtoa_r+0x12c>
  4034d2:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  4034d4:	9d08      	ldr	r5, [sp, #32]
  4034d6:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
  4034d8:	2d00      	cmp	r5, #0
  4034da:	dd0c      	ble.n	4034f6 <_dtoa_r+0x456>
  4034dc:	9906      	ldr	r1, [sp, #24]
  4034de:	2900      	cmp	r1, #0
  4034e0:	460b      	mov	r3, r1
  4034e2:	dd08      	ble.n	4034f6 <_dtoa_r+0x456>
  4034e4:	42a9      	cmp	r1, r5
  4034e6:	9a08      	ldr	r2, [sp, #32]
  4034e8:	bfa8      	it	ge
  4034ea:	462b      	movge	r3, r5
  4034ec:	1ad2      	subs	r2, r2, r3
  4034ee:	1aed      	subs	r5, r5, r3
  4034f0:	1acb      	subs	r3, r1, r3
  4034f2:	9208      	str	r2, [sp, #32]
  4034f4:	9306      	str	r3, [sp, #24]
  4034f6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  4034f8:	b1d3      	cbz	r3, 403530 <_dtoa_r+0x490>
  4034fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4034fc:	2b00      	cmp	r3, #0
  4034fe:	f000 82b7 	beq.w	403a70 <_dtoa_r+0x9d0>
  403502:	2f00      	cmp	r7, #0
  403504:	dd10      	ble.n	403528 <_dtoa_r+0x488>
  403506:	4631      	mov	r1, r6
  403508:	463a      	mov	r2, r7
  40350a:	4620      	mov	r0, r4
  40350c:	f001 fa22 	bl	404954 <__pow5mult>
  403510:	464a      	mov	r2, r9
  403512:	4601      	mov	r1, r0
  403514:	4606      	mov	r6, r0
  403516:	4620      	mov	r0, r4
  403518:	f001 f98a 	bl	404830 <__multiply>
  40351c:	4649      	mov	r1, r9
  40351e:	4680      	mov	r8, r0
  403520:	4620      	mov	r0, r4
  403522:	f001 f8e1 	bl	4046e8 <_Bfree>
  403526:	46c1      	mov	r9, r8
  403528:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  40352a:	1bda      	subs	r2, r3, r7
  40352c:	f040 82a1 	bne.w	403a72 <_dtoa_r+0x9d2>
  403530:	2101      	movs	r1, #1
  403532:	4620      	mov	r0, r4
  403534:	f001 f972 	bl	40481c <__i2b>
  403538:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  40353a:	2b00      	cmp	r3, #0
  40353c:	4680      	mov	r8, r0
  40353e:	dd1c      	ble.n	40357a <_dtoa_r+0x4da>
  403540:	4601      	mov	r1, r0
  403542:	461a      	mov	r2, r3
  403544:	4620      	mov	r0, r4
  403546:	f001 fa05 	bl	404954 <__pow5mult>
  40354a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40354c:	2b01      	cmp	r3, #1
  40354e:	4680      	mov	r8, r0
  403550:	f340 8254 	ble.w	4039fc <_dtoa_r+0x95c>
  403554:	2300      	movs	r3, #0
  403556:	930c      	str	r3, [sp, #48]	; 0x30
  403558:	f8d8 3010 	ldr.w	r3, [r8, #16]
  40355c:	eb08 0383 	add.w	r3, r8, r3, lsl #2
  403560:	6918      	ldr	r0, [r3, #16]
  403562:	f001 f90b 	bl	40477c <__hi0bits>
  403566:	f1c0 0020 	rsb	r0, r0, #32
  40356a:	e010      	b.n	40358e <_dtoa_r+0x4ee>
  40356c:	f1c3 0520 	rsb	r5, r3, #32
  403570:	fa0a f005 	lsl.w	r0, sl, r5
  403574:	e674      	b.n	403260 <_dtoa_r+0x1c0>
  403576:	900e      	str	r0, [sp, #56]	; 0x38
  403578:	e63c      	b.n	4031f4 <_dtoa_r+0x154>
  40357a:	9b24      	ldr	r3, [sp, #144]	; 0x90
  40357c:	2b01      	cmp	r3, #1
  40357e:	f340 8287 	ble.w	403a90 <_dtoa_r+0x9f0>
  403582:	2300      	movs	r3, #0
  403584:	930c      	str	r3, [sp, #48]	; 0x30
  403586:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  403588:	2001      	movs	r0, #1
  40358a:	2b00      	cmp	r3, #0
  40358c:	d1e4      	bne.n	403558 <_dtoa_r+0x4b8>
  40358e:	9a06      	ldr	r2, [sp, #24]
  403590:	4410      	add	r0, r2
  403592:	f010 001f 	ands.w	r0, r0, #31
  403596:	f000 80a1 	beq.w	4036dc <_dtoa_r+0x63c>
  40359a:	f1c0 0320 	rsb	r3, r0, #32
  40359e:	2b04      	cmp	r3, #4
  4035a0:	f340 849e 	ble.w	403ee0 <_dtoa_r+0xe40>
  4035a4:	9b08      	ldr	r3, [sp, #32]
  4035a6:	f1c0 001c 	rsb	r0, r0, #28
  4035aa:	4403      	add	r3, r0
  4035ac:	9308      	str	r3, [sp, #32]
  4035ae:	4613      	mov	r3, r2
  4035b0:	4403      	add	r3, r0
  4035b2:	4405      	add	r5, r0
  4035b4:	9306      	str	r3, [sp, #24]
  4035b6:	9b08      	ldr	r3, [sp, #32]
  4035b8:	2b00      	cmp	r3, #0
  4035ba:	dd05      	ble.n	4035c8 <_dtoa_r+0x528>
  4035bc:	4649      	mov	r1, r9
  4035be:	461a      	mov	r2, r3
  4035c0:	4620      	mov	r0, r4
  4035c2:	f001 fa17 	bl	4049f4 <__lshift>
  4035c6:	4681      	mov	r9, r0
  4035c8:	9b06      	ldr	r3, [sp, #24]
  4035ca:	2b00      	cmp	r3, #0
  4035cc:	dd05      	ble.n	4035da <_dtoa_r+0x53a>
  4035ce:	4641      	mov	r1, r8
  4035d0:	461a      	mov	r2, r3
  4035d2:	4620      	mov	r0, r4
  4035d4:	f001 fa0e 	bl	4049f4 <__lshift>
  4035d8:	4680      	mov	r8, r0
  4035da:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  4035dc:	2b00      	cmp	r3, #0
  4035de:	f040 8086 	bne.w	4036ee <_dtoa_r+0x64e>
  4035e2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4035e4:	2b00      	cmp	r3, #0
  4035e6:	f340 8266 	ble.w	403ab6 <_dtoa_r+0xa16>
  4035ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4035ec:	2b00      	cmp	r3, #0
  4035ee:	f000 8098 	beq.w	403722 <_dtoa_r+0x682>
  4035f2:	2d00      	cmp	r5, #0
  4035f4:	dd05      	ble.n	403602 <_dtoa_r+0x562>
  4035f6:	4631      	mov	r1, r6
  4035f8:	462a      	mov	r2, r5
  4035fa:	4620      	mov	r0, r4
  4035fc:	f001 f9fa 	bl	4049f4 <__lshift>
  403600:	4606      	mov	r6, r0
  403602:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403604:	2b00      	cmp	r3, #0
  403606:	f040 8337 	bne.w	403c78 <_dtoa_r+0xbd8>
  40360a:	9606      	str	r6, [sp, #24]
  40360c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  40360e:	9a04      	ldr	r2, [sp, #16]
  403610:	f8dd b018 	ldr.w	fp, [sp, #24]
  403614:	3b01      	subs	r3, #1
  403616:	18d3      	adds	r3, r2, r3
  403618:	930b      	str	r3, [sp, #44]	; 0x2c
  40361a:	f00a 0301 	and.w	r3, sl, #1
  40361e:	930c      	str	r3, [sp, #48]	; 0x30
  403620:	4617      	mov	r7, r2
  403622:	46c2      	mov	sl, r8
  403624:	4651      	mov	r1, sl
  403626:	4648      	mov	r0, r9
  403628:	f7ff fca4 	bl	402f74 <quorem>
  40362c:	4631      	mov	r1, r6
  40362e:	4605      	mov	r5, r0
  403630:	4648      	mov	r0, r9
  403632:	f001 fa31 	bl	404a98 <__mcmp>
  403636:	465a      	mov	r2, fp
  403638:	900a      	str	r0, [sp, #40]	; 0x28
  40363a:	4651      	mov	r1, sl
  40363c:	4620      	mov	r0, r4
  40363e:	f001 fa47 	bl	404ad0 <__mdiff>
  403642:	68c2      	ldr	r2, [r0, #12]
  403644:	4680      	mov	r8, r0
  403646:	f105 0330 	add.w	r3, r5, #48	; 0x30
  40364a:	2a00      	cmp	r2, #0
  40364c:	f040 822b 	bne.w	403aa6 <_dtoa_r+0xa06>
  403650:	4601      	mov	r1, r0
  403652:	4648      	mov	r0, r9
  403654:	9308      	str	r3, [sp, #32]
  403656:	f001 fa1f 	bl	404a98 <__mcmp>
  40365a:	4641      	mov	r1, r8
  40365c:	9006      	str	r0, [sp, #24]
  40365e:	4620      	mov	r0, r4
  403660:	f001 f842 	bl	4046e8 <_Bfree>
  403664:	9a06      	ldr	r2, [sp, #24]
  403666:	9b08      	ldr	r3, [sp, #32]
  403668:	b932      	cbnz	r2, 403678 <_dtoa_r+0x5d8>
  40366a:	9924      	ldr	r1, [sp, #144]	; 0x90
  40366c:	b921      	cbnz	r1, 403678 <_dtoa_r+0x5d8>
  40366e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403670:	2a00      	cmp	r2, #0
  403672:	f000 83ef 	beq.w	403e54 <_dtoa_r+0xdb4>
  403676:	9a24      	ldr	r2, [sp, #144]	; 0x90
  403678:	990a      	ldr	r1, [sp, #40]	; 0x28
  40367a:	2900      	cmp	r1, #0
  40367c:	f2c0 829f 	blt.w	403bbe <_dtoa_r+0xb1e>
  403680:	d105      	bne.n	40368e <_dtoa_r+0x5ee>
  403682:	9924      	ldr	r1, [sp, #144]	; 0x90
  403684:	b919      	cbnz	r1, 40368e <_dtoa_r+0x5ee>
  403686:	990c      	ldr	r1, [sp, #48]	; 0x30
  403688:	2900      	cmp	r1, #0
  40368a:	f000 8298 	beq.w	403bbe <_dtoa_r+0xb1e>
  40368e:	2a00      	cmp	r2, #0
  403690:	f300 8306 	bgt.w	403ca0 <_dtoa_r+0xc00>
  403694:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  403696:	703b      	strb	r3, [r7, #0]
  403698:	f107 0801 	add.w	r8, r7, #1
  40369c:	4297      	cmp	r7, r2
  40369e:	4645      	mov	r5, r8
  4036a0:	f000 830c 	beq.w	403cbc <_dtoa_r+0xc1c>
  4036a4:	4649      	mov	r1, r9
  4036a6:	2300      	movs	r3, #0
  4036a8:	220a      	movs	r2, #10
  4036aa:	4620      	mov	r0, r4
  4036ac:	f001 f826 	bl	4046fc <__multadd>
  4036b0:	455e      	cmp	r6, fp
  4036b2:	4681      	mov	r9, r0
  4036b4:	4631      	mov	r1, r6
  4036b6:	f04f 0300 	mov.w	r3, #0
  4036ba:	f04f 020a 	mov.w	r2, #10
  4036be:	4620      	mov	r0, r4
  4036c0:	f000 81eb 	beq.w	403a9a <_dtoa_r+0x9fa>
  4036c4:	f001 f81a 	bl	4046fc <__multadd>
  4036c8:	4659      	mov	r1, fp
  4036ca:	4606      	mov	r6, r0
  4036cc:	2300      	movs	r3, #0
  4036ce:	220a      	movs	r2, #10
  4036d0:	4620      	mov	r0, r4
  4036d2:	f001 f813 	bl	4046fc <__multadd>
  4036d6:	4647      	mov	r7, r8
  4036d8:	4683      	mov	fp, r0
  4036da:	e7a3      	b.n	403624 <_dtoa_r+0x584>
  4036dc:	201c      	movs	r0, #28
  4036de:	9b08      	ldr	r3, [sp, #32]
  4036e0:	4403      	add	r3, r0
  4036e2:	9308      	str	r3, [sp, #32]
  4036e4:	9b06      	ldr	r3, [sp, #24]
  4036e6:	4403      	add	r3, r0
  4036e8:	4405      	add	r5, r0
  4036ea:	9306      	str	r3, [sp, #24]
  4036ec:	e763      	b.n	4035b6 <_dtoa_r+0x516>
  4036ee:	4641      	mov	r1, r8
  4036f0:	4648      	mov	r0, r9
  4036f2:	f001 f9d1 	bl	404a98 <__mcmp>
  4036f6:	2800      	cmp	r0, #0
  4036f8:	f6bf af73 	bge.w	4035e2 <_dtoa_r+0x542>
  4036fc:	9f02      	ldr	r7, [sp, #8]
  4036fe:	4649      	mov	r1, r9
  403700:	2300      	movs	r3, #0
  403702:	220a      	movs	r2, #10
  403704:	4620      	mov	r0, r4
  403706:	3f01      	subs	r7, #1
  403708:	9702      	str	r7, [sp, #8]
  40370a:	f000 fff7 	bl	4046fc <__multadd>
  40370e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  403710:	4681      	mov	r9, r0
  403712:	2b00      	cmp	r3, #0
  403714:	f040 83b6 	bne.w	403e84 <_dtoa_r+0xde4>
  403718:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  40371a:	2b00      	cmp	r3, #0
  40371c:	f340 83bf 	ble.w	403e9e <_dtoa_r+0xdfe>
  403720:	930a      	str	r3, [sp, #40]	; 0x28
  403722:	f8dd b010 	ldr.w	fp, [sp, #16]
  403726:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  403728:	465d      	mov	r5, fp
  40372a:	e002      	b.n	403732 <_dtoa_r+0x692>
  40372c:	f000 ffe6 	bl	4046fc <__multadd>
  403730:	4681      	mov	r9, r0
  403732:	4641      	mov	r1, r8
  403734:	4648      	mov	r0, r9
  403736:	f7ff fc1d 	bl	402f74 <quorem>
  40373a:	f100 0a30 	add.w	sl, r0, #48	; 0x30
  40373e:	f805 ab01 	strb.w	sl, [r5], #1
  403742:	eba5 030b 	sub.w	r3, r5, fp
  403746:	42bb      	cmp	r3, r7
  403748:	f04f 020a 	mov.w	r2, #10
  40374c:	f04f 0300 	mov.w	r3, #0
  403750:	4649      	mov	r1, r9
  403752:	4620      	mov	r0, r4
  403754:	dbea      	blt.n	40372c <_dtoa_r+0x68c>
  403756:	9b04      	ldr	r3, [sp, #16]
  403758:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  40375a:	2a01      	cmp	r2, #1
  40375c:	bfac      	ite	ge
  40375e:	189b      	addge	r3, r3, r2
  403760:	3301      	addlt	r3, #1
  403762:	461d      	mov	r5, r3
  403764:	f04f 0b00 	mov.w	fp, #0
  403768:	4649      	mov	r1, r9
  40376a:	2201      	movs	r2, #1
  40376c:	4620      	mov	r0, r4
  40376e:	f001 f941 	bl	4049f4 <__lshift>
  403772:	4641      	mov	r1, r8
  403774:	4681      	mov	r9, r0
  403776:	f001 f98f 	bl	404a98 <__mcmp>
  40377a:	2800      	cmp	r0, #0
  40377c:	f340 823d 	ble.w	403bfa <_dtoa_r+0xb5a>
  403780:	f815 2c01 	ldrb.w	r2, [r5, #-1]
  403784:	9904      	ldr	r1, [sp, #16]
  403786:	1e6b      	subs	r3, r5, #1
  403788:	e004      	b.n	403794 <_dtoa_r+0x6f4>
  40378a:	428b      	cmp	r3, r1
  40378c:	f000 81ae 	beq.w	403aec <_dtoa_r+0xa4c>
  403790:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
  403794:	2a39      	cmp	r2, #57	; 0x39
  403796:	f103 0501 	add.w	r5, r3, #1
  40379a:	d0f6      	beq.n	40378a <_dtoa_r+0x6ea>
  40379c:	3201      	adds	r2, #1
  40379e:	701a      	strb	r2, [r3, #0]
  4037a0:	4641      	mov	r1, r8
  4037a2:	4620      	mov	r0, r4
  4037a4:	f000 ffa0 	bl	4046e8 <_Bfree>
  4037a8:	2e00      	cmp	r6, #0
  4037aa:	f43f ae3d 	beq.w	403428 <_dtoa_r+0x388>
  4037ae:	f1bb 0f00 	cmp.w	fp, #0
  4037b2:	d005      	beq.n	4037c0 <_dtoa_r+0x720>
  4037b4:	45b3      	cmp	fp, r6
  4037b6:	d003      	beq.n	4037c0 <_dtoa_r+0x720>
  4037b8:	4659      	mov	r1, fp
  4037ba:	4620      	mov	r0, r4
  4037bc:	f000 ff94 	bl	4046e8 <_Bfree>
  4037c0:	4631      	mov	r1, r6
  4037c2:	4620      	mov	r0, r4
  4037c4:	f000 ff90 	bl	4046e8 <_Bfree>
  4037c8:	e62e      	b.n	403428 <_dtoa_r+0x388>
  4037ca:	2300      	movs	r3, #0
  4037cc:	930b      	str	r3, [sp, #44]	; 0x2c
  4037ce:	9b02      	ldr	r3, [sp, #8]
  4037d0:	9a25      	ldr	r2, [sp, #148]	; 0x94
  4037d2:	4413      	add	r3, r2
  4037d4:	930f      	str	r3, [sp, #60]	; 0x3c
  4037d6:	3301      	adds	r3, #1
  4037d8:	2b01      	cmp	r3, #1
  4037da:	461f      	mov	r7, r3
  4037dc:	461e      	mov	r6, r3
  4037de:	930a      	str	r3, [sp, #40]	; 0x28
  4037e0:	bfb8      	it	lt
  4037e2:	2701      	movlt	r7, #1
  4037e4:	2100      	movs	r1, #0
  4037e6:	2f17      	cmp	r7, #23
  4037e8:	6461      	str	r1, [r4, #68]	; 0x44
  4037ea:	d90a      	bls.n	403802 <_dtoa_r+0x762>
  4037ec:	2201      	movs	r2, #1
  4037ee:	2304      	movs	r3, #4
  4037f0:	005b      	lsls	r3, r3, #1
  4037f2:	f103 0014 	add.w	r0, r3, #20
  4037f6:	4287      	cmp	r7, r0
  4037f8:	4611      	mov	r1, r2
  4037fa:	f102 0201 	add.w	r2, r2, #1
  4037fe:	d2f7      	bcs.n	4037f0 <_dtoa_r+0x750>
  403800:	6461      	str	r1, [r4, #68]	; 0x44
  403802:	4620      	mov	r0, r4
  403804:	f000 ff4a 	bl	40469c <_Balloc>
  403808:	2e0e      	cmp	r6, #14
  40380a:	9004      	str	r0, [sp, #16]
  40380c:	6420      	str	r0, [r4, #64]	; 0x40
  40380e:	f63f ad41 	bhi.w	403294 <_dtoa_r+0x1f4>
  403812:	2d00      	cmp	r5, #0
  403814:	f43f ad3e 	beq.w	403294 <_dtoa_r+0x1f4>
  403818:	9902      	ldr	r1, [sp, #8]
  40381a:	2900      	cmp	r1, #0
  40381c:	e9cd ab10 	strd	sl, fp, [sp, #64]	; 0x40
  403820:	f340 8202 	ble.w	403c28 <_dtoa_r+0xb88>
  403824:	4bb8      	ldr	r3, [pc, #736]	; (403b08 <_dtoa_r+0xa68>)
  403826:	f001 020f 	and.w	r2, r1, #15
  40382a:	110d      	asrs	r5, r1, #4
  40382c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403830:	06e9      	lsls	r1, r5, #27
  403832:	e9d3 6700 	ldrd	r6, r7, [r3]
  403836:	f140 81ae 	bpl.w	403b96 <_dtoa_r+0xaf6>
  40383a:	4bb4      	ldr	r3, [pc, #720]	; (403b0c <_dtoa_r+0xa6c>)
  40383c:	4650      	mov	r0, sl
  40383e:	4659      	mov	r1, fp
  403840:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
  403844:	f002 fa00 	bl	405c48 <__aeabi_ddiv>
  403848:	e9cd 0112 	strd	r0, r1, [sp, #72]	; 0x48
  40384c:	f005 050f 	and.w	r5, r5, #15
  403850:	f04f 0a03 	mov.w	sl, #3
  403854:	b18d      	cbz	r5, 40387a <_dtoa_r+0x7da>
  403856:	f8df 82b4 	ldr.w	r8, [pc, #692]	; 403b0c <_dtoa_r+0xa6c>
  40385a:	07ea      	lsls	r2, r5, #31
  40385c:	d509      	bpl.n	403872 <_dtoa_r+0x7d2>
  40385e:	4630      	mov	r0, r6
  403860:	4639      	mov	r1, r7
  403862:	e9d8 2300 	ldrd	r2, r3, [r8]
  403866:	f002 f8c5 	bl	4059f4 <__aeabi_dmul>
  40386a:	f10a 0a01 	add.w	sl, sl, #1
  40386e:	4606      	mov	r6, r0
  403870:	460f      	mov	r7, r1
  403872:	106d      	asrs	r5, r5, #1
  403874:	f108 0808 	add.w	r8, r8, #8
  403878:	d1ef      	bne.n	40385a <_dtoa_r+0x7ba>
  40387a:	463b      	mov	r3, r7
  40387c:	4632      	mov	r2, r6
  40387e:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
  403882:	f002 f9e1 	bl	405c48 <__aeabi_ddiv>
  403886:	4607      	mov	r7, r0
  403888:	4688      	mov	r8, r1
  40388a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
  40388c:	b143      	cbz	r3, 4038a0 <_dtoa_r+0x800>
  40388e:	2200      	movs	r2, #0
  403890:	4b9f      	ldr	r3, [pc, #636]	; (403b10 <_dtoa_r+0xa70>)
  403892:	4638      	mov	r0, r7
  403894:	4641      	mov	r1, r8
  403896:	f002 fb1f 	bl	405ed8 <__aeabi_dcmplt>
  40389a:	2800      	cmp	r0, #0
  40389c:	f040 8286 	bne.w	403dac <_dtoa_r+0xd0c>
  4038a0:	4650      	mov	r0, sl
  4038a2:	f002 f841 	bl	405928 <__aeabi_i2d>
  4038a6:	463a      	mov	r2, r7
  4038a8:	4643      	mov	r3, r8
  4038aa:	f002 f8a3 	bl	4059f4 <__aeabi_dmul>
  4038ae:	4b99      	ldr	r3, [pc, #612]	; (403b14 <_dtoa_r+0xa74>)
  4038b0:	2200      	movs	r2, #0
  4038b2:	f001 feed 	bl	405690 <__adddf3>
  4038b6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038b8:	4605      	mov	r5, r0
  4038ba:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  4038be:	2b00      	cmp	r3, #0
  4038c0:	f000 813e 	beq.w	403b40 <_dtoa_r+0xaa0>
  4038c4:	9b02      	ldr	r3, [sp, #8]
  4038c6:	9315      	str	r3, [sp, #84]	; 0x54
  4038c8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  4038ca:	9312      	str	r3, [sp, #72]	; 0x48
  4038cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  4038ce:	2b00      	cmp	r3, #0
  4038d0:	f000 81fa 	beq.w	403cc8 <_dtoa_r+0xc28>
  4038d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
  4038d6:	4b8c      	ldr	r3, [pc, #560]	; (403b08 <_dtoa_r+0xa68>)
  4038d8:	498f      	ldr	r1, [pc, #572]	; (403b18 <_dtoa_r+0xa78>)
  4038da:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  4038de:	e953 2302 	ldrd	r2, r3, [r3, #-8]
  4038e2:	2000      	movs	r0, #0
  4038e4:	f002 f9b0 	bl	405c48 <__aeabi_ddiv>
  4038e8:	462a      	mov	r2, r5
  4038ea:	4633      	mov	r3, r6
  4038ec:	f001 fece 	bl	40568c <__aeabi_dsub>
  4038f0:	4682      	mov	sl, r0
  4038f2:	468b      	mov	fp, r1
  4038f4:	4638      	mov	r0, r7
  4038f6:	4641      	mov	r1, r8
  4038f8:	f002 fb2c 	bl	405f54 <__aeabi_d2iz>
  4038fc:	4605      	mov	r5, r0
  4038fe:	f002 f813 	bl	405928 <__aeabi_i2d>
  403902:	4602      	mov	r2, r0
  403904:	460b      	mov	r3, r1
  403906:	4638      	mov	r0, r7
  403908:	4641      	mov	r1, r8
  40390a:	f001 febf 	bl	40568c <__aeabi_dsub>
  40390e:	3530      	adds	r5, #48	; 0x30
  403910:	fa5f f885 	uxtb.w	r8, r5
  403914:	9d04      	ldr	r5, [sp, #16]
  403916:	4606      	mov	r6, r0
  403918:	460f      	mov	r7, r1
  40391a:	f885 8000 	strb.w	r8, [r5]
  40391e:	4602      	mov	r2, r0
  403920:	460b      	mov	r3, r1
  403922:	4650      	mov	r0, sl
  403924:	4659      	mov	r1, fp
  403926:	3501      	adds	r5, #1
  403928:	f002 faf4 	bl	405f14 <__aeabi_dcmpgt>
  40392c:	2800      	cmp	r0, #0
  40392e:	d154      	bne.n	4039da <_dtoa_r+0x93a>
  403930:	4632      	mov	r2, r6
  403932:	463b      	mov	r3, r7
  403934:	2000      	movs	r0, #0
  403936:	4976      	ldr	r1, [pc, #472]	; (403b10 <_dtoa_r+0xa70>)
  403938:	f001 fea8 	bl	40568c <__aeabi_dsub>
  40393c:	4602      	mov	r2, r0
  40393e:	460b      	mov	r3, r1
  403940:	4650      	mov	r0, sl
  403942:	4659      	mov	r1, fp
  403944:	f002 fae6 	bl	405f14 <__aeabi_dcmpgt>
  403948:	2800      	cmp	r0, #0
  40394a:	f040 8270 	bne.w	403e2e <_dtoa_r+0xd8e>
  40394e:	9a12      	ldr	r2, [sp, #72]	; 0x48
  403950:	2a01      	cmp	r2, #1
  403952:	f000 8111 	beq.w	403b78 <_dtoa_r+0xad8>
  403956:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403958:	9a04      	ldr	r2, [sp, #16]
  40395a:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  40395e:	4413      	add	r3, r2
  403960:	4699      	mov	r9, r3
  403962:	e00d      	b.n	403980 <_dtoa_r+0x8e0>
  403964:	2000      	movs	r0, #0
  403966:	496a      	ldr	r1, [pc, #424]	; (403b10 <_dtoa_r+0xa70>)
  403968:	f001 fe90 	bl	40568c <__aeabi_dsub>
  40396c:	4652      	mov	r2, sl
  40396e:	465b      	mov	r3, fp
  403970:	f002 fab2 	bl	405ed8 <__aeabi_dcmplt>
  403974:	2800      	cmp	r0, #0
  403976:	f040 8258 	bne.w	403e2a <_dtoa_r+0xd8a>
  40397a:	454d      	cmp	r5, r9
  40397c:	f000 80fa 	beq.w	403b74 <_dtoa_r+0xad4>
  403980:	4650      	mov	r0, sl
  403982:	4659      	mov	r1, fp
  403984:	2200      	movs	r2, #0
  403986:	4b65      	ldr	r3, [pc, #404]	; (403b1c <_dtoa_r+0xa7c>)
  403988:	f002 f834 	bl	4059f4 <__aeabi_dmul>
  40398c:	2200      	movs	r2, #0
  40398e:	4b63      	ldr	r3, [pc, #396]	; (403b1c <_dtoa_r+0xa7c>)
  403990:	4682      	mov	sl, r0
  403992:	468b      	mov	fp, r1
  403994:	4630      	mov	r0, r6
  403996:	4639      	mov	r1, r7
  403998:	f002 f82c 	bl	4059f4 <__aeabi_dmul>
  40399c:	460f      	mov	r7, r1
  40399e:	4606      	mov	r6, r0
  4039a0:	f002 fad8 	bl	405f54 <__aeabi_d2iz>
  4039a4:	4680      	mov	r8, r0
  4039a6:	f001 ffbf 	bl	405928 <__aeabi_i2d>
  4039aa:	4602      	mov	r2, r0
  4039ac:	460b      	mov	r3, r1
  4039ae:	4630      	mov	r0, r6
  4039b0:	4639      	mov	r1, r7
  4039b2:	f001 fe6b 	bl	40568c <__aeabi_dsub>
  4039b6:	f108 0830 	add.w	r8, r8, #48	; 0x30
  4039ba:	fa5f f888 	uxtb.w	r8, r8
  4039be:	4652      	mov	r2, sl
  4039c0:	465b      	mov	r3, fp
  4039c2:	f805 8b01 	strb.w	r8, [r5], #1
  4039c6:	4606      	mov	r6, r0
  4039c8:	460f      	mov	r7, r1
  4039ca:	f002 fa85 	bl	405ed8 <__aeabi_dcmplt>
  4039ce:	4632      	mov	r2, r6
  4039d0:	463b      	mov	r3, r7
  4039d2:	2800      	cmp	r0, #0
  4039d4:	d0c6      	beq.n	403964 <_dtoa_r+0x8c4>
  4039d6:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  4039da:	9b15      	ldr	r3, [sp, #84]	; 0x54
  4039dc:	9302      	str	r3, [sp, #8]
  4039de:	e523      	b.n	403428 <_dtoa_r+0x388>
  4039e0:	2300      	movs	r3, #0
  4039e2:	930b      	str	r3, [sp, #44]	; 0x2c
  4039e4:	9b25      	ldr	r3, [sp, #148]	; 0x94
  4039e6:	2b00      	cmp	r3, #0
  4039e8:	f340 80dc 	ble.w	403ba4 <_dtoa_r+0xb04>
  4039ec:	461f      	mov	r7, r3
  4039ee:	461e      	mov	r6, r3
  4039f0:	930f      	str	r3, [sp, #60]	; 0x3c
  4039f2:	930a      	str	r3, [sp, #40]	; 0x28
  4039f4:	e6f6      	b.n	4037e4 <_dtoa_r+0x744>
  4039f6:	2301      	movs	r3, #1
  4039f8:	930b      	str	r3, [sp, #44]	; 0x2c
  4039fa:	e7f3      	b.n	4039e4 <_dtoa_r+0x944>
  4039fc:	f1ba 0f00 	cmp.w	sl, #0
  403a00:	f47f ada8 	bne.w	403554 <_dtoa_r+0x4b4>
  403a04:	f3cb 0313 	ubfx	r3, fp, #0, #20
  403a08:	2b00      	cmp	r3, #0
  403a0a:	f47f adba 	bne.w	403582 <_dtoa_r+0x4e2>
  403a0e:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
  403a12:	0d3f      	lsrs	r7, r7, #20
  403a14:	053f      	lsls	r7, r7, #20
  403a16:	2f00      	cmp	r7, #0
  403a18:	f000 820d 	beq.w	403e36 <_dtoa_r+0xd96>
  403a1c:	9b08      	ldr	r3, [sp, #32]
  403a1e:	3301      	adds	r3, #1
  403a20:	9308      	str	r3, [sp, #32]
  403a22:	9b06      	ldr	r3, [sp, #24]
  403a24:	3301      	adds	r3, #1
  403a26:	9306      	str	r3, [sp, #24]
  403a28:	2301      	movs	r3, #1
  403a2a:	930c      	str	r3, [sp, #48]	; 0x30
  403a2c:	e5ab      	b.n	403586 <_dtoa_r+0x4e6>
  403a2e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403a30:	2b00      	cmp	r3, #0
  403a32:	f73f ac42 	bgt.w	4032ba <_dtoa_r+0x21a>
  403a36:	f040 8221 	bne.w	403e7c <_dtoa_r+0xddc>
  403a3a:	2200      	movs	r2, #0
  403a3c:	4b38      	ldr	r3, [pc, #224]	; (403b20 <_dtoa_r+0xa80>)
  403a3e:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
  403a42:	f001 ffd7 	bl	4059f4 <__aeabi_dmul>
  403a46:	4652      	mov	r2, sl
  403a48:	465b      	mov	r3, fp
  403a4a:	f002 fa59 	bl	405f00 <__aeabi_dcmpge>
  403a4e:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
  403a52:	4646      	mov	r6, r8
  403a54:	2800      	cmp	r0, #0
  403a56:	d041      	beq.n	403adc <_dtoa_r+0xa3c>
  403a58:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403a5a:	9d04      	ldr	r5, [sp, #16]
  403a5c:	43db      	mvns	r3, r3
  403a5e:	9302      	str	r3, [sp, #8]
  403a60:	4641      	mov	r1, r8
  403a62:	4620      	mov	r0, r4
  403a64:	f000 fe40 	bl	4046e8 <_Bfree>
  403a68:	2e00      	cmp	r6, #0
  403a6a:	f43f acdd 	beq.w	403428 <_dtoa_r+0x388>
  403a6e:	e6a7      	b.n	4037c0 <_dtoa_r+0x720>
  403a70:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  403a72:	4649      	mov	r1, r9
  403a74:	4620      	mov	r0, r4
  403a76:	f000 ff6d 	bl	404954 <__pow5mult>
  403a7a:	4681      	mov	r9, r0
  403a7c:	e558      	b.n	403530 <_dtoa_r+0x490>
  403a7e:	9a14      	ldr	r2, [sp, #80]	; 0x50
  403a80:	2a00      	cmp	r2, #0
  403a82:	f000 8187 	beq.w	403d94 <_dtoa_r+0xcf4>
  403a86:	f203 4333 	addw	r3, r3, #1075	; 0x433
  403a8a:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403a8c:	9d08      	ldr	r5, [sp, #32]
  403a8e:	e4f2      	b.n	403476 <_dtoa_r+0x3d6>
  403a90:	f1ba 0f00 	cmp.w	sl, #0
  403a94:	f47f ad75 	bne.w	403582 <_dtoa_r+0x4e2>
  403a98:	e7b4      	b.n	403a04 <_dtoa_r+0x964>
  403a9a:	f000 fe2f 	bl	4046fc <__multadd>
  403a9e:	4647      	mov	r7, r8
  403aa0:	4606      	mov	r6, r0
  403aa2:	4683      	mov	fp, r0
  403aa4:	e5be      	b.n	403624 <_dtoa_r+0x584>
  403aa6:	4601      	mov	r1, r0
  403aa8:	4620      	mov	r0, r4
  403aaa:	9306      	str	r3, [sp, #24]
  403aac:	f000 fe1c 	bl	4046e8 <_Bfree>
  403ab0:	2201      	movs	r2, #1
  403ab2:	9b06      	ldr	r3, [sp, #24]
  403ab4:	e5e0      	b.n	403678 <_dtoa_r+0x5d8>
  403ab6:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403ab8:	2b02      	cmp	r3, #2
  403aba:	f77f ad96 	ble.w	4035ea <_dtoa_r+0x54a>
  403abe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403ac0:	2b00      	cmp	r3, #0
  403ac2:	d1c9      	bne.n	403a58 <_dtoa_r+0x9b8>
  403ac4:	4641      	mov	r1, r8
  403ac6:	2205      	movs	r2, #5
  403ac8:	4620      	mov	r0, r4
  403aca:	f000 fe17 	bl	4046fc <__multadd>
  403ace:	4601      	mov	r1, r0
  403ad0:	4680      	mov	r8, r0
  403ad2:	4648      	mov	r0, r9
  403ad4:	f000 ffe0 	bl	404a98 <__mcmp>
  403ad8:	2800      	cmp	r0, #0
  403ada:	ddbd      	ble.n	403a58 <_dtoa_r+0x9b8>
  403adc:	9a02      	ldr	r2, [sp, #8]
  403ade:	9904      	ldr	r1, [sp, #16]
  403ae0:	2331      	movs	r3, #49	; 0x31
  403ae2:	3201      	adds	r2, #1
  403ae4:	9202      	str	r2, [sp, #8]
  403ae6:	700b      	strb	r3, [r1, #0]
  403ae8:	1c4d      	adds	r5, r1, #1
  403aea:	e7b9      	b.n	403a60 <_dtoa_r+0x9c0>
  403aec:	9a02      	ldr	r2, [sp, #8]
  403aee:	3201      	adds	r2, #1
  403af0:	9202      	str	r2, [sp, #8]
  403af2:	9a04      	ldr	r2, [sp, #16]
  403af4:	2331      	movs	r3, #49	; 0x31
  403af6:	7013      	strb	r3, [r2, #0]
  403af8:	e652      	b.n	4037a0 <_dtoa_r+0x700>
  403afa:	2301      	movs	r3, #1
  403afc:	930b      	str	r3, [sp, #44]	; 0x2c
  403afe:	e666      	b.n	4037ce <_dtoa_r+0x72e>
  403b00:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
  403b04:	9c0c      	ldr	r4, [sp, #48]	; 0x30
  403b06:	e48f      	b.n	403428 <_dtoa_r+0x388>
  403b08:	00406a98 	.word	0x00406a98
  403b0c:	00406a70 	.word	0x00406a70
  403b10:	3ff00000 	.word	0x3ff00000
  403b14:	401c0000 	.word	0x401c0000
  403b18:	3fe00000 	.word	0x3fe00000
  403b1c:	40240000 	.word	0x40240000
  403b20:	40140000 	.word	0x40140000
  403b24:	4650      	mov	r0, sl
  403b26:	f001 feff 	bl	405928 <__aeabi_i2d>
  403b2a:	463a      	mov	r2, r7
  403b2c:	4643      	mov	r3, r8
  403b2e:	f001 ff61 	bl	4059f4 <__aeabi_dmul>
  403b32:	2200      	movs	r2, #0
  403b34:	4bc1      	ldr	r3, [pc, #772]	; (403e3c <_dtoa_r+0xd9c>)
  403b36:	f001 fdab 	bl	405690 <__adddf3>
  403b3a:	4605      	mov	r5, r0
  403b3c:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403b40:	4641      	mov	r1, r8
  403b42:	2200      	movs	r2, #0
  403b44:	4bbe      	ldr	r3, [pc, #760]	; (403e40 <_dtoa_r+0xda0>)
  403b46:	4638      	mov	r0, r7
  403b48:	f001 fda0 	bl	40568c <__aeabi_dsub>
  403b4c:	462a      	mov	r2, r5
  403b4e:	4633      	mov	r3, r6
  403b50:	4682      	mov	sl, r0
  403b52:	468b      	mov	fp, r1
  403b54:	f002 f9de 	bl	405f14 <__aeabi_dcmpgt>
  403b58:	4680      	mov	r8, r0
  403b5a:	2800      	cmp	r0, #0
  403b5c:	f040 8110 	bne.w	403d80 <_dtoa_r+0xce0>
  403b60:	462a      	mov	r2, r5
  403b62:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
  403b66:	4650      	mov	r0, sl
  403b68:	4659      	mov	r1, fp
  403b6a:	f002 f9b5 	bl	405ed8 <__aeabi_dcmplt>
  403b6e:	b118      	cbz	r0, 403b78 <_dtoa_r+0xad8>
  403b70:	4646      	mov	r6, r8
  403b72:	e771      	b.n	403a58 <_dtoa_r+0x9b8>
  403b74:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403b78:	e9dd ab10 	ldrd	sl, fp, [sp, #64]	; 0x40
  403b7c:	f7ff bb8a 	b.w	403294 <_dtoa_r+0x1f4>
  403b80:	9804      	ldr	r0, [sp, #16]
  403b82:	f7ff babb 	b.w	4030fc <_dtoa_r+0x5c>
  403b86:	9b0c      	ldr	r3, [sp, #48]	; 0x30
  403b88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
  403b8a:	970c      	str	r7, [sp, #48]	; 0x30
  403b8c:	1afb      	subs	r3, r7, r3
  403b8e:	441a      	add	r2, r3
  403b90:	920d      	str	r2, [sp, #52]	; 0x34
  403b92:	2700      	movs	r7, #0
  403b94:	e469      	b.n	40346a <_dtoa_r+0x3ca>
  403b96:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
  403b9a:	f04f 0a02 	mov.w	sl, #2
  403b9e:	e9cd 2312 	strd	r2, r3, [sp, #72]	; 0x48
  403ba2:	e657      	b.n	403854 <_dtoa_r+0x7b4>
  403ba4:	2100      	movs	r1, #0
  403ba6:	2301      	movs	r3, #1
  403ba8:	6461      	str	r1, [r4, #68]	; 0x44
  403baa:	4620      	mov	r0, r4
  403bac:	9325      	str	r3, [sp, #148]	; 0x94
  403bae:	f000 fd75 	bl	40469c <_Balloc>
  403bb2:	9b25      	ldr	r3, [sp, #148]	; 0x94
  403bb4:	9004      	str	r0, [sp, #16]
  403bb6:	6420      	str	r0, [r4, #64]	; 0x40
  403bb8:	930a      	str	r3, [sp, #40]	; 0x28
  403bba:	930f      	str	r3, [sp, #60]	; 0x3c
  403bbc:	e629      	b.n	403812 <_dtoa_r+0x772>
  403bbe:	2a00      	cmp	r2, #0
  403bc0:	46d0      	mov	r8, sl
  403bc2:	f8cd b018 	str.w	fp, [sp, #24]
  403bc6:	469a      	mov	sl, r3
  403bc8:	dd11      	ble.n	403bee <_dtoa_r+0xb4e>
  403bca:	4649      	mov	r1, r9
  403bcc:	2201      	movs	r2, #1
  403bce:	4620      	mov	r0, r4
  403bd0:	f000 ff10 	bl	4049f4 <__lshift>
  403bd4:	4641      	mov	r1, r8
  403bd6:	4681      	mov	r9, r0
  403bd8:	f000 ff5e 	bl	404a98 <__mcmp>
  403bdc:	2800      	cmp	r0, #0
  403bde:	f340 8146 	ble.w	403e6e <_dtoa_r+0xdce>
  403be2:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
  403be6:	f000 8106 	beq.w	403df6 <_dtoa_r+0xd56>
  403bea:	f105 0a31 	add.w	sl, r5, #49	; 0x31
  403bee:	46b3      	mov	fp, r6
  403bf0:	f887 a000 	strb.w	sl, [r7]
  403bf4:	1c7d      	adds	r5, r7, #1
  403bf6:	9e06      	ldr	r6, [sp, #24]
  403bf8:	e5d2      	b.n	4037a0 <_dtoa_r+0x700>
  403bfa:	d104      	bne.n	403c06 <_dtoa_r+0xb66>
  403bfc:	f01a 0f01 	tst.w	sl, #1
  403c00:	d001      	beq.n	403c06 <_dtoa_r+0xb66>
  403c02:	e5bd      	b.n	403780 <_dtoa_r+0x6e0>
  403c04:	4615      	mov	r5, r2
  403c06:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403c0a:	2b30      	cmp	r3, #48	; 0x30
  403c0c:	f105 32ff 	add.w	r2, r5, #4294967295
  403c10:	d0f8      	beq.n	403c04 <_dtoa_r+0xb64>
  403c12:	e5c5      	b.n	4037a0 <_dtoa_r+0x700>
  403c14:	9904      	ldr	r1, [sp, #16]
  403c16:	2230      	movs	r2, #48	; 0x30
  403c18:	700a      	strb	r2, [r1, #0]
  403c1a:	9a02      	ldr	r2, [sp, #8]
  403c1c:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403c20:	3201      	adds	r2, #1
  403c22:	9202      	str	r2, [sp, #8]
  403c24:	f7ff bbfc 	b.w	403420 <_dtoa_r+0x380>
  403c28:	f000 80bb 	beq.w	403da2 <_dtoa_r+0xd02>
  403c2c:	9b02      	ldr	r3, [sp, #8]
  403c2e:	425d      	negs	r5, r3
  403c30:	4b84      	ldr	r3, [pc, #528]	; (403e44 <_dtoa_r+0xda4>)
  403c32:	f005 020f 	and.w	r2, r5, #15
  403c36:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
  403c3a:	e9d3 2300 	ldrd	r2, r3, [r3]
  403c3e:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
  403c42:	f001 fed7 	bl	4059f4 <__aeabi_dmul>
  403c46:	112d      	asrs	r5, r5, #4
  403c48:	4607      	mov	r7, r0
  403c4a:	4688      	mov	r8, r1
  403c4c:	f000 812c 	beq.w	403ea8 <_dtoa_r+0xe08>
  403c50:	4e7d      	ldr	r6, [pc, #500]	; (403e48 <_dtoa_r+0xda8>)
  403c52:	f04f 0a02 	mov.w	sl, #2
  403c56:	07eb      	lsls	r3, r5, #31
  403c58:	d509      	bpl.n	403c6e <_dtoa_r+0xbce>
  403c5a:	4638      	mov	r0, r7
  403c5c:	4641      	mov	r1, r8
  403c5e:	e9d6 2300 	ldrd	r2, r3, [r6]
  403c62:	f001 fec7 	bl	4059f4 <__aeabi_dmul>
  403c66:	f10a 0a01 	add.w	sl, sl, #1
  403c6a:	4607      	mov	r7, r0
  403c6c:	4688      	mov	r8, r1
  403c6e:	106d      	asrs	r5, r5, #1
  403c70:	f106 0608 	add.w	r6, r6, #8
  403c74:	d1ef      	bne.n	403c56 <_dtoa_r+0xbb6>
  403c76:	e608      	b.n	40388a <_dtoa_r+0x7ea>
  403c78:	6871      	ldr	r1, [r6, #4]
  403c7a:	4620      	mov	r0, r4
  403c7c:	f000 fd0e 	bl	40469c <_Balloc>
  403c80:	6933      	ldr	r3, [r6, #16]
  403c82:	3302      	adds	r3, #2
  403c84:	009a      	lsls	r2, r3, #2
  403c86:	4605      	mov	r5, r0
  403c88:	f106 010c 	add.w	r1, r6, #12
  403c8c:	300c      	adds	r0, #12
  403c8e:	f000 fc5f 	bl	404550 <memcpy>
  403c92:	4629      	mov	r1, r5
  403c94:	2201      	movs	r2, #1
  403c96:	4620      	mov	r0, r4
  403c98:	f000 feac 	bl	4049f4 <__lshift>
  403c9c:	9006      	str	r0, [sp, #24]
  403c9e:	e4b5      	b.n	40360c <_dtoa_r+0x56c>
  403ca0:	2b39      	cmp	r3, #57	; 0x39
  403ca2:	f8cd b018 	str.w	fp, [sp, #24]
  403ca6:	46d0      	mov	r8, sl
  403ca8:	f000 80a5 	beq.w	403df6 <_dtoa_r+0xd56>
  403cac:	f103 0a01 	add.w	sl, r3, #1
  403cb0:	46b3      	mov	fp, r6
  403cb2:	f887 a000 	strb.w	sl, [r7]
  403cb6:	1c7d      	adds	r5, r7, #1
  403cb8:	9e06      	ldr	r6, [sp, #24]
  403cba:	e571      	b.n	4037a0 <_dtoa_r+0x700>
  403cbc:	465a      	mov	r2, fp
  403cbe:	46d0      	mov	r8, sl
  403cc0:	46b3      	mov	fp, r6
  403cc2:	469a      	mov	sl, r3
  403cc4:	4616      	mov	r6, r2
  403cc6:	e54f      	b.n	403768 <_dtoa_r+0x6c8>
  403cc8:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403cca:	495e      	ldr	r1, [pc, #376]	; (403e44 <_dtoa_r+0xda4>)
  403ccc:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
  403cd0:	462a      	mov	r2, r5
  403cd2:	4633      	mov	r3, r6
  403cd4:	e951 0102 	ldrd	r0, r1, [r1, #-8]
  403cd8:	f001 fe8c 	bl	4059f4 <__aeabi_dmul>
  403cdc:	e9cd 0116 	strd	r0, r1, [sp, #88]	; 0x58
  403ce0:	4638      	mov	r0, r7
  403ce2:	4641      	mov	r1, r8
  403ce4:	f002 f936 	bl	405f54 <__aeabi_d2iz>
  403ce8:	4605      	mov	r5, r0
  403cea:	f001 fe1d 	bl	405928 <__aeabi_i2d>
  403cee:	460b      	mov	r3, r1
  403cf0:	4602      	mov	r2, r0
  403cf2:	4641      	mov	r1, r8
  403cf4:	4638      	mov	r0, r7
  403cf6:	f001 fcc9 	bl	40568c <__aeabi_dsub>
  403cfa:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403cfc:	460f      	mov	r7, r1
  403cfe:	9904      	ldr	r1, [sp, #16]
  403d00:	3530      	adds	r5, #48	; 0x30
  403d02:	2b01      	cmp	r3, #1
  403d04:	700d      	strb	r5, [r1, #0]
  403d06:	4606      	mov	r6, r0
  403d08:	f101 0501 	add.w	r5, r1, #1
  403d0c:	d026      	beq.n	403d5c <_dtoa_r+0xcbc>
  403d0e:	9b12      	ldr	r3, [sp, #72]	; 0x48
  403d10:	9a04      	ldr	r2, [sp, #16]
  403d12:	f8df b13c 	ldr.w	fp, [pc, #316]	; 403e50 <_dtoa_r+0xdb0>
  403d16:	f8cd 9048 	str.w	r9, [sp, #72]	; 0x48
  403d1a:	4413      	add	r3, r2
  403d1c:	f04f 0a00 	mov.w	sl, #0
  403d20:	4699      	mov	r9, r3
  403d22:	4652      	mov	r2, sl
  403d24:	465b      	mov	r3, fp
  403d26:	4630      	mov	r0, r6
  403d28:	4639      	mov	r1, r7
  403d2a:	f001 fe63 	bl	4059f4 <__aeabi_dmul>
  403d2e:	460f      	mov	r7, r1
  403d30:	4606      	mov	r6, r0
  403d32:	f002 f90f 	bl	405f54 <__aeabi_d2iz>
  403d36:	4680      	mov	r8, r0
  403d38:	f001 fdf6 	bl	405928 <__aeabi_i2d>
  403d3c:	f108 0830 	add.w	r8, r8, #48	; 0x30
  403d40:	4602      	mov	r2, r0
  403d42:	460b      	mov	r3, r1
  403d44:	4630      	mov	r0, r6
  403d46:	4639      	mov	r1, r7
  403d48:	f001 fca0 	bl	40568c <__aeabi_dsub>
  403d4c:	f805 8b01 	strb.w	r8, [r5], #1
  403d50:	454d      	cmp	r5, r9
  403d52:	4606      	mov	r6, r0
  403d54:	460f      	mov	r7, r1
  403d56:	d1e4      	bne.n	403d22 <_dtoa_r+0xc82>
  403d58:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403d5c:	4b3b      	ldr	r3, [pc, #236]	; (403e4c <_dtoa_r+0xdac>)
  403d5e:	2200      	movs	r2, #0
  403d60:	e9dd 0116 	ldrd	r0, r1, [sp, #88]	; 0x58
  403d64:	f001 fc94 	bl	405690 <__adddf3>
  403d68:	4632      	mov	r2, r6
  403d6a:	463b      	mov	r3, r7
  403d6c:	f002 f8b4 	bl	405ed8 <__aeabi_dcmplt>
  403d70:	2800      	cmp	r0, #0
  403d72:	d046      	beq.n	403e02 <_dtoa_r+0xd62>
  403d74:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403d76:	9302      	str	r3, [sp, #8]
  403d78:	f815 8c01 	ldrb.w	r8, [r5, #-1]
  403d7c:	f7ff bb43 	b.w	403406 <_dtoa_r+0x366>
  403d80:	f04f 0800 	mov.w	r8, #0
  403d84:	4646      	mov	r6, r8
  403d86:	e6a9      	b.n	403adc <_dtoa_r+0xa3c>
  403d88:	9b08      	ldr	r3, [sp, #32]
  403d8a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  403d8c:	1a9d      	subs	r5, r3, r2
  403d8e:	2300      	movs	r3, #0
  403d90:	f7ff bb71 	b.w	403476 <_dtoa_r+0x3d6>
  403d94:	9b18      	ldr	r3, [sp, #96]	; 0x60
  403d96:	9f0c      	ldr	r7, [sp, #48]	; 0x30
  403d98:	9d08      	ldr	r5, [sp, #32]
  403d9a:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
  403d9e:	f7ff bb6a 	b.w	403476 <_dtoa_r+0x3d6>
  403da2:	e9dd 7810 	ldrd	r7, r8, [sp, #64]	; 0x40
  403da6:	f04f 0a02 	mov.w	sl, #2
  403daa:	e56e      	b.n	40388a <_dtoa_r+0x7ea>
  403dac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
  403dae:	2b00      	cmp	r3, #0
  403db0:	f43f aeb8 	beq.w	403b24 <_dtoa_r+0xa84>
  403db4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403db6:	2b00      	cmp	r3, #0
  403db8:	f77f aede 	ble.w	403b78 <_dtoa_r+0xad8>
  403dbc:	2200      	movs	r2, #0
  403dbe:	4b24      	ldr	r3, [pc, #144]	; (403e50 <_dtoa_r+0xdb0>)
  403dc0:	4638      	mov	r0, r7
  403dc2:	4641      	mov	r1, r8
  403dc4:	f001 fe16 	bl	4059f4 <__aeabi_dmul>
  403dc8:	4607      	mov	r7, r0
  403dca:	4688      	mov	r8, r1
  403dcc:	f10a 0001 	add.w	r0, sl, #1
  403dd0:	f001 fdaa 	bl	405928 <__aeabi_i2d>
  403dd4:	463a      	mov	r2, r7
  403dd6:	4643      	mov	r3, r8
  403dd8:	f001 fe0c 	bl	4059f4 <__aeabi_dmul>
  403ddc:	2200      	movs	r2, #0
  403dde:	4b17      	ldr	r3, [pc, #92]	; (403e3c <_dtoa_r+0xd9c>)
  403de0:	f001 fc56 	bl	405690 <__adddf3>
  403de4:	9a02      	ldr	r2, [sp, #8]
  403de6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403de8:	9312      	str	r3, [sp, #72]	; 0x48
  403dea:	3a01      	subs	r2, #1
  403dec:	4605      	mov	r5, r0
  403dee:	f1a1 7650 	sub.w	r6, r1, #54525952	; 0x3400000
  403df2:	9215      	str	r2, [sp, #84]	; 0x54
  403df4:	e56a      	b.n	4038cc <_dtoa_r+0x82c>
  403df6:	2239      	movs	r2, #57	; 0x39
  403df8:	46b3      	mov	fp, r6
  403dfa:	703a      	strb	r2, [r7, #0]
  403dfc:	9e06      	ldr	r6, [sp, #24]
  403dfe:	1c7d      	adds	r5, r7, #1
  403e00:	e4c0      	b.n	403784 <_dtoa_r+0x6e4>
  403e02:	e9dd 2316 	ldrd	r2, r3, [sp, #88]	; 0x58
  403e06:	2000      	movs	r0, #0
  403e08:	4910      	ldr	r1, [pc, #64]	; (403e4c <_dtoa_r+0xdac>)
  403e0a:	f001 fc3f 	bl	40568c <__aeabi_dsub>
  403e0e:	4632      	mov	r2, r6
  403e10:	463b      	mov	r3, r7
  403e12:	f002 f87f 	bl	405f14 <__aeabi_dcmpgt>
  403e16:	b908      	cbnz	r0, 403e1c <_dtoa_r+0xd7c>
  403e18:	e6ae      	b.n	403b78 <_dtoa_r+0xad8>
  403e1a:	4615      	mov	r5, r2
  403e1c:	f815 3c01 	ldrb.w	r3, [r5, #-1]
  403e20:	2b30      	cmp	r3, #48	; 0x30
  403e22:	f105 32ff 	add.w	r2, r5, #4294967295
  403e26:	d0f8      	beq.n	403e1a <_dtoa_r+0xd7a>
  403e28:	e5d7      	b.n	4039da <_dtoa_r+0x93a>
  403e2a:	f8dd 9048 	ldr.w	r9, [sp, #72]	; 0x48
  403e2e:	9b15      	ldr	r3, [sp, #84]	; 0x54
  403e30:	9302      	str	r3, [sp, #8]
  403e32:	f7ff bae8 	b.w	403406 <_dtoa_r+0x366>
  403e36:	970c      	str	r7, [sp, #48]	; 0x30
  403e38:	f7ff bba5 	b.w	403586 <_dtoa_r+0x4e6>
  403e3c:	401c0000 	.word	0x401c0000
  403e40:	40140000 	.word	0x40140000
  403e44:	00406a98 	.word	0x00406a98
  403e48:	00406a70 	.word	0x00406a70
  403e4c:	3fe00000 	.word	0x3fe00000
  403e50:	40240000 	.word	0x40240000
  403e54:	2b39      	cmp	r3, #57	; 0x39
  403e56:	f8cd b018 	str.w	fp, [sp, #24]
  403e5a:	46d0      	mov	r8, sl
  403e5c:	f8dd b028 	ldr.w	fp, [sp, #40]	; 0x28
  403e60:	469a      	mov	sl, r3
  403e62:	d0c8      	beq.n	403df6 <_dtoa_r+0xd56>
  403e64:	f1bb 0f00 	cmp.w	fp, #0
  403e68:	f73f aebf 	bgt.w	403bea <_dtoa_r+0xb4a>
  403e6c:	e6bf      	b.n	403bee <_dtoa_r+0xb4e>
  403e6e:	f47f aebe 	bne.w	403bee <_dtoa_r+0xb4e>
  403e72:	f01a 0f01 	tst.w	sl, #1
  403e76:	f43f aeba 	beq.w	403bee <_dtoa_r+0xb4e>
  403e7a:	e6b2      	b.n	403be2 <_dtoa_r+0xb42>
  403e7c:	f04f 0800 	mov.w	r8, #0
  403e80:	4646      	mov	r6, r8
  403e82:	e5e9      	b.n	403a58 <_dtoa_r+0x9b8>
  403e84:	4631      	mov	r1, r6
  403e86:	2300      	movs	r3, #0
  403e88:	220a      	movs	r2, #10
  403e8a:	4620      	mov	r0, r4
  403e8c:	f000 fc36 	bl	4046fc <__multadd>
  403e90:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403e92:	2b00      	cmp	r3, #0
  403e94:	4606      	mov	r6, r0
  403e96:	dd0a      	ble.n	403eae <_dtoa_r+0xe0e>
  403e98:	930a      	str	r3, [sp, #40]	; 0x28
  403e9a:	f7ff bbaa 	b.w	4035f2 <_dtoa_r+0x552>
  403e9e:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403ea0:	2b02      	cmp	r3, #2
  403ea2:	dc23      	bgt.n	403eec <_dtoa_r+0xe4c>
  403ea4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403ea6:	e43b      	b.n	403720 <_dtoa_r+0x680>
  403ea8:	f04f 0a02 	mov.w	sl, #2
  403eac:	e4ed      	b.n	40388a <_dtoa_r+0x7ea>
  403eae:	9b24      	ldr	r3, [sp, #144]	; 0x90
  403eb0:	2b02      	cmp	r3, #2
  403eb2:	dc1b      	bgt.n	403eec <_dtoa_r+0xe4c>
  403eb4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403eb6:	e7ef      	b.n	403e98 <_dtoa_r+0xdf8>
  403eb8:	2500      	movs	r5, #0
  403eba:	6465      	str	r5, [r4, #68]	; 0x44
  403ebc:	4629      	mov	r1, r5
  403ebe:	4620      	mov	r0, r4
  403ec0:	f000 fbec 	bl	40469c <_Balloc>
  403ec4:	f04f 33ff 	mov.w	r3, #4294967295
  403ec8:	930a      	str	r3, [sp, #40]	; 0x28
  403eca:	930f      	str	r3, [sp, #60]	; 0x3c
  403ecc:	2301      	movs	r3, #1
  403ece:	9004      	str	r0, [sp, #16]
  403ed0:	9525      	str	r5, [sp, #148]	; 0x94
  403ed2:	6420      	str	r0, [r4, #64]	; 0x40
  403ed4:	930b      	str	r3, [sp, #44]	; 0x2c
  403ed6:	f7ff b9dd 	b.w	403294 <_dtoa_r+0x1f4>
  403eda:	2501      	movs	r5, #1
  403edc:	f7ff b9a5 	b.w	40322a <_dtoa_r+0x18a>
  403ee0:	f43f ab69 	beq.w	4035b6 <_dtoa_r+0x516>
  403ee4:	f1c0 003c 	rsb	r0, r0, #60	; 0x3c
  403ee8:	f7ff bbf9 	b.w	4036de <_dtoa_r+0x63e>
  403eec:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
  403eee:	930a      	str	r3, [sp, #40]	; 0x28
  403ef0:	e5e5      	b.n	403abe <_dtoa_r+0xa1e>
  403ef2:	bf00      	nop

00403ef4 <__libc_fini_array>:
  403ef4:	b538      	push	{r3, r4, r5, lr}
  403ef6:	4c0a      	ldr	r4, [pc, #40]	; (403f20 <__libc_fini_array+0x2c>)
  403ef8:	4d0a      	ldr	r5, [pc, #40]	; (403f24 <__libc_fini_array+0x30>)
  403efa:	1b64      	subs	r4, r4, r5
  403efc:	10a4      	asrs	r4, r4, #2
  403efe:	d00a      	beq.n	403f16 <__libc_fini_array+0x22>
  403f00:	f104 4380 	add.w	r3, r4, #1073741824	; 0x40000000
  403f04:	3b01      	subs	r3, #1
  403f06:	eb05 0583 	add.w	r5, r5, r3, lsl #2
  403f0a:	3c01      	subs	r4, #1
  403f0c:	f855 3904 	ldr.w	r3, [r5], #-4
  403f10:	4798      	blx	r3
  403f12:	2c00      	cmp	r4, #0
  403f14:	d1f9      	bne.n	403f0a <__libc_fini_array+0x16>
  403f16:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  403f1a:	f002 bebb 	b.w	406c94 <_fini>
  403f1e:	bf00      	nop
  403f20:	00406ca4 	.word	0x00406ca4
  403f24:	00406ca0 	.word	0x00406ca0

00403f28 <_localeconv_r>:
  403f28:	4a04      	ldr	r2, [pc, #16]	; (403f3c <_localeconv_r+0x14>)
  403f2a:	4b05      	ldr	r3, [pc, #20]	; (403f40 <_localeconv_r+0x18>)
  403f2c:	6812      	ldr	r2, [r2, #0]
  403f2e:	6b50      	ldr	r0, [r2, #52]	; 0x34
  403f30:	2800      	cmp	r0, #0
  403f32:	bf08      	it	eq
  403f34:	4618      	moveq	r0, r3
  403f36:	30f0      	adds	r0, #240	; 0xf0
  403f38:	4770      	bx	lr
  403f3a:	bf00      	nop
  403f3c:	20400020 	.word	0x20400020
  403f40:	20400864 	.word	0x20400864

00403f44 <__retarget_lock_acquire_recursive>:
  403f44:	4770      	bx	lr
  403f46:	bf00      	nop

00403f48 <__retarget_lock_release_recursive>:
  403f48:	4770      	bx	lr
  403f4a:	bf00      	nop

00403f4c <_malloc_r>:
  403f4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  403f50:	f101 060b 	add.w	r6, r1, #11
  403f54:	2e16      	cmp	r6, #22
  403f56:	b083      	sub	sp, #12
  403f58:	4605      	mov	r5, r0
  403f5a:	f240 809e 	bls.w	40409a <_malloc_r+0x14e>
  403f5e:	f036 0607 	bics.w	r6, r6, #7
  403f62:	f100 80bd 	bmi.w	4040e0 <_malloc_r+0x194>
  403f66:	42b1      	cmp	r1, r6
  403f68:	f200 80ba 	bhi.w	4040e0 <_malloc_r+0x194>
  403f6c:	f000 fb8a 	bl	404684 <__malloc_lock>
  403f70:	f5b6 7ffc 	cmp.w	r6, #504	; 0x1f8
  403f74:	f0c0 8293 	bcc.w	40449e <_malloc_r+0x552>
  403f78:	0a73      	lsrs	r3, r6, #9
  403f7a:	f000 80b8 	beq.w	4040ee <_malloc_r+0x1a2>
  403f7e:	2b04      	cmp	r3, #4
  403f80:	f200 8179 	bhi.w	404276 <_malloc_r+0x32a>
  403f84:	09b3      	lsrs	r3, r6, #6
  403f86:	f103 0039 	add.w	r0, r3, #57	; 0x39
  403f8a:	f103 0e38 	add.w	lr, r3, #56	; 0x38
  403f8e:	00c3      	lsls	r3, r0, #3
  403f90:	4fbf      	ldr	r7, [pc, #764]	; (404290 <_malloc_r+0x344>)
  403f92:	443b      	add	r3, r7
  403f94:	f1a3 0108 	sub.w	r1, r3, #8
  403f98:	685c      	ldr	r4, [r3, #4]
  403f9a:	42a1      	cmp	r1, r4
  403f9c:	d106      	bne.n	403fac <_malloc_r+0x60>
  403f9e:	e00c      	b.n	403fba <_malloc_r+0x6e>
  403fa0:	2a00      	cmp	r2, #0
  403fa2:	f280 80aa 	bge.w	4040fa <_malloc_r+0x1ae>
  403fa6:	68e4      	ldr	r4, [r4, #12]
  403fa8:	42a1      	cmp	r1, r4
  403faa:	d006      	beq.n	403fba <_malloc_r+0x6e>
  403fac:	6863      	ldr	r3, [r4, #4]
  403fae:	f023 0303 	bic.w	r3, r3, #3
  403fb2:	1b9a      	subs	r2, r3, r6
  403fb4:	2a0f      	cmp	r2, #15
  403fb6:	ddf3      	ble.n	403fa0 <_malloc_r+0x54>
  403fb8:	4670      	mov	r0, lr
  403fba:	693c      	ldr	r4, [r7, #16]
  403fbc:	f8df e2e4 	ldr.w	lr, [pc, #740]	; 4042a4 <_malloc_r+0x358>
  403fc0:	4574      	cmp	r4, lr
  403fc2:	f000 81ab 	beq.w	40431c <_malloc_r+0x3d0>
  403fc6:	6863      	ldr	r3, [r4, #4]
  403fc8:	f023 0303 	bic.w	r3, r3, #3
  403fcc:	1b9a      	subs	r2, r3, r6
  403fce:	2a0f      	cmp	r2, #15
  403fd0:	f300 8190 	bgt.w	4042f4 <_malloc_r+0x3a8>
  403fd4:	2a00      	cmp	r2, #0
  403fd6:	f8c7 e014 	str.w	lr, [r7, #20]
  403fda:	f8c7 e010 	str.w	lr, [r7, #16]
  403fde:	f280 809d 	bge.w	40411c <_malloc_r+0x1d0>
  403fe2:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  403fe6:	f080 8161 	bcs.w	4042ac <_malloc_r+0x360>
  403fea:	08db      	lsrs	r3, r3, #3
  403fec:	f103 0c01 	add.w	ip, r3, #1
  403ff0:	1099      	asrs	r1, r3, #2
  403ff2:	687a      	ldr	r2, [r7, #4]
  403ff4:	f857 803c 	ldr.w	r8, [r7, ip, lsl #3]
  403ff8:	f8c4 8008 	str.w	r8, [r4, #8]
  403ffc:	2301      	movs	r3, #1
  403ffe:	408b      	lsls	r3, r1
  404000:	eb07 01cc 	add.w	r1, r7, ip, lsl #3
  404004:	4313      	orrs	r3, r2
  404006:	3908      	subs	r1, #8
  404008:	60e1      	str	r1, [r4, #12]
  40400a:	607b      	str	r3, [r7, #4]
  40400c:	f847 403c 	str.w	r4, [r7, ip, lsl #3]
  404010:	f8c8 400c 	str.w	r4, [r8, #12]
  404014:	1082      	asrs	r2, r0, #2
  404016:	2401      	movs	r4, #1
  404018:	4094      	lsls	r4, r2
  40401a:	429c      	cmp	r4, r3
  40401c:	f200 808b 	bhi.w	404136 <_malloc_r+0x1ea>
  404020:	421c      	tst	r4, r3
  404022:	d106      	bne.n	404032 <_malloc_r+0xe6>
  404024:	f020 0003 	bic.w	r0, r0, #3
  404028:	0064      	lsls	r4, r4, #1
  40402a:	421c      	tst	r4, r3
  40402c:	f100 0004 	add.w	r0, r0, #4
  404030:	d0fa      	beq.n	404028 <_malloc_r+0xdc>
  404032:	eb07 09c0 	add.w	r9, r7, r0, lsl #3
  404036:	46cc      	mov	ip, r9
  404038:	4680      	mov	r8, r0
  40403a:	f8dc 300c 	ldr.w	r3, [ip, #12]
  40403e:	459c      	cmp	ip, r3
  404040:	d107      	bne.n	404052 <_malloc_r+0x106>
  404042:	e16d      	b.n	404320 <_malloc_r+0x3d4>
  404044:	2a00      	cmp	r2, #0
  404046:	f280 817b 	bge.w	404340 <_malloc_r+0x3f4>
  40404a:	68db      	ldr	r3, [r3, #12]
  40404c:	459c      	cmp	ip, r3
  40404e:	f000 8167 	beq.w	404320 <_malloc_r+0x3d4>
  404052:	6859      	ldr	r1, [r3, #4]
  404054:	f021 0103 	bic.w	r1, r1, #3
  404058:	1b8a      	subs	r2, r1, r6
  40405a:	2a0f      	cmp	r2, #15
  40405c:	ddf2      	ble.n	404044 <_malloc_r+0xf8>
  40405e:	f8d3 c00c 	ldr.w	ip, [r3, #12]
  404062:	f8d3 8008 	ldr.w	r8, [r3, #8]
  404066:	9300      	str	r3, [sp, #0]
  404068:	199c      	adds	r4, r3, r6
  40406a:	4628      	mov	r0, r5
  40406c:	f046 0601 	orr.w	r6, r6, #1
  404070:	f042 0501 	orr.w	r5, r2, #1
  404074:	605e      	str	r6, [r3, #4]
  404076:	f8c8 c00c 	str.w	ip, [r8, #12]
  40407a:	f8cc 8008 	str.w	r8, [ip, #8]
  40407e:	617c      	str	r4, [r7, #20]
  404080:	613c      	str	r4, [r7, #16]
  404082:	f8c4 e00c 	str.w	lr, [r4, #12]
  404086:	f8c4 e008 	str.w	lr, [r4, #8]
  40408a:	6065      	str	r5, [r4, #4]
  40408c:	505a      	str	r2, [r3, r1]
  40408e:	f000 faff 	bl	404690 <__malloc_unlock>
  404092:	9b00      	ldr	r3, [sp, #0]
  404094:	f103 0408 	add.w	r4, r3, #8
  404098:	e01e      	b.n	4040d8 <_malloc_r+0x18c>
  40409a:	2910      	cmp	r1, #16
  40409c:	d820      	bhi.n	4040e0 <_malloc_r+0x194>
  40409e:	f000 faf1 	bl	404684 <__malloc_lock>
  4040a2:	2610      	movs	r6, #16
  4040a4:	2318      	movs	r3, #24
  4040a6:	2002      	movs	r0, #2
  4040a8:	4f79      	ldr	r7, [pc, #484]	; (404290 <_malloc_r+0x344>)
  4040aa:	443b      	add	r3, r7
  4040ac:	f1a3 0208 	sub.w	r2, r3, #8
  4040b0:	685c      	ldr	r4, [r3, #4]
  4040b2:	4294      	cmp	r4, r2
  4040b4:	f000 813d 	beq.w	404332 <_malloc_r+0x3e6>
  4040b8:	6863      	ldr	r3, [r4, #4]
  4040ba:	68e1      	ldr	r1, [r4, #12]
  4040bc:	68a6      	ldr	r6, [r4, #8]
  4040be:	f023 0303 	bic.w	r3, r3, #3
  4040c2:	4423      	add	r3, r4
  4040c4:	4628      	mov	r0, r5
  4040c6:	685a      	ldr	r2, [r3, #4]
  4040c8:	60f1      	str	r1, [r6, #12]
  4040ca:	f042 0201 	orr.w	r2, r2, #1
  4040ce:	608e      	str	r6, [r1, #8]
  4040d0:	605a      	str	r2, [r3, #4]
  4040d2:	f000 fadd 	bl	404690 <__malloc_unlock>
  4040d6:	3408      	adds	r4, #8
  4040d8:	4620      	mov	r0, r4
  4040da:	b003      	add	sp, #12
  4040dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4040e0:	2400      	movs	r4, #0
  4040e2:	230c      	movs	r3, #12
  4040e4:	4620      	mov	r0, r4
  4040e6:	602b      	str	r3, [r5, #0]
  4040e8:	b003      	add	sp, #12
  4040ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4040ee:	2040      	movs	r0, #64	; 0x40
  4040f0:	f44f 7300 	mov.w	r3, #512	; 0x200
  4040f4:	f04f 0e3f 	mov.w	lr, #63	; 0x3f
  4040f8:	e74a      	b.n	403f90 <_malloc_r+0x44>
  4040fa:	4423      	add	r3, r4
  4040fc:	68e1      	ldr	r1, [r4, #12]
  4040fe:	685a      	ldr	r2, [r3, #4]
  404100:	68a6      	ldr	r6, [r4, #8]
  404102:	f042 0201 	orr.w	r2, r2, #1
  404106:	60f1      	str	r1, [r6, #12]
  404108:	4628      	mov	r0, r5
  40410a:	608e      	str	r6, [r1, #8]
  40410c:	605a      	str	r2, [r3, #4]
  40410e:	f000 fabf 	bl	404690 <__malloc_unlock>
  404112:	3408      	adds	r4, #8
  404114:	4620      	mov	r0, r4
  404116:	b003      	add	sp, #12
  404118:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  40411c:	4423      	add	r3, r4
  40411e:	4628      	mov	r0, r5
  404120:	685a      	ldr	r2, [r3, #4]
  404122:	f042 0201 	orr.w	r2, r2, #1
  404126:	605a      	str	r2, [r3, #4]
  404128:	f000 fab2 	bl	404690 <__malloc_unlock>
  40412c:	3408      	adds	r4, #8
  40412e:	4620      	mov	r0, r4
  404130:	b003      	add	sp, #12
  404132:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404136:	68bc      	ldr	r4, [r7, #8]
  404138:	6863      	ldr	r3, [r4, #4]
  40413a:	f023 0803 	bic.w	r8, r3, #3
  40413e:	45b0      	cmp	r8, r6
  404140:	d304      	bcc.n	40414c <_malloc_r+0x200>
  404142:	eba8 0306 	sub.w	r3, r8, r6
  404146:	2b0f      	cmp	r3, #15
  404148:	f300 8085 	bgt.w	404256 <_malloc_r+0x30a>
  40414c:	f8df 9158 	ldr.w	r9, [pc, #344]	; 4042a8 <_malloc_r+0x35c>
  404150:	4b50      	ldr	r3, [pc, #320]	; (404294 <_malloc_r+0x348>)
  404152:	f8d9 2000 	ldr.w	r2, [r9]
  404156:	681b      	ldr	r3, [r3, #0]
  404158:	3201      	adds	r2, #1
  40415a:	4433      	add	r3, r6
  40415c:	eb04 0a08 	add.w	sl, r4, r8
  404160:	f000 8155 	beq.w	40440e <_malloc_r+0x4c2>
  404164:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
  404168:	330f      	adds	r3, #15
  40416a:	f423 6b7f 	bic.w	fp, r3, #4080	; 0xff0
  40416e:	f02b 0b0f 	bic.w	fp, fp, #15
  404172:	4659      	mov	r1, fp
  404174:	4628      	mov	r0, r5
  404176:	f000 fd8b 	bl	404c90 <_sbrk_r>
  40417a:	1c41      	adds	r1, r0, #1
  40417c:	4602      	mov	r2, r0
  40417e:	f000 80fc 	beq.w	40437a <_malloc_r+0x42e>
  404182:	4582      	cmp	sl, r0
  404184:	f200 80f7 	bhi.w	404376 <_malloc_r+0x42a>
  404188:	4b43      	ldr	r3, [pc, #268]	; (404298 <_malloc_r+0x34c>)
  40418a:	6819      	ldr	r1, [r3, #0]
  40418c:	4459      	add	r1, fp
  40418e:	6019      	str	r1, [r3, #0]
  404190:	f000 814d 	beq.w	40442e <_malloc_r+0x4e2>
  404194:	f8d9 0000 	ldr.w	r0, [r9]
  404198:	3001      	adds	r0, #1
  40419a:	bf1b      	ittet	ne
  40419c:	eba2 0a0a 	subne.w	sl, r2, sl
  4041a0:	4451      	addne	r1, sl
  4041a2:	f8c9 2000 	streq.w	r2, [r9]
  4041a6:	6019      	strne	r1, [r3, #0]
  4041a8:	f012 0107 	ands.w	r1, r2, #7
  4041ac:	f000 8115 	beq.w	4043da <_malloc_r+0x48e>
  4041b0:	f1c1 0008 	rsb	r0, r1, #8
  4041b4:	f5c1 5180 	rsb	r1, r1, #4096	; 0x1000
  4041b8:	4402      	add	r2, r0
  4041ba:	3108      	adds	r1, #8
  4041bc:	eb02 090b 	add.w	r9, r2, fp
  4041c0:	f3c9 090b 	ubfx	r9, r9, #0, #12
  4041c4:	eba1 0909 	sub.w	r9, r1, r9
  4041c8:	4649      	mov	r1, r9
  4041ca:	4628      	mov	r0, r5
  4041cc:	9301      	str	r3, [sp, #4]
  4041ce:	9200      	str	r2, [sp, #0]
  4041d0:	f000 fd5e 	bl	404c90 <_sbrk_r>
  4041d4:	1c43      	adds	r3, r0, #1
  4041d6:	e89d 000c 	ldmia.w	sp, {r2, r3}
  4041da:	f000 8143 	beq.w	404464 <_malloc_r+0x518>
  4041de:	1a80      	subs	r0, r0, r2
  4041e0:	4448      	add	r0, r9
  4041e2:	f040 0001 	orr.w	r0, r0, #1
  4041e6:	6819      	ldr	r1, [r3, #0]
  4041e8:	60ba      	str	r2, [r7, #8]
  4041ea:	4449      	add	r1, r9
  4041ec:	42bc      	cmp	r4, r7
  4041ee:	6050      	str	r0, [r2, #4]
  4041f0:	6019      	str	r1, [r3, #0]
  4041f2:	d017      	beq.n	404224 <_malloc_r+0x2d8>
  4041f4:	f1b8 0f0f 	cmp.w	r8, #15
  4041f8:	f240 80fb 	bls.w	4043f2 <_malloc_r+0x4a6>
  4041fc:	6860      	ldr	r0, [r4, #4]
  4041fe:	f1a8 020c 	sub.w	r2, r8, #12
  404202:	f022 0207 	bic.w	r2, r2, #7
  404206:	eb04 0e02 	add.w	lr, r4, r2
  40420a:	f000 0001 	and.w	r0, r0, #1
  40420e:	f04f 0c05 	mov.w	ip, #5
  404212:	4310      	orrs	r0, r2
  404214:	2a0f      	cmp	r2, #15
  404216:	6060      	str	r0, [r4, #4]
  404218:	f8ce c004 	str.w	ip, [lr, #4]
  40421c:	f8ce c008 	str.w	ip, [lr, #8]
  404220:	f200 8117 	bhi.w	404452 <_malloc_r+0x506>
  404224:	4b1d      	ldr	r3, [pc, #116]	; (40429c <_malloc_r+0x350>)
  404226:	68bc      	ldr	r4, [r7, #8]
  404228:	681a      	ldr	r2, [r3, #0]
  40422a:	4291      	cmp	r1, r2
  40422c:	bf88      	it	hi
  40422e:	6019      	strhi	r1, [r3, #0]
  404230:	4b1b      	ldr	r3, [pc, #108]	; (4042a0 <_malloc_r+0x354>)
  404232:	681a      	ldr	r2, [r3, #0]
  404234:	4291      	cmp	r1, r2
  404236:	6862      	ldr	r2, [r4, #4]
  404238:	bf88      	it	hi
  40423a:	6019      	strhi	r1, [r3, #0]
  40423c:	f022 0203 	bic.w	r2, r2, #3
  404240:	4296      	cmp	r6, r2
  404242:	eba2 0306 	sub.w	r3, r2, r6
  404246:	d801      	bhi.n	40424c <_malloc_r+0x300>
  404248:	2b0f      	cmp	r3, #15
  40424a:	dc04      	bgt.n	404256 <_malloc_r+0x30a>
  40424c:	4628      	mov	r0, r5
  40424e:	f000 fa1f 	bl	404690 <__malloc_unlock>
  404252:	2400      	movs	r4, #0
  404254:	e740      	b.n	4040d8 <_malloc_r+0x18c>
  404256:	19a2      	adds	r2, r4, r6
  404258:	f043 0301 	orr.w	r3, r3, #1
  40425c:	f046 0601 	orr.w	r6, r6, #1
  404260:	6066      	str	r6, [r4, #4]
  404262:	4628      	mov	r0, r5
  404264:	60ba      	str	r2, [r7, #8]
  404266:	6053      	str	r3, [r2, #4]
  404268:	f000 fa12 	bl	404690 <__malloc_unlock>
  40426c:	3408      	adds	r4, #8
  40426e:	4620      	mov	r0, r4
  404270:	b003      	add	sp, #12
  404272:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404276:	2b14      	cmp	r3, #20
  404278:	d971      	bls.n	40435e <_malloc_r+0x412>
  40427a:	2b54      	cmp	r3, #84	; 0x54
  40427c:	f200 80a3 	bhi.w	4043c6 <_malloc_r+0x47a>
  404280:	0b33      	lsrs	r3, r6, #12
  404282:	f103 006f 	add.w	r0, r3, #111	; 0x6f
  404286:	f103 0e6e 	add.w	lr, r3, #110	; 0x6e
  40428a:	00c3      	lsls	r3, r0, #3
  40428c:	e680      	b.n	403f90 <_malloc_r+0x44>
  40428e:	bf00      	nop
  404290:	20400454 	.word	0x20400454
  404294:	20400ca0 	.word	0x20400ca0
  404298:	20400c70 	.word	0x20400c70
  40429c:	20400c98 	.word	0x20400c98
  4042a0:	20400c9c 	.word	0x20400c9c
  4042a4:	2040045c 	.word	0x2040045c
  4042a8:	2040085c 	.word	0x2040085c
  4042ac:	0a5a      	lsrs	r2, r3, #9
  4042ae:	2a04      	cmp	r2, #4
  4042b0:	d95b      	bls.n	40436a <_malloc_r+0x41e>
  4042b2:	2a14      	cmp	r2, #20
  4042b4:	f200 80ae 	bhi.w	404414 <_malloc_r+0x4c8>
  4042b8:	f102 015c 	add.w	r1, r2, #92	; 0x5c
  4042bc:	00c9      	lsls	r1, r1, #3
  4042be:	325b      	adds	r2, #91	; 0x5b
  4042c0:	eb07 0c01 	add.w	ip, r7, r1
  4042c4:	5879      	ldr	r1, [r7, r1]
  4042c6:	f1ac 0c08 	sub.w	ip, ip, #8
  4042ca:	458c      	cmp	ip, r1
  4042cc:	f000 8088 	beq.w	4043e0 <_malloc_r+0x494>
  4042d0:	684a      	ldr	r2, [r1, #4]
  4042d2:	f022 0203 	bic.w	r2, r2, #3
  4042d6:	4293      	cmp	r3, r2
  4042d8:	d273      	bcs.n	4043c2 <_malloc_r+0x476>
  4042da:	6889      	ldr	r1, [r1, #8]
  4042dc:	458c      	cmp	ip, r1
  4042de:	d1f7      	bne.n	4042d0 <_malloc_r+0x384>
  4042e0:	f8dc 200c 	ldr.w	r2, [ip, #12]
  4042e4:	687b      	ldr	r3, [r7, #4]
  4042e6:	60e2      	str	r2, [r4, #12]
  4042e8:	f8c4 c008 	str.w	ip, [r4, #8]
  4042ec:	6094      	str	r4, [r2, #8]
  4042ee:	f8cc 400c 	str.w	r4, [ip, #12]
  4042f2:	e68f      	b.n	404014 <_malloc_r+0xc8>
  4042f4:	19a1      	adds	r1, r4, r6
  4042f6:	f046 0c01 	orr.w	ip, r6, #1
  4042fa:	f042 0601 	orr.w	r6, r2, #1
  4042fe:	f8c4 c004 	str.w	ip, [r4, #4]
  404302:	4628      	mov	r0, r5
  404304:	6179      	str	r1, [r7, #20]
  404306:	6139      	str	r1, [r7, #16]
  404308:	f8c1 e00c 	str.w	lr, [r1, #12]
  40430c:	f8c1 e008 	str.w	lr, [r1, #8]
  404310:	604e      	str	r6, [r1, #4]
  404312:	50e2      	str	r2, [r4, r3]
  404314:	f000 f9bc 	bl	404690 <__malloc_unlock>
  404318:	3408      	adds	r4, #8
  40431a:	e6dd      	b.n	4040d8 <_malloc_r+0x18c>
  40431c:	687b      	ldr	r3, [r7, #4]
  40431e:	e679      	b.n	404014 <_malloc_r+0xc8>
  404320:	f108 0801 	add.w	r8, r8, #1
  404324:	f018 0f03 	tst.w	r8, #3
  404328:	f10c 0c08 	add.w	ip, ip, #8
  40432c:	f47f ae85 	bne.w	40403a <_malloc_r+0xee>
  404330:	e02d      	b.n	40438e <_malloc_r+0x442>
  404332:	68dc      	ldr	r4, [r3, #12]
  404334:	42a3      	cmp	r3, r4
  404336:	bf08      	it	eq
  404338:	3002      	addeq	r0, #2
  40433a:	f43f ae3e 	beq.w	403fba <_malloc_r+0x6e>
  40433e:	e6bb      	b.n	4040b8 <_malloc_r+0x16c>
  404340:	4419      	add	r1, r3
  404342:	461c      	mov	r4, r3
  404344:	684a      	ldr	r2, [r1, #4]
  404346:	68db      	ldr	r3, [r3, #12]
  404348:	f854 6f08 	ldr.w	r6, [r4, #8]!
  40434c:	f042 0201 	orr.w	r2, r2, #1
  404350:	604a      	str	r2, [r1, #4]
  404352:	4628      	mov	r0, r5
  404354:	60f3      	str	r3, [r6, #12]
  404356:	609e      	str	r6, [r3, #8]
  404358:	f000 f99a 	bl	404690 <__malloc_unlock>
  40435c:	e6bc      	b.n	4040d8 <_malloc_r+0x18c>
  40435e:	f103 005c 	add.w	r0, r3, #92	; 0x5c
  404362:	f103 0e5b 	add.w	lr, r3, #91	; 0x5b
  404366:	00c3      	lsls	r3, r0, #3
  404368:	e612      	b.n	403f90 <_malloc_r+0x44>
  40436a:	099a      	lsrs	r2, r3, #6
  40436c:	f102 0139 	add.w	r1, r2, #57	; 0x39
  404370:	00c9      	lsls	r1, r1, #3
  404372:	3238      	adds	r2, #56	; 0x38
  404374:	e7a4      	b.n	4042c0 <_malloc_r+0x374>
  404376:	42bc      	cmp	r4, r7
  404378:	d054      	beq.n	404424 <_malloc_r+0x4d8>
  40437a:	68bc      	ldr	r4, [r7, #8]
  40437c:	6862      	ldr	r2, [r4, #4]
  40437e:	f022 0203 	bic.w	r2, r2, #3
  404382:	e75d      	b.n	404240 <_malloc_r+0x2f4>
  404384:	f859 3908 	ldr.w	r3, [r9], #-8
  404388:	4599      	cmp	r9, r3
  40438a:	f040 8086 	bne.w	40449a <_malloc_r+0x54e>
  40438e:	f010 0f03 	tst.w	r0, #3
  404392:	f100 30ff 	add.w	r0, r0, #4294967295
  404396:	d1f5      	bne.n	404384 <_malloc_r+0x438>
  404398:	687b      	ldr	r3, [r7, #4]
  40439a:	ea23 0304 	bic.w	r3, r3, r4
  40439e:	607b      	str	r3, [r7, #4]
  4043a0:	0064      	lsls	r4, r4, #1
  4043a2:	429c      	cmp	r4, r3
  4043a4:	f63f aec7 	bhi.w	404136 <_malloc_r+0x1ea>
  4043a8:	2c00      	cmp	r4, #0
  4043aa:	f43f aec4 	beq.w	404136 <_malloc_r+0x1ea>
  4043ae:	421c      	tst	r4, r3
  4043b0:	4640      	mov	r0, r8
  4043b2:	f47f ae3e 	bne.w	404032 <_malloc_r+0xe6>
  4043b6:	0064      	lsls	r4, r4, #1
  4043b8:	421c      	tst	r4, r3
  4043ba:	f100 0004 	add.w	r0, r0, #4
  4043be:	d0fa      	beq.n	4043b6 <_malloc_r+0x46a>
  4043c0:	e637      	b.n	404032 <_malloc_r+0xe6>
  4043c2:	468c      	mov	ip, r1
  4043c4:	e78c      	b.n	4042e0 <_malloc_r+0x394>
  4043c6:	f5b3 7faa 	cmp.w	r3, #340	; 0x154
  4043ca:	d815      	bhi.n	4043f8 <_malloc_r+0x4ac>
  4043cc:	0bf3      	lsrs	r3, r6, #15
  4043ce:	f103 0078 	add.w	r0, r3, #120	; 0x78
  4043d2:	f103 0e77 	add.w	lr, r3, #119	; 0x77
  4043d6:	00c3      	lsls	r3, r0, #3
  4043d8:	e5da      	b.n	403f90 <_malloc_r+0x44>
  4043da:	f44f 5180 	mov.w	r1, #4096	; 0x1000
  4043de:	e6ed      	b.n	4041bc <_malloc_r+0x270>
  4043e0:	687b      	ldr	r3, [r7, #4]
  4043e2:	1092      	asrs	r2, r2, #2
  4043e4:	2101      	movs	r1, #1
  4043e6:	fa01 f202 	lsl.w	r2, r1, r2
  4043ea:	4313      	orrs	r3, r2
  4043ec:	607b      	str	r3, [r7, #4]
  4043ee:	4662      	mov	r2, ip
  4043f0:	e779      	b.n	4042e6 <_malloc_r+0x39a>
  4043f2:	2301      	movs	r3, #1
  4043f4:	6053      	str	r3, [r2, #4]
  4043f6:	e729      	b.n	40424c <_malloc_r+0x300>
  4043f8:	f240 5254 	movw	r2, #1364	; 0x554
  4043fc:	4293      	cmp	r3, r2
  4043fe:	d822      	bhi.n	404446 <_malloc_r+0x4fa>
  404400:	0cb3      	lsrs	r3, r6, #18
  404402:	f103 007d 	add.w	r0, r3, #125	; 0x7d
  404406:	f103 0e7c 	add.w	lr, r3, #124	; 0x7c
  40440a:	00c3      	lsls	r3, r0, #3
  40440c:	e5c0      	b.n	403f90 <_malloc_r+0x44>
  40440e:	f103 0b10 	add.w	fp, r3, #16
  404412:	e6ae      	b.n	404172 <_malloc_r+0x226>
  404414:	2a54      	cmp	r2, #84	; 0x54
  404416:	d829      	bhi.n	40446c <_malloc_r+0x520>
  404418:	0b1a      	lsrs	r2, r3, #12
  40441a:	f102 016f 	add.w	r1, r2, #111	; 0x6f
  40441e:	00c9      	lsls	r1, r1, #3
  404420:	326e      	adds	r2, #110	; 0x6e
  404422:	e74d      	b.n	4042c0 <_malloc_r+0x374>
  404424:	4b20      	ldr	r3, [pc, #128]	; (4044a8 <_malloc_r+0x55c>)
  404426:	6819      	ldr	r1, [r3, #0]
  404428:	4459      	add	r1, fp
  40442a:	6019      	str	r1, [r3, #0]
  40442c:	e6b2      	b.n	404194 <_malloc_r+0x248>
  40442e:	f3ca 000b 	ubfx	r0, sl, #0, #12
  404432:	2800      	cmp	r0, #0
  404434:	f47f aeae 	bne.w	404194 <_malloc_r+0x248>
  404438:	eb08 030b 	add.w	r3, r8, fp
  40443c:	68ba      	ldr	r2, [r7, #8]
  40443e:	f043 0301 	orr.w	r3, r3, #1
  404442:	6053      	str	r3, [r2, #4]
  404444:	e6ee      	b.n	404224 <_malloc_r+0x2d8>
  404446:	207f      	movs	r0, #127	; 0x7f
  404448:	f44f 737e 	mov.w	r3, #1016	; 0x3f8
  40444c:	f04f 0e7e 	mov.w	lr, #126	; 0x7e
  404450:	e59e      	b.n	403f90 <_malloc_r+0x44>
  404452:	f104 0108 	add.w	r1, r4, #8
  404456:	4628      	mov	r0, r5
  404458:	9300      	str	r3, [sp, #0]
  40445a:	f000 fdff 	bl	40505c <_free_r>
  40445e:	9b00      	ldr	r3, [sp, #0]
  404460:	6819      	ldr	r1, [r3, #0]
  404462:	e6df      	b.n	404224 <_malloc_r+0x2d8>
  404464:	2001      	movs	r0, #1
  404466:	f04f 0900 	mov.w	r9, #0
  40446a:	e6bc      	b.n	4041e6 <_malloc_r+0x29a>
  40446c:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  404470:	d805      	bhi.n	40447e <_malloc_r+0x532>
  404472:	0bda      	lsrs	r2, r3, #15
  404474:	f102 0178 	add.w	r1, r2, #120	; 0x78
  404478:	00c9      	lsls	r1, r1, #3
  40447a:	3277      	adds	r2, #119	; 0x77
  40447c:	e720      	b.n	4042c0 <_malloc_r+0x374>
  40447e:	f240 5154 	movw	r1, #1364	; 0x554
  404482:	428a      	cmp	r2, r1
  404484:	d805      	bhi.n	404492 <_malloc_r+0x546>
  404486:	0c9a      	lsrs	r2, r3, #18
  404488:	f102 017d 	add.w	r1, r2, #125	; 0x7d
  40448c:	00c9      	lsls	r1, r1, #3
  40448e:	327c      	adds	r2, #124	; 0x7c
  404490:	e716      	b.n	4042c0 <_malloc_r+0x374>
  404492:	f44f 717e 	mov.w	r1, #1016	; 0x3f8
  404496:	227e      	movs	r2, #126	; 0x7e
  404498:	e712      	b.n	4042c0 <_malloc_r+0x374>
  40449a:	687b      	ldr	r3, [r7, #4]
  40449c:	e780      	b.n	4043a0 <_malloc_r+0x454>
  40449e:	08f0      	lsrs	r0, r6, #3
  4044a0:	f106 0308 	add.w	r3, r6, #8
  4044a4:	e600      	b.n	4040a8 <_malloc_r+0x15c>
  4044a6:	bf00      	nop
  4044a8:	20400c70 	.word	0x20400c70
  4044ac:	00000000 	.word	0x00000000

004044b0 <memchr>:
  4044b0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  4044b4:	2a10      	cmp	r2, #16
  4044b6:	db2b      	blt.n	404510 <memchr+0x60>
  4044b8:	f010 0f07 	tst.w	r0, #7
  4044bc:	d008      	beq.n	4044d0 <memchr+0x20>
  4044be:	f810 3b01 	ldrb.w	r3, [r0], #1
  4044c2:	3a01      	subs	r2, #1
  4044c4:	428b      	cmp	r3, r1
  4044c6:	d02d      	beq.n	404524 <memchr+0x74>
  4044c8:	f010 0f07 	tst.w	r0, #7
  4044cc:	b342      	cbz	r2, 404520 <memchr+0x70>
  4044ce:	d1f6      	bne.n	4044be <memchr+0xe>
  4044d0:	b4f0      	push	{r4, r5, r6, r7}
  4044d2:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
  4044d6:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
  4044da:	f022 0407 	bic.w	r4, r2, #7
  4044de:	f07f 0700 	mvns.w	r7, #0
  4044e2:	2300      	movs	r3, #0
  4044e4:	e8f0 5602 	ldrd	r5, r6, [r0], #8
  4044e8:	3c08      	subs	r4, #8
  4044ea:	ea85 0501 	eor.w	r5, r5, r1
  4044ee:	ea86 0601 	eor.w	r6, r6, r1
  4044f2:	fa85 f547 	uadd8	r5, r5, r7
  4044f6:	faa3 f587 	sel	r5, r3, r7
  4044fa:	fa86 f647 	uadd8	r6, r6, r7
  4044fe:	faa5 f687 	sel	r6, r5, r7
  404502:	b98e      	cbnz	r6, 404528 <memchr+0x78>
  404504:	d1ee      	bne.n	4044e4 <memchr+0x34>
  404506:	bcf0      	pop	{r4, r5, r6, r7}
  404508:	f001 01ff 	and.w	r1, r1, #255	; 0xff
  40450c:	f002 0207 	and.w	r2, r2, #7
  404510:	b132      	cbz	r2, 404520 <memchr+0x70>
  404512:	f810 3b01 	ldrb.w	r3, [r0], #1
  404516:	3a01      	subs	r2, #1
  404518:	ea83 0301 	eor.w	r3, r3, r1
  40451c:	b113      	cbz	r3, 404524 <memchr+0x74>
  40451e:	d1f8      	bne.n	404512 <memchr+0x62>
  404520:	2000      	movs	r0, #0
  404522:	4770      	bx	lr
  404524:	3801      	subs	r0, #1
  404526:	4770      	bx	lr
  404528:	2d00      	cmp	r5, #0
  40452a:	bf06      	itte	eq
  40452c:	4635      	moveq	r5, r6
  40452e:	3803      	subeq	r0, #3
  404530:	3807      	subne	r0, #7
  404532:	f015 0f01 	tst.w	r5, #1
  404536:	d107      	bne.n	404548 <memchr+0x98>
  404538:	3001      	adds	r0, #1
  40453a:	f415 7f80 	tst.w	r5, #256	; 0x100
  40453e:	bf02      	ittt	eq
  404540:	3001      	addeq	r0, #1
  404542:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
  404546:	3001      	addeq	r0, #1
  404548:	bcf0      	pop	{r4, r5, r6, r7}
  40454a:	3801      	subs	r0, #1
  40454c:	4770      	bx	lr
  40454e:	bf00      	nop

00404550 <memcpy>:
  404550:	4684      	mov	ip, r0
  404552:	ea41 0300 	orr.w	r3, r1, r0
  404556:	f013 0303 	ands.w	r3, r3, #3
  40455a:	d16d      	bne.n	404638 <memcpy+0xe8>
  40455c:	3a40      	subs	r2, #64	; 0x40
  40455e:	d341      	bcc.n	4045e4 <memcpy+0x94>
  404560:	f851 3b04 	ldr.w	r3, [r1], #4
  404564:	f840 3b04 	str.w	r3, [r0], #4
  404568:	f851 3b04 	ldr.w	r3, [r1], #4
  40456c:	f840 3b04 	str.w	r3, [r0], #4
  404570:	f851 3b04 	ldr.w	r3, [r1], #4
  404574:	f840 3b04 	str.w	r3, [r0], #4
  404578:	f851 3b04 	ldr.w	r3, [r1], #4
  40457c:	f840 3b04 	str.w	r3, [r0], #4
  404580:	f851 3b04 	ldr.w	r3, [r1], #4
  404584:	f840 3b04 	str.w	r3, [r0], #4
  404588:	f851 3b04 	ldr.w	r3, [r1], #4
  40458c:	f840 3b04 	str.w	r3, [r0], #4
  404590:	f851 3b04 	ldr.w	r3, [r1], #4
  404594:	f840 3b04 	str.w	r3, [r0], #4
  404598:	f851 3b04 	ldr.w	r3, [r1], #4
  40459c:	f840 3b04 	str.w	r3, [r0], #4
  4045a0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045a4:	f840 3b04 	str.w	r3, [r0], #4
  4045a8:	f851 3b04 	ldr.w	r3, [r1], #4
  4045ac:	f840 3b04 	str.w	r3, [r0], #4
  4045b0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045b4:	f840 3b04 	str.w	r3, [r0], #4
  4045b8:	f851 3b04 	ldr.w	r3, [r1], #4
  4045bc:	f840 3b04 	str.w	r3, [r0], #4
  4045c0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045c4:	f840 3b04 	str.w	r3, [r0], #4
  4045c8:	f851 3b04 	ldr.w	r3, [r1], #4
  4045cc:	f840 3b04 	str.w	r3, [r0], #4
  4045d0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045d4:	f840 3b04 	str.w	r3, [r0], #4
  4045d8:	f851 3b04 	ldr.w	r3, [r1], #4
  4045dc:	f840 3b04 	str.w	r3, [r0], #4
  4045e0:	3a40      	subs	r2, #64	; 0x40
  4045e2:	d2bd      	bcs.n	404560 <memcpy+0x10>
  4045e4:	3230      	adds	r2, #48	; 0x30
  4045e6:	d311      	bcc.n	40460c <memcpy+0xbc>
  4045e8:	f851 3b04 	ldr.w	r3, [r1], #4
  4045ec:	f840 3b04 	str.w	r3, [r0], #4
  4045f0:	f851 3b04 	ldr.w	r3, [r1], #4
  4045f4:	f840 3b04 	str.w	r3, [r0], #4
  4045f8:	f851 3b04 	ldr.w	r3, [r1], #4
  4045fc:	f840 3b04 	str.w	r3, [r0], #4
  404600:	f851 3b04 	ldr.w	r3, [r1], #4
  404604:	f840 3b04 	str.w	r3, [r0], #4
  404608:	3a10      	subs	r2, #16
  40460a:	d2ed      	bcs.n	4045e8 <memcpy+0x98>
  40460c:	320c      	adds	r2, #12
  40460e:	d305      	bcc.n	40461c <memcpy+0xcc>
  404610:	f851 3b04 	ldr.w	r3, [r1], #4
  404614:	f840 3b04 	str.w	r3, [r0], #4
  404618:	3a04      	subs	r2, #4
  40461a:	d2f9      	bcs.n	404610 <memcpy+0xc0>
  40461c:	3204      	adds	r2, #4
  40461e:	d008      	beq.n	404632 <memcpy+0xe2>
  404620:	07d2      	lsls	r2, r2, #31
  404622:	bf1c      	itt	ne
  404624:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404628:	f800 3b01 	strbne.w	r3, [r0], #1
  40462c:	d301      	bcc.n	404632 <memcpy+0xe2>
  40462e:	880b      	ldrh	r3, [r1, #0]
  404630:	8003      	strh	r3, [r0, #0]
  404632:	4660      	mov	r0, ip
  404634:	4770      	bx	lr
  404636:	bf00      	nop
  404638:	2a08      	cmp	r2, #8
  40463a:	d313      	bcc.n	404664 <memcpy+0x114>
  40463c:	078b      	lsls	r3, r1, #30
  40463e:	d08d      	beq.n	40455c <memcpy+0xc>
  404640:	f010 0303 	ands.w	r3, r0, #3
  404644:	d08a      	beq.n	40455c <memcpy+0xc>
  404646:	f1c3 0304 	rsb	r3, r3, #4
  40464a:	1ad2      	subs	r2, r2, r3
  40464c:	07db      	lsls	r3, r3, #31
  40464e:	bf1c      	itt	ne
  404650:	f811 3b01 	ldrbne.w	r3, [r1], #1
  404654:	f800 3b01 	strbne.w	r3, [r0], #1
  404658:	d380      	bcc.n	40455c <memcpy+0xc>
  40465a:	f831 3b02 	ldrh.w	r3, [r1], #2
  40465e:	f820 3b02 	strh.w	r3, [r0], #2
  404662:	e77b      	b.n	40455c <memcpy+0xc>
  404664:	3a04      	subs	r2, #4
  404666:	d3d9      	bcc.n	40461c <memcpy+0xcc>
  404668:	3a01      	subs	r2, #1
  40466a:	f811 3b01 	ldrb.w	r3, [r1], #1
  40466e:	f800 3b01 	strb.w	r3, [r0], #1
  404672:	d2f9      	bcs.n	404668 <memcpy+0x118>
  404674:	780b      	ldrb	r3, [r1, #0]
  404676:	7003      	strb	r3, [r0, #0]
  404678:	784b      	ldrb	r3, [r1, #1]
  40467a:	7043      	strb	r3, [r0, #1]
  40467c:	788b      	ldrb	r3, [r1, #2]
  40467e:	7083      	strb	r3, [r0, #2]
  404680:	4660      	mov	r0, ip
  404682:	4770      	bx	lr

00404684 <__malloc_lock>:
  404684:	4801      	ldr	r0, [pc, #4]	; (40468c <__malloc_lock+0x8>)
  404686:	f7ff bc5d 	b.w	403f44 <__retarget_lock_acquire_recursive>
  40468a:	bf00      	nop
  40468c:	20400cb8 	.word	0x20400cb8

00404690 <__malloc_unlock>:
  404690:	4801      	ldr	r0, [pc, #4]	; (404698 <__malloc_unlock+0x8>)
  404692:	f7ff bc59 	b.w	403f48 <__retarget_lock_release_recursive>
  404696:	bf00      	nop
  404698:	20400cb8 	.word	0x20400cb8

0040469c <_Balloc>:
  40469c:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  40469e:	b570      	push	{r4, r5, r6, lr}
  4046a0:	4605      	mov	r5, r0
  4046a2:	460c      	mov	r4, r1
  4046a4:	b14b      	cbz	r3, 4046ba <_Balloc+0x1e>
  4046a6:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
  4046aa:	b180      	cbz	r0, 4046ce <_Balloc+0x32>
  4046ac:	6802      	ldr	r2, [r0, #0]
  4046ae:	f843 2024 	str.w	r2, [r3, r4, lsl #2]
  4046b2:	2300      	movs	r3, #0
  4046b4:	6103      	str	r3, [r0, #16]
  4046b6:	60c3      	str	r3, [r0, #12]
  4046b8:	bd70      	pop	{r4, r5, r6, pc}
  4046ba:	2221      	movs	r2, #33	; 0x21
  4046bc:	2104      	movs	r1, #4
  4046be:	f000 fc4d 	bl	404f5c <_calloc_r>
  4046c2:	64e8      	str	r0, [r5, #76]	; 0x4c
  4046c4:	4603      	mov	r3, r0
  4046c6:	2800      	cmp	r0, #0
  4046c8:	d1ed      	bne.n	4046a6 <_Balloc+0xa>
  4046ca:	2000      	movs	r0, #0
  4046cc:	bd70      	pop	{r4, r5, r6, pc}
  4046ce:	2101      	movs	r1, #1
  4046d0:	fa01 f604 	lsl.w	r6, r1, r4
  4046d4:	1d72      	adds	r2, r6, #5
  4046d6:	4628      	mov	r0, r5
  4046d8:	0092      	lsls	r2, r2, #2
  4046da:	f000 fc3f 	bl	404f5c <_calloc_r>
  4046de:	2800      	cmp	r0, #0
  4046e0:	d0f3      	beq.n	4046ca <_Balloc+0x2e>
  4046e2:	6044      	str	r4, [r0, #4]
  4046e4:	6086      	str	r6, [r0, #8]
  4046e6:	e7e4      	b.n	4046b2 <_Balloc+0x16>

004046e8 <_Bfree>:
  4046e8:	b131      	cbz	r1, 4046f8 <_Bfree+0x10>
  4046ea:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
  4046ec:	684a      	ldr	r2, [r1, #4]
  4046ee:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
  4046f2:	6008      	str	r0, [r1, #0]
  4046f4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  4046f8:	4770      	bx	lr
  4046fa:	bf00      	nop

004046fc <__multadd>:
  4046fc:	b5f0      	push	{r4, r5, r6, r7, lr}
  4046fe:	690c      	ldr	r4, [r1, #16]
  404700:	b083      	sub	sp, #12
  404702:	460d      	mov	r5, r1
  404704:	4606      	mov	r6, r0
  404706:	f101 0e14 	add.w	lr, r1, #20
  40470a:	2700      	movs	r7, #0
  40470c:	f8de 0000 	ldr.w	r0, [lr]
  404710:	b281      	uxth	r1, r0
  404712:	fb02 3301 	mla	r3, r2, r1, r3
  404716:	0c01      	lsrs	r1, r0, #16
  404718:	0c18      	lsrs	r0, r3, #16
  40471a:	fb02 0101 	mla	r1, r2, r1, r0
  40471e:	b29b      	uxth	r3, r3
  404720:	3701      	adds	r7, #1
  404722:	eb03 4301 	add.w	r3, r3, r1, lsl #16
  404726:	42bc      	cmp	r4, r7
  404728:	f84e 3b04 	str.w	r3, [lr], #4
  40472c:	ea4f 4311 	mov.w	r3, r1, lsr #16
  404730:	dcec      	bgt.n	40470c <__multadd+0x10>
  404732:	b13b      	cbz	r3, 404744 <__multadd+0x48>
  404734:	68aa      	ldr	r2, [r5, #8]
  404736:	4294      	cmp	r4, r2
  404738:	da07      	bge.n	40474a <__multadd+0x4e>
  40473a:	eb05 0284 	add.w	r2, r5, r4, lsl #2
  40473e:	3401      	adds	r4, #1
  404740:	6153      	str	r3, [r2, #20]
  404742:	612c      	str	r4, [r5, #16]
  404744:	4628      	mov	r0, r5
  404746:	b003      	add	sp, #12
  404748:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40474a:	6869      	ldr	r1, [r5, #4]
  40474c:	9301      	str	r3, [sp, #4]
  40474e:	3101      	adds	r1, #1
  404750:	4630      	mov	r0, r6
  404752:	f7ff ffa3 	bl	40469c <_Balloc>
  404756:	692a      	ldr	r2, [r5, #16]
  404758:	3202      	adds	r2, #2
  40475a:	f105 010c 	add.w	r1, r5, #12
  40475e:	4607      	mov	r7, r0
  404760:	0092      	lsls	r2, r2, #2
  404762:	300c      	adds	r0, #12
  404764:	f7ff fef4 	bl	404550 <memcpy>
  404768:	6cf2      	ldr	r2, [r6, #76]	; 0x4c
  40476a:	6869      	ldr	r1, [r5, #4]
  40476c:	9b01      	ldr	r3, [sp, #4]
  40476e:	f852 0021 	ldr.w	r0, [r2, r1, lsl #2]
  404772:	6028      	str	r0, [r5, #0]
  404774:	f842 5021 	str.w	r5, [r2, r1, lsl #2]
  404778:	463d      	mov	r5, r7
  40477a:	e7de      	b.n	40473a <__multadd+0x3e>

0040477c <__hi0bits>:
  40477c:	0c02      	lsrs	r2, r0, #16
  40477e:	0412      	lsls	r2, r2, #16
  404780:	4603      	mov	r3, r0
  404782:	b9b2      	cbnz	r2, 4047b2 <__hi0bits+0x36>
  404784:	0403      	lsls	r3, r0, #16
  404786:	2010      	movs	r0, #16
  404788:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
  40478c:	bf04      	itt	eq
  40478e:	021b      	lsleq	r3, r3, #8
  404790:	3008      	addeq	r0, #8
  404792:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
  404796:	bf04      	itt	eq
  404798:	011b      	lsleq	r3, r3, #4
  40479a:	3004      	addeq	r0, #4
  40479c:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
  4047a0:	bf04      	itt	eq
  4047a2:	009b      	lsleq	r3, r3, #2
  4047a4:	3002      	addeq	r0, #2
  4047a6:	2b00      	cmp	r3, #0
  4047a8:	db02      	blt.n	4047b0 <__hi0bits+0x34>
  4047aa:	005b      	lsls	r3, r3, #1
  4047ac:	d403      	bmi.n	4047b6 <__hi0bits+0x3a>
  4047ae:	2020      	movs	r0, #32
  4047b0:	4770      	bx	lr
  4047b2:	2000      	movs	r0, #0
  4047b4:	e7e8      	b.n	404788 <__hi0bits+0xc>
  4047b6:	3001      	adds	r0, #1
  4047b8:	4770      	bx	lr
  4047ba:	bf00      	nop

004047bc <__lo0bits>:
  4047bc:	6803      	ldr	r3, [r0, #0]
  4047be:	f013 0207 	ands.w	r2, r3, #7
  4047c2:	4601      	mov	r1, r0
  4047c4:	d007      	beq.n	4047d6 <__lo0bits+0x1a>
  4047c6:	07da      	lsls	r2, r3, #31
  4047c8:	d421      	bmi.n	40480e <__lo0bits+0x52>
  4047ca:	0798      	lsls	r0, r3, #30
  4047cc:	d421      	bmi.n	404812 <__lo0bits+0x56>
  4047ce:	089b      	lsrs	r3, r3, #2
  4047d0:	600b      	str	r3, [r1, #0]
  4047d2:	2002      	movs	r0, #2
  4047d4:	4770      	bx	lr
  4047d6:	b298      	uxth	r0, r3
  4047d8:	b198      	cbz	r0, 404802 <__lo0bits+0x46>
  4047da:	4610      	mov	r0, r2
  4047dc:	f013 0fff 	tst.w	r3, #255	; 0xff
  4047e0:	bf04      	itt	eq
  4047e2:	0a1b      	lsreq	r3, r3, #8
  4047e4:	3008      	addeq	r0, #8
  4047e6:	071a      	lsls	r2, r3, #28
  4047e8:	bf04      	itt	eq
  4047ea:	091b      	lsreq	r3, r3, #4
  4047ec:	3004      	addeq	r0, #4
  4047ee:	079a      	lsls	r2, r3, #30
  4047f0:	bf04      	itt	eq
  4047f2:	089b      	lsreq	r3, r3, #2
  4047f4:	3002      	addeq	r0, #2
  4047f6:	07da      	lsls	r2, r3, #31
  4047f8:	d407      	bmi.n	40480a <__lo0bits+0x4e>
  4047fa:	085b      	lsrs	r3, r3, #1
  4047fc:	d104      	bne.n	404808 <__lo0bits+0x4c>
  4047fe:	2020      	movs	r0, #32
  404800:	4770      	bx	lr
  404802:	0c1b      	lsrs	r3, r3, #16
  404804:	2010      	movs	r0, #16
  404806:	e7e9      	b.n	4047dc <__lo0bits+0x20>
  404808:	3001      	adds	r0, #1
  40480a:	600b      	str	r3, [r1, #0]
  40480c:	4770      	bx	lr
  40480e:	2000      	movs	r0, #0
  404810:	4770      	bx	lr
  404812:	085b      	lsrs	r3, r3, #1
  404814:	600b      	str	r3, [r1, #0]
  404816:	2001      	movs	r0, #1
  404818:	4770      	bx	lr
  40481a:	bf00      	nop

0040481c <__i2b>:
  40481c:	b510      	push	{r4, lr}
  40481e:	460c      	mov	r4, r1
  404820:	2101      	movs	r1, #1
  404822:	f7ff ff3b 	bl	40469c <_Balloc>
  404826:	2201      	movs	r2, #1
  404828:	6144      	str	r4, [r0, #20]
  40482a:	6102      	str	r2, [r0, #16]
  40482c:	bd10      	pop	{r4, pc}
  40482e:	bf00      	nop

00404830 <__multiply>:
  404830:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404834:	690c      	ldr	r4, [r1, #16]
  404836:	6915      	ldr	r5, [r2, #16]
  404838:	42ac      	cmp	r4, r5
  40483a:	b083      	sub	sp, #12
  40483c:	468b      	mov	fp, r1
  40483e:	4616      	mov	r6, r2
  404840:	da04      	bge.n	40484c <__multiply+0x1c>
  404842:	4622      	mov	r2, r4
  404844:	46b3      	mov	fp, r6
  404846:	462c      	mov	r4, r5
  404848:	460e      	mov	r6, r1
  40484a:	4615      	mov	r5, r2
  40484c:	f8db 3008 	ldr.w	r3, [fp, #8]
  404850:	f8db 1004 	ldr.w	r1, [fp, #4]
  404854:	eb04 0805 	add.w	r8, r4, r5
  404858:	4598      	cmp	r8, r3
  40485a:	bfc8      	it	gt
  40485c:	3101      	addgt	r1, #1
  40485e:	f7ff ff1d 	bl	40469c <_Balloc>
  404862:	f100 0914 	add.w	r9, r0, #20
  404866:	eb09 0a88 	add.w	sl, r9, r8, lsl #2
  40486a:	45d1      	cmp	r9, sl
  40486c:	9000      	str	r0, [sp, #0]
  40486e:	d205      	bcs.n	40487c <__multiply+0x4c>
  404870:	464b      	mov	r3, r9
  404872:	2100      	movs	r1, #0
  404874:	f843 1b04 	str.w	r1, [r3], #4
  404878:	459a      	cmp	sl, r3
  40487a:	d8fb      	bhi.n	404874 <__multiply+0x44>
  40487c:	f106 0c14 	add.w	ip, r6, #20
  404880:	eb0c 0385 	add.w	r3, ip, r5, lsl #2
  404884:	f10b 0b14 	add.w	fp, fp, #20
  404888:	459c      	cmp	ip, r3
  40488a:	eb0b 0e84 	add.w	lr, fp, r4, lsl #2
  40488e:	d24c      	bcs.n	40492a <__multiply+0xfa>
  404890:	f8cd a004 	str.w	sl, [sp, #4]
  404894:	469a      	mov	sl, r3
  404896:	f8dc 5000 	ldr.w	r5, [ip]
  40489a:	b2af      	uxth	r7, r5
  40489c:	b1ef      	cbz	r7, 4048da <__multiply+0xaa>
  40489e:	2100      	movs	r1, #0
  4048a0:	464d      	mov	r5, r9
  4048a2:	465e      	mov	r6, fp
  4048a4:	460c      	mov	r4, r1
  4048a6:	f856 2b04 	ldr.w	r2, [r6], #4
  4048aa:	6828      	ldr	r0, [r5, #0]
  4048ac:	b293      	uxth	r3, r2
  4048ae:	b281      	uxth	r1, r0
  4048b0:	fb07 1303 	mla	r3, r7, r3, r1
  4048b4:	0c12      	lsrs	r2, r2, #16
  4048b6:	0c01      	lsrs	r1, r0, #16
  4048b8:	4423      	add	r3, r4
  4048ba:	fb07 1102 	mla	r1, r7, r2, r1
  4048be:	eb01 4113 	add.w	r1, r1, r3, lsr #16
  4048c2:	b29b      	uxth	r3, r3
  4048c4:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
  4048c8:	45b6      	cmp	lr, r6
  4048ca:	f845 3b04 	str.w	r3, [r5], #4
  4048ce:	ea4f 4411 	mov.w	r4, r1, lsr #16
  4048d2:	d8e8      	bhi.n	4048a6 <__multiply+0x76>
  4048d4:	602c      	str	r4, [r5, #0]
  4048d6:	f8dc 5000 	ldr.w	r5, [ip]
  4048da:	0c2d      	lsrs	r5, r5, #16
  4048dc:	d01d      	beq.n	40491a <__multiply+0xea>
  4048de:	f8d9 3000 	ldr.w	r3, [r9]
  4048e2:	4648      	mov	r0, r9
  4048e4:	461c      	mov	r4, r3
  4048e6:	4659      	mov	r1, fp
  4048e8:	2200      	movs	r2, #0
  4048ea:	880e      	ldrh	r6, [r1, #0]
  4048ec:	0c24      	lsrs	r4, r4, #16
  4048ee:	fb05 4406 	mla	r4, r5, r6, r4
  4048f2:	4422      	add	r2, r4
  4048f4:	b29b      	uxth	r3, r3
  4048f6:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
  4048fa:	f840 3b04 	str.w	r3, [r0], #4
  4048fe:	f851 3b04 	ldr.w	r3, [r1], #4
  404902:	6804      	ldr	r4, [r0, #0]
  404904:	0c1b      	lsrs	r3, r3, #16
  404906:	b2a6      	uxth	r6, r4
  404908:	fb05 6303 	mla	r3, r5, r3, r6
  40490c:	eb03 4312 	add.w	r3, r3, r2, lsr #16
  404910:	458e      	cmp	lr, r1
  404912:	ea4f 4213 	mov.w	r2, r3, lsr #16
  404916:	d8e8      	bhi.n	4048ea <__multiply+0xba>
  404918:	6003      	str	r3, [r0, #0]
  40491a:	f10c 0c04 	add.w	ip, ip, #4
  40491e:	45e2      	cmp	sl, ip
  404920:	f109 0904 	add.w	r9, r9, #4
  404924:	d8b7      	bhi.n	404896 <__multiply+0x66>
  404926:	f8dd a004 	ldr.w	sl, [sp, #4]
  40492a:	f1b8 0f00 	cmp.w	r8, #0
  40492e:	dd0b      	ble.n	404948 <__multiply+0x118>
  404930:	f85a 3c04 	ldr.w	r3, [sl, #-4]
  404934:	f1aa 0a04 	sub.w	sl, sl, #4
  404938:	b11b      	cbz	r3, 404942 <__multiply+0x112>
  40493a:	e005      	b.n	404948 <__multiply+0x118>
  40493c:	f85a 3d04 	ldr.w	r3, [sl, #-4]!
  404940:	b913      	cbnz	r3, 404948 <__multiply+0x118>
  404942:	f1b8 0801 	subs.w	r8, r8, #1
  404946:	d1f9      	bne.n	40493c <__multiply+0x10c>
  404948:	9800      	ldr	r0, [sp, #0]
  40494a:	f8c0 8010 	str.w	r8, [r0, #16]
  40494e:	b003      	add	sp, #12
  404950:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404954 <__pow5mult>:
  404954:	f012 0303 	ands.w	r3, r2, #3
  404958:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  40495c:	4614      	mov	r4, r2
  40495e:	4607      	mov	r7, r0
  404960:	d12e      	bne.n	4049c0 <__pow5mult+0x6c>
  404962:	460d      	mov	r5, r1
  404964:	10a4      	asrs	r4, r4, #2
  404966:	d01c      	beq.n	4049a2 <__pow5mult+0x4e>
  404968:	6cbe      	ldr	r6, [r7, #72]	; 0x48
  40496a:	b396      	cbz	r6, 4049d2 <__pow5mult+0x7e>
  40496c:	07e3      	lsls	r3, r4, #31
  40496e:	f04f 0800 	mov.w	r8, #0
  404972:	d406      	bmi.n	404982 <__pow5mult+0x2e>
  404974:	1064      	asrs	r4, r4, #1
  404976:	d014      	beq.n	4049a2 <__pow5mult+0x4e>
  404978:	6830      	ldr	r0, [r6, #0]
  40497a:	b1a8      	cbz	r0, 4049a8 <__pow5mult+0x54>
  40497c:	4606      	mov	r6, r0
  40497e:	07e3      	lsls	r3, r4, #31
  404980:	d5f8      	bpl.n	404974 <__pow5mult+0x20>
  404982:	4632      	mov	r2, r6
  404984:	4629      	mov	r1, r5
  404986:	4638      	mov	r0, r7
  404988:	f7ff ff52 	bl	404830 <__multiply>
  40498c:	b1b5      	cbz	r5, 4049bc <__pow5mult+0x68>
  40498e:	686a      	ldr	r2, [r5, #4]
  404990:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404992:	1064      	asrs	r4, r4, #1
  404994:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404998:	6029      	str	r1, [r5, #0]
  40499a:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
  40499e:	4605      	mov	r5, r0
  4049a0:	d1ea      	bne.n	404978 <__pow5mult+0x24>
  4049a2:	4628      	mov	r0, r5
  4049a4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  4049a8:	4632      	mov	r2, r6
  4049aa:	4631      	mov	r1, r6
  4049ac:	4638      	mov	r0, r7
  4049ae:	f7ff ff3f 	bl	404830 <__multiply>
  4049b2:	6030      	str	r0, [r6, #0]
  4049b4:	f8c0 8000 	str.w	r8, [r0]
  4049b8:	4606      	mov	r6, r0
  4049ba:	e7e0      	b.n	40497e <__pow5mult+0x2a>
  4049bc:	4605      	mov	r5, r0
  4049be:	e7d9      	b.n	404974 <__pow5mult+0x20>
  4049c0:	1e5a      	subs	r2, r3, #1
  4049c2:	4d0b      	ldr	r5, [pc, #44]	; (4049f0 <__pow5mult+0x9c>)
  4049c4:	2300      	movs	r3, #0
  4049c6:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
  4049ca:	f7ff fe97 	bl	4046fc <__multadd>
  4049ce:	4605      	mov	r5, r0
  4049d0:	e7c8      	b.n	404964 <__pow5mult+0x10>
  4049d2:	2101      	movs	r1, #1
  4049d4:	4638      	mov	r0, r7
  4049d6:	f7ff fe61 	bl	40469c <_Balloc>
  4049da:	f240 2171 	movw	r1, #625	; 0x271
  4049de:	2201      	movs	r2, #1
  4049e0:	2300      	movs	r3, #0
  4049e2:	6141      	str	r1, [r0, #20]
  4049e4:	6102      	str	r2, [r0, #16]
  4049e6:	4606      	mov	r6, r0
  4049e8:	64b8      	str	r0, [r7, #72]	; 0x48
  4049ea:	6003      	str	r3, [r0, #0]
  4049ec:	e7be      	b.n	40496c <__pow5mult+0x18>
  4049ee:	bf00      	nop
  4049f0:	00406b60 	.word	0x00406b60

004049f4 <__lshift>:
  4049f4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  4049f8:	4691      	mov	r9, r2
  4049fa:	690a      	ldr	r2, [r1, #16]
  4049fc:	688b      	ldr	r3, [r1, #8]
  4049fe:	ea4f 1469 	mov.w	r4, r9, asr #5
  404a02:	eb04 0802 	add.w	r8, r4, r2
  404a06:	f108 0501 	add.w	r5, r8, #1
  404a0a:	429d      	cmp	r5, r3
  404a0c:	460e      	mov	r6, r1
  404a0e:	4607      	mov	r7, r0
  404a10:	6849      	ldr	r1, [r1, #4]
  404a12:	dd04      	ble.n	404a1e <__lshift+0x2a>
  404a14:	005b      	lsls	r3, r3, #1
  404a16:	429d      	cmp	r5, r3
  404a18:	f101 0101 	add.w	r1, r1, #1
  404a1c:	dcfa      	bgt.n	404a14 <__lshift+0x20>
  404a1e:	4638      	mov	r0, r7
  404a20:	f7ff fe3c 	bl	40469c <_Balloc>
  404a24:	2c00      	cmp	r4, #0
  404a26:	f100 0314 	add.w	r3, r0, #20
  404a2a:	dd06      	ble.n	404a3a <__lshift+0x46>
  404a2c:	eb03 0284 	add.w	r2, r3, r4, lsl #2
  404a30:	2100      	movs	r1, #0
  404a32:	f843 1b04 	str.w	r1, [r3], #4
  404a36:	429a      	cmp	r2, r3
  404a38:	d1fb      	bne.n	404a32 <__lshift+0x3e>
  404a3a:	6934      	ldr	r4, [r6, #16]
  404a3c:	f106 0114 	add.w	r1, r6, #20
  404a40:	f019 091f 	ands.w	r9, r9, #31
  404a44:	eb01 0e84 	add.w	lr, r1, r4, lsl #2
  404a48:	d01d      	beq.n	404a86 <__lshift+0x92>
  404a4a:	f1c9 0c20 	rsb	ip, r9, #32
  404a4e:	2200      	movs	r2, #0
  404a50:	680c      	ldr	r4, [r1, #0]
  404a52:	fa04 f409 	lsl.w	r4, r4, r9
  404a56:	4314      	orrs	r4, r2
  404a58:	f843 4b04 	str.w	r4, [r3], #4
  404a5c:	f851 2b04 	ldr.w	r2, [r1], #4
  404a60:	458e      	cmp	lr, r1
  404a62:	fa22 f20c 	lsr.w	r2, r2, ip
  404a66:	d8f3      	bhi.n	404a50 <__lshift+0x5c>
  404a68:	601a      	str	r2, [r3, #0]
  404a6a:	b10a      	cbz	r2, 404a70 <__lshift+0x7c>
  404a6c:	f108 0502 	add.w	r5, r8, #2
  404a70:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
  404a72:	6872      	ldr	r2, [r6, #4]
  404a74:	3d01      	subs	r5, #1
  404a76:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
  404a7a:	6105      	str	r5, [r0, #16]
  404a7c:	6031      	str	r1, [r6, #0]
  404a7e:	f843 6022 	str.w	r6, [r3, r2, lsl #2]
  404a82:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404a86:	3b04      	subs	r3, #4
  404a88:	f851 2b04 	ldr.w	r2, [r1], #4
  404a8c:	f843 2f04 	str.w	r2, [r3, #4]!
  404a90:	458e      	cmp	lr, r1
  404a92:	d8f9      	bhi.n	404a88 <__lshift+0x94>
  404a94:	e7ec      	b.n	404a70 <__lshift+0x7c>
  404a96:	bf00      	nop

00404a98 <__mcmp>:
  404a98:	b430      	push	{r4, r5}
  404a9a:	690b      	ldr	r3, [r1, #16]
  404a9c:	4605      	mov	r5, r0
  404a9e:	6900      	ldr	r0, [r0, #16]
  404aa0:	1ac0      	subs	r0, r0, r3
  404aa2:	d10f      	bne.n	404ac4 <__mcmp+0x2c>
  404aa4:	009b      	lsls	r3, r3, #2
  404aa6:	3514      	adds	r5, #20
  404aa8:	3114      	adds	r1, #20
  404aaa:	4419      	add	r1, r3
  404aac:	442b      	add	r3, r5
  404aae:	e001      	b.n	404ab4 <__mcmp+0x1c>
  404ab0:	429d      	cmp	r5, r3
  404ab2:	d207      	bcs.n	404ac4 <__mcmp+0x2c>
  404ab4:	f853 4d04 	ldr.w	r4, [r3, #-4]!
  404ab8:	f851 2d04 	ldr.w	r2, [r1, #-4]!
  404abc:	4294      	cmp	r4, r2
  404abe:	d0f7      	beq.n	404ab0 <__mcmp+0x18>
  404ac0:	d302      	bcc.n	404ac8 <__mcmp+0x30>
  404ac2:	2001      	movs	r0, #1
  404ac4:	bc30      	pop	{r4, r5}
  404ac6:	4770      	bx	lr
  404ac8:	f04f 30ff 	mov.w	r0, #4294967295
  404acc:	e7fa      	b.n	404ac4 <__mcmp+0x2c>
  404ace:	bf00      	nop

00404ad0 <__mdiff>:
  404ad0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404ad4:	690f      	ldr	r7, [r1, #16]
  404ad6:	460e      	mov	r6, r1
  404ad8:	6911      	ldr	r1, [r2, #16]
  404ada:	1a7f      	subs	r7, r7, r1
  404adc:	2f00      	cmp	r7, #0
  404ade:	4690      	mov	r8, r2
  404ae0:	d117      	bne.n	404b12 <__mdiff+0x42>
  404ae2:	0089      	lsls	r1, r1, #2
  404ae4:	f106 0514 	add.w	r5, r6, #20
  404ae8:	f102 0e14 	add.w	lr, r2, #20
  404aec:	186b      	adds	r3, r5, r1
  404aee:	4471      	add	r1, lr
  404af0:	e001      	b.n	404af6 <__mdiff+0x26>
  404af2:	429d      	cmp	r5, r3
  404af4:	d25c      	bcs.n	404bb0 <__mdiff+0xe0>
  404af6:	f853 2d04 	ldr.w	r2, [r3, #-4]!
  404afa:	f851 4d04 	ldr.w	r4, [r1, #-4]!
  404afe:	42a2      	cmp	r2, r4
  404b00:	d0f7      	beq.n	404af2 <__mdiff+0x22>
  404b02:	d25e      	bcs.n	404bc2 <__mdiff+0xf2>
  404b04:	4633      	mov	r3, r6
  404b06:	462c      	mov	r4, r5
  404b08:	4646      	mov	r6, r8
  404b0a:	4675      	mov	r5, lr
  404b0c:	4698      	mov	r8, r3
  404b0e:	2701      	movs	r7, #1
  404b10:	e005      	b.n	404b1e <__mdiff+0x4e>
  404b12:	db58      	blt.n	404bc6 <__mdiff+0xf6>
  404b14:	f106 0514 	add.w	r5, r6, #20
  404b18:	f108 0414 	add.w	r4, r8, #20
  404b1c:	2700      	movs	r7, #0
  404b1e:	6871      	ldr	r1, [r6, #4]
  404b20:	f7ff fdbc 	bl	40469c <_Balloc>
  404b24:	f8d8 3010 	ldr.w	r3, [r8, #16]
  404b28:	6936      	ldr	r6, [r6, #16]
  404b2a:	60c7      	str	r7, [r0, #12]
  404b2c:	eb04 0c83 	add.w	ip, r4, r3, lsl #2
  404b30:	46a6      	mov	lr, r4
  404b32:	eb05 0786 	add.w	r7, r5, r6, lsl #2
  404b36:	f100 0414 	add.w	r4, r0, #20
  404b3a:	2300      	movs	r3, #0
  404b3c:	f85e 1b04 	ldr.w	r1, [lr], #4
  404b40:	f855 8b04 	ldr.w	r8, [r5], #4
  404b44:	b28a      	uxth	r2, r1
  404b46:	fa13 f388 	uxtah	r3, r3, r8
  404b4a:	0c09      	lsrs	r1, r1, #16
  404b4c:	1a9a      	subs	r2, r3, r2
  404b4e:	ebc1 4318 	rsb	r3, r1, r8, lsr #16
  404b52:	eb03 4322 	add.w	r3, r3, r2, asr #16
  404b56:	b292      	uxth	r2, r2
  404b58:	ea42 4203 	orr.w	r2, r2, r3, lsl #16
  404b5c:	45f4      	cmp	ip, lr
  404b5e:	f844 2b04 	str.w	r2, [r4], #4
  404b62:	ea4f 4323 	mov.w	r3, r3, asr #16
  404b66:	d8e9      	bhi.n	404b3c <__mdiff+0x6c>
  404b68:	42af      	cmp	r7, r5
  404b6a:	d917      	bls.n	404b9c <__mdiff+0xcc>
  404b6c:	46a4      	mov	ip, r4
  404b6e:	46ae      	mov	lr, r5
  404b70:	f85e 2b04 	ldr.w	r2, [lr], #4
  404b74:	fa13 f382 	uxtah	r3, r3, r2
  404b78:	1419      	asrs	r1, r3, #16
  404b7a:	eb01 4112 	add.w	r1, r1, r2, lsr #16
  404b7e:	b29b      	uxth	r3, r3
  404b80:	ea43 4201 	orr.w	r2, r3, r1, lsl #16
  404b84:	4577      	cmp	r7, lr
  404b86:	f84c 2b04 	str.w	r2, [ip], #4
  404b8a:	ea4f 4321 	mov.w	r3, r1, asr #16
  404b8e:	d8ef      	bhi.n	404b70 <__mdiff+0xa0>
  404b90:	43ed      	mvns	r5, r5
  404b92:	442f      	add	r7, r5
  404b94:	f027 0703 	bic.w	r7, r7, #3
  404b98:	3704      	adds	r7, #4
  404b9a:	443c      	add	r4, r7
  404b9c:	3c04      	subs	r4, #4
  404b9e:	b922      	cbnz	r2, 404baa <__mdiff+0xda>
  404ba0:	f854 3d04 	ldr.w	r3, [r4, #-4]!
  404ba4:	3e01      	subs	r6, #1
  404ba6:	2b00      	cmp	r3, #0
  404ba8:	d0fa      	beq.n	404ba0 <__mdiff+0xd0>
  404baa:	6106      	str	r6, [r0, #16]
  404bac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404bb0:	2100      	movs	r1, #0
  404bb2:	f7ff fd73 	bl	40469c <_Balloc>
  404bb6:	2201      	movs	r2, #1
  404bb8:	2300      	movs	r3, #0
  404bba:	6102      	str	r2, [r0, #16]
  404bbc:	6143      	str	r3, [r0, #20]
  404bbe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404bc2:	4674      	mov	r4, lr
  404bc4:	e7ab      	b.n	404b1e <__mdiff+0x4e>
  404bc6:	4633      	mov	r3, r6
  404bc8:	f106 0414 	add.w	r4, r6, #20
  404bcc:	f102 0514 	add.w	r5, r2, #20
  404bd0:	4616      	mov	r6, r2
  404bd2:	2701      	movs	r7, #1
  404bd4:	4698      	mov	r8, r3
  404bd6:	e7a2      	b.n	404b1e <__mdiff+0x4e>

00404bd8 <__d2b>:
  404bd8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  404bdc:	b082      	sub	sp, #8
  404bde:	2101      	movs	r1, #1
  404be0:	461c      	mov	r4, r3
  404be2:	f3c3 570a 	ubfx	r7, r3, #20, #11
  404be6:	4615      	mov	r5, r2
  404be8:	9e08      	ldr	r6, [sp, #32]
  404bea:	f7ff fd57 	bl	40469c <_Balloc>
  404bee:	f3c4 0413 	ubfx	r4, r4, #0, #20
  404bf2:	4680      	mov	r8, r0
  404bf4:	b10f      	cbz	r7, 404bfa <__d2b+0x22>
  404bf6:	f444 1480 	orr.w	r4, r4, #1048576	; 0x100000
  404bfa:	9401      	str	r4, [sp, #4]
  404bfc:	b31d      	cbz	r5, 404c46 <__d2b+0x6e>
  404bfe:	a802      	add	r0, sp, #8
  404c00:	f840 5d08 	str.w	r5, [r0, #-8]!
  404c04:	f7ff fdda 	bl	4047bc <__lo0bits>
  404c08:	2800      	cmp	r0, #0
  404c0a:	d134      	bne.n	404c76 <__d2b+0x9e>
  404c0c:	e89d 000c 	ldmia.w	sp, {r2, r3}
  404c10:	f8c8 2014 	str.w	r2, [r8, #20]
  404c14:	2b00      	cmp	r3, #0
  404c16:	bf0c      	ite	eq
  404c18:	2101      	moveq	r1, #1
  404c1a:	2102      	movne	r1, #2
  404c1c:	f8c8 3018 	str.w	r3, [r8, #24]
  404c20:	f8c8 1010 	str.w	r1, [r8, #16]
  404c24:	b9df      	cbnz	r7, 404c5e <__d2b+0x86>
  404c26:	eb08 0381 	add.w	r3, r8, r1, lsl #2
  404c2a:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
  404c2e:	6030      	str	r0, [r6, #0]
  404c30:	6918      	ldr	r0, [r3, #16]
  404c32:	f7ff fda3 	bl	40477c <__hi0bits>
  404c36:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404c38:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
  404c3c:	6018      	str	r0, [r3, #0]
  404c3e:	4640      	mov	r0, r8
  404c40:	b002      	add	sp, #8
  404c42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404c46:	a801      	add	r0, sp, #4
  404c48:	f7ff fdb8 	bl	4047bc <__lo0bits>
  404c4c:	9b01      	ldr	r3, [sp, #4]
  404c4e:	f8c8 3014 	str.w	r3, [r8, #20]
  404c52:	2101      	movs	r1, #1
  404c54:	3020      	adds	r0, #32
  404c56:	f8c8 1010 	str.w	r1, [r8, #16]
  404c5a:	2f00      	cmp	r7, #0
  404c5c:	d0e3      	beq.n	404c26 <__d2b+0x4e>
  404c5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
  404c60:	f2a7 4733 	subw	r7, r7, #1075	; 0x433
  404c64:	4407      	add	r7, r0
  404c66:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
  404c6a:	6037      	str	r7, [r6, #0]
  404c6c:	6018      	str	r0, [r3, #0]
  404c6e:	4640      	mov	r0, r8
  404c70:	b002      	add	sp, #8
  404c72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  404c76:	e89d 000a 	ldmia.w	sp, {r1, r3}
  404c7a:	f1c0 0220 	rsb	r2, r0, #32
  404c7e:	fa03 f202 	lsl.w	r2, r3, r2
  404c82:	430a      	orrs	r2, r1
  404c84:	40c3      	lsrs	r3, r0
  404c86:	9301      	str	r3, [sp, #4]
  404c88:	f8c8 2014 	str.w	r2, [r8, #20]
  404c8c:	e7c2      	b.n	404c14 <__d2b+0x3c>
  404c8e:	bf00      	nop

00404c90 <_sbrk_r>:
  404c90:	b538      	push	{r3, r4, r5, lr}
  404c92:	4c07      	ldr	r4, [pc, #28]	; (404cb0 <_sbrk_r+0x20>)
  404c94:	2300      	movs	r3, #0
  404c96:	4605      	mov	r5, r0
  404c98:	4608      	mov	r0, r1
  404c9a:	6023      	str	r3, [r4, #0]
  404c9c:	f7fc fba6 	bl	4013ec <_sbrk>
  404ca0:	1c43      	adds	r3, r0, #1
  404ca2:	d000      	beq.n	404ca6 <_sbrk_r+0x16>
  404ca4:	bd38      	pop	{r3, r4, r5, pc}
  404ca6:	6823      	ldr	r3, [r4, #0]
  404ca8:	2b00      	cmp	r3, #0
  404caa:	d0fb      	beq.n	404ca4 <_sbrk_r+0x14>
  404cac:	602b      	str	r3, [r5, #0]
  404cae:	bd38      	pop	{r3, r4, r5, pc}
  404cb0:	20400ccc 	.word	0x20400ccc
	...

00404cc0 <strlen>:
  404cc0:	f890 f000 	pld	[r0]
  404cc4:	e96d 4502 	strd	r4, r5, [sp, #-8]!
  404cc8:	f020 0107 	bic.w	r1, r0, #7
  404ccc:	f06f 0c00 	mvn.w	ip, #0
  404cd0:	f010 0407 	ands.w	r4, r0, #7
  404cd4:	f891 f020 	pld	[r1, #32]
  404cd8:	f040 8049 	bne.w	404d6e <strlen+0xae>
  404cdc:	f04f 0400 	mov.w	r4, #0
  404ce0:	f06f 0007 	mvn.w	r0, #7
  404ce4:	e9d1 2300 	ldrd	r2, r3, [r1]
  404ce8:	f891 f040 	pld	[r1, #64]	; 0x40
  404cec:	f100 0008 	add.w	r0, r0, #8
  404cf0:	fa82 f24c 	uadd8	r2, r2, ip
  404cf4:	faa4 f28c 	sel	r2, r4, ip
  404cf8:	fa83 f34c 	uadd8	r3, r3, ip
  404cfc:	faa2 f38c 	sel	r3, r2, ip
  404d00:	bb4b      	cbnz	r3, 404d56 <strlen+0x96>
  404d02:	e9d1 2302 	ldrd	r2, r3, [r1, #8]
  404d06:	fa82 f24c 	uadd8	r2, r2, ip
  404d0a:	f100 0008 	add.w	r0, r0, #8
  404d0e:	faa4 f28c 	sel	r2, r4, ip
  404d12:	fa83 f34c 	uadd8	r3, r3, ip
  404d16:	faa2 f38c 	sel	r3, r2, ip
  404d1a:	b9e3      	cbnz	r3, 404d56 <strlen+0x96>
  404d1c:	e9d1 2304 	ldrd	r2, r3, [r1, #16]
  404d20:	fa82 f24c 	uadd8	r2, r2, ip
  404d24:	f100 0008 	add.w	r0, r0, #8
  404d28:	faa4 f28c 	sel	r2, r4, ip
  404d2c:	fa83 f34c 	uadd8	r3, r3, ip
  404d30:	faa2 f38c 	sel	r3, r2, ip
  404d34:	b97b      	cbnz	r3, 404d56 <strlen+0x96>
  404d36:	e9d1 2306 	ldrd	r2, r3, [r1, #24]
  404d3a:	f101 0120 	add.w	r1, r1, #32
  404d3e:	fa82 f24c 	uadd8	r2, r2, ip
  404d42:	f100 0008 	add.w	r0, r0, #8
  404d46:	faa4 f28c 	sel	r2, r4, ip
  404d4a:	fa83 f34c 	uadd8	r3, r3, ip
  404d4e:	faa2 f38c 	sel	r3, r2, ip
  404d52:	2b00      	cmp	r3, #0
  404d54:	d0c6      	beq.n	404ce4 <strlen+0x24>
  404d56:	2a00      	cmp	r2, #0
  404d58:	bf04      	itt	eq
  404d5a:	3004      	addeq	r0, #4
  404d5c:	461a      	moveq	r2, r3
  404d5e:	ba12      	rev	r2, r2
  404d60:	fab2 f282 	clz	r2, r2
  404d64:	e8fd 4502 	ldrd	r4, r5, [sp], #8
  404d68:	eb00 00d2 	add.w	r0, r0, r2, lsr #3
  404d6c:	4770      	bx	lr
  404d6e:	e9d1 2300 	ldrd	r2, r3, [r1]
  404d72:	f004 0503 	and.w	r5, r4, #3
  404d76:	f1c4 0000 	rsb	r0, r4, #0
  404d7a:	ea4f 05c5 	mov.w	r5, r5, lsl #3
  404d7e:	f014 0f04 	tst.w	r4, #4
  404d82:	f891 f040 	pld	[r1, #64]	; 0x40
  404d86:	fa0c f505 	lsl.w	r5, ip, r5
  404d8a:	ea62 0205 	orn	r2, r2, r5
  404d8e:	bf1c      	itt	ne
  404d90:	ea63 0305 	ornne	r3, r3, r5
  404d94:	4662      	movne	r2, ip
  404d96:	f04f 0400 	mov.w	r4, #0
  404d9a:	e7a9      	b.n	404cf0 <strlen+0x30>

00404d9c <__ssprint_r>:
  404d9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  404da0:	6893      	ldr	r3, [r2, #8]
  404da2:	b083      	sub	sp, #12
  404da4:	4690      	mov	r8, r2
  404da6:	2b00      	cmp	r3, #0
  404da8:	d070      	beq.n	404e8c <__ssprint_r+0xf0>
  404daa:	4682      	mov	sl, r0
  404dac:	460c      	mov	r4, r1
  404dae:	6817      	ldr	r7, [r2, #0]
  404db0:	688d      	ldr	r5, [r1, #8]
  404db2:	6808      	ldr	r0, [r1, #0]
  404db4:	e042      	b.n	404e3c <__ssprint_r+0xa0>
  404db6:	89a3      	ldrh	r3, [r4, #12]
  404db8:	f413 6f90 	tst.w	r3, #1152	; 0x480
  404dbc:	d02e      	beq.n	404e1c <__ssprint_r+0x80>
  404dbe:	6965      	ldr	r5, [r4, #20]
  404dc0:	6921      	ldr	r1, [r4, #16]
  404dc2:	eb05 0545 	add.w	r5, r5, r5, lsl #1
  404dc6:	eba0 0b01 	sub.w	fp, r0, r1
  404dca:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
  404dce:	f10b 0001 	add.w	r0, fp, #1
  404dd2:	106d      	asrs	r5, r5, #1
  404dd4:	4430      	add	r0, r6
  404dd6:	42a8      	cmp	r0, r5
  404dd8:	462a      	mov	r2, r5
  404dda:	bf84      	itt	hi
  404ddc:	4605      	movhi	r5, r0
  404dde:	462a      	movhi	r2, r5
  404de0:	055b      	lsls	r3, r3, #21
  404de2:	d538      	bpl.n	404e56 <__ssprint_r+0xba>
  404de4:	4611      	mov	r1, r2
  404de6:	4650      	mov	r0, sl
  404de8:	f7ff f8b0 	bl	403f4c <_malloc_r>
  404dec:	2800      	cmp	r0, #0
  404dee:	d03c      	beq.n	404e6a <__ssprint_r+0xce>
  404df0:	465a      	mov	r2, fp
  404df2:	6921      	ldr	r1, [r4, #16]
  404df4:	9001      	str	r0, [sp, #4]
  404df6:	f7ff fbab 	bl	404550 <memcpy>
  404dfa:	89a2      	ldrh	r2, [r4, #12]
  404dfc:	9b01      	ldr	r3, [sp, #4]
  404dfe:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
  404e02:	f042 0280 	orr.w	r2, r2, #128	; 0x80
  404e06:	81a2      	strh	r2, [r4, #12]
  404e08:	eba5 020b 	sub.w	r2, r5, fp
  404e0c:	eb03 000b 	add.w	r0, r3, fp
  404e10:	6165      	str	r5, [r4, #20]
  404e12:	6123      	str	r3, [r4, #16]
  404e14:	6020      	str	r0, [r4, #0]
  404e16:	60a2      	str	r2, [r4, #8]
  404e18:	4635      	mov	r5, r6
  404e1a:	46b3      	mov	fp, r6
  404e1c:	465a      	mov	r2, fp
  404e1e:	4649      	mov	r1, r9
  404e20:	f000 fa18 	bl	405254 <memmove>
  404e24:	f8d8 3008 	ldr.w	r3, [r8, #8]
  404e28:	68a2      	ldr	r2, [r4, #8]
  404e2a:	6820      	ldr	r0, [r4, #0]
  404e2c:	1b55      	subs	r5, r2, r5
  404e2e:	4458      	add	r0, fp
  404e30:	1b9e      	subs	r6, r3, r6
  404e32:	60a5      	str	r5, [r4, #8]
  404e34:	6020      	str	r0, [r4, #0]
  404e36:	f8c8 6008 	str.w	r6, [r8, #8]
  404e3a:	b33e      	cbz	r6, 404e8c <__ssprint_r+0xf0>
  404e3c:	687e      	ldr	r6, [r7, #4]
  404e3e:	463b      	mov	r3, r7
  404e40:	3708      	adds	r7, #8
  404e42:	2e00      	cmp	r6, #0
  404e44:	d0fa      	beq.n	404e3c <__ssprint_r+0xa0>
  404e46:	42ae      	cmp	r6, r5
  404e48:	f8d3 9000 	ldr.w	r9, [r3]
  404e4c:	46ab      	mov	fp, r5
  404e4e:	d2b2      	bcs.n	404db6 <__ssprint_r+0x1a>
  404e50:	4635      	mov	r5, r6
  404e52:	46b3      	mov	fp, r6
  404e54:	e7e2      	b.n	404e1c <__ssprint_r+0x80>
  404e56:	4650      	mov	r0, sl
  404e58:	f000 fa60 	bl	40531c <_realloc_r>
  404e5c:	4603      	mov	r3, r0
  404e5e:	2800      	cmp	r0, #0
  404e60:	d1d2      	bne.n	404e08 <__ssprint_r+0x6c>
  404e62:	6921      	ldr	r1, [r4, #16]
  404e64:	4650      	mov	r0, sl
  404e66:	f000 f8f9 	bl	40505c <_free_r>
  404e6a:	230c      	movs	r3, #12
  404e6c:	f8ca 3000 	str.w	r3, [sl]
  404e70:	89a3      	ldrh	r3, [r4, #12]
  404e72:	2200      	movs	r2, #0
  404e74:	f043 0340 	orr.w	r3, r3, #64	; 0x40
  404e78:	f04f 30ff 	mov.w	r0, #4294967295
  404e7c:	81a3      	strh	r3, [r4, #12]
  404e7e:	f8c8 2008 	str.w	r2, [r8, #8]
  404e82:	f8c8 2004 	str.w	r2, [r8, #4]
  404e86:	b003      	add	sp, #12
  404e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  404e8c:	2000      	movs	r0, #0
  404e8e:	f8c8 0004 	str.w	r0, [r8, #4]
  404e92:	b003      	add	sp, #12
  404e94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

00404e98 <__register_exitproc>:
  404e98:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  404e9c:	4d2c      	ldr	r5, [pc, #176]	; (404f50 <__register_exitproc+0xb8>)
  404e9e:	4606      	mov	r6, r0
  404ea0:	6828      	ldr	r0, [r5, #0]
  404ea2:	4698      	mov	r8, r3
  404ea4:	460f      	mov	r7, r1
  404ea6:	4691      	mov	r9, r2
  404ea8:	f7ff f84c 	bl	403f44 <__retarget_lock_acquire_recursive>
  404eac:	4b29      	ldr	r3, [pc, #164]	; (404f54 <__register_exitproc+0xbc>)
  404eae:	681c      	ldr	r4, [r3, #0]
  404eb0:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
  404eb4:	2b00      	cmp	r3, #0
  404eb6:	d03e      	beq.n	404f36 <__register_exitproc+0x9e>
  404eb8:	685a      	ldr	r2, [r3, #4]
  404eba:	2a1f      	cmp	r2, #31
  404ebc:	dc1c      	bgt.n	404ef8 <__register_exitproc+0x60>
  404ebe:	f102 0e01 	add.w	lr, r2, #1
  404ec2:	b176      	cbz	r6, 404ee2 <__register_exitproc+0x4a>
  404ec4:	eb03 0182 	add.w	r1, r3, r2, lsl #2
  404ec8:	2401      	movs	r4, #1
  404eca:	f8c1 9088 	str.w	r9, [r1, #136]	; 0x88
  404ece:	f8d3 0188 	ldr.w	r0, [r3, #392]	; 0x188
  404ed2:	4094      	lsls	r4, r2
  404ed4:	4320      	orrs	r0, r4
  404ed6:	2e02      	cmp	r6, #2
  404ed8:	f8c3 0188 	str.w	r0, [r3, #392]	; 0x188
  404edc:	f8c1 8108 	str.w	r8, [r1, #264]	; 0x108
  404ee0:	d023      	beq.n	404f2a <__register_exitproc+0x92>
  404ee2:	3202      	adds	r2, #2
  404ee4:	f8c3 e004 	str.w	lr, [r3, #4]
  404ee8:	6828      	ldr	r0, [r5, #0]
  404eea:	f843 7022 	str.w	r7, [r3, r2, lsl #2]
  404eee:	f7ff f82b 	bl	403f48 <__retarget_lock_release_recursive>
  404ef2:	2000      	movs	r0, #0
  404ef4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404ef8:	4b17      	ldr	r3, [pc, #92]	; (404f58 <__register_exitproc+0xc0>)
  404efa:	b30b      	cbz	r3, 404f40 <__register_exitproc+0xa8>
  404efc:	f44f 70c8 	mov.w	r0, #400	; 0x190
  404f00:	f3af 8000 	nop.w
  404f04:	4603      	mov	r3, r0
  404f06:	b1d8      	cbz	r0, 404f40 <__register_exitproc+0xa8>
  404f08:	f8d4 2148 	ldr.w	r2, [r4, #328]	; 0x148
  404f0c:	6002      	str	r2, [r0, #0]
  404f0e:	2100      	movs	r1, #0
  404f10:	6041      	str	r1, [r0, #4]
  404f12:	460a      	mov	r2, r1
  404f14:	f8c4 0148 	str.w	r0, [r4, #328]	; 0x148
  404f18:	f04f 0e01 	mov.w	lr, #1
  404f1c:	f8c0 1188 	str.w	r1, [r0, #392]	; 0x188
  404f20:	f8c0 118c 	str.w	r1, [r0, #396]	; 0x18c
  404f24:	2e00      	cmp	r6, #0
  404f26:	d0dc      	beq.n	404ee2 <__register_exitproc+0x4a>
  404f28:	e7cc      	b.n	404ec4 <__register_exitproc+0x2c>
  404f2a:	f8d3 118c 	ldr.w	r1, [r3, #396]	; 0x18c
  404f2e:	430c      	orrs	r4, r1
  404f30:	f8c3 418c 	str.w	r4, [r3, #396]	; 0x18c
  404f34:	e7d5      	b.n	404ee2 <__register_exitproc+0x4a>
  404f36:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
  404f3a:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
  404f3e:	e7bb      	b.n	404eb8 <__register_exitproc+0x20>
  404f40:	6828      	ldr	r0, [r5, #0]
  404f42:	f7ff f801 	bl	403f48 <__retarget_lock_release_recursive>
  404f46:	f04f 30ff 	mov.w	r0, #4294967295
  404f4a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
  404f4e:	bf00      	nop
  404f50:	20400450 	.word	0x20400450
  404f54:	004069f4 	.word	0x004069f4
  404f58:	00000000 	.word	0x00000000

00404f5c <_calloc_r>:
  404f5c:	b510      	push	{r4, lr}
  404f5e:	fb02 f101 	mul.w	r1, r2, r1
  404f62:	f7fe fff3 	bl	403f4c <_malloc_r>
  404f66:	4604      	mov	r4, r0
  404f68:	b1d8      	cbz	r0, 404fa2 <_calloc_r+0x46>
  404f6a:	f850 2c04 	ldr.w	r2, [r0, #-4]
  404f6e:	f022 0203 	bic.w	r2, r2, #3
  404f72:	3a04      	subs	r2, #4
  404f74:	2a24      	cmp	r2, #36	; 0x24
  404f76:	d818      	bhi.n	404faa <_calloc_r+0x4e>
  404f78:	2a13      	cmp	r2, #19
  404f7a:	d914      	bls.n	404fa6 <_calloc_r+0x4a>
  404f7c:	2300      	movs	r3, #0
  404f7e:	2a1b      	cmp	r2, #27
  404f80:	6003      	str	r3, [r0, #0]
  404f82:	6043      	str	r3, [r0, #4]
  404f84:	d916      	bls.n	404fb4 <_calloc_r+0x58>
  404f86:	2a24      	cmp	r2, #36	; 0x24
  404f88:	6083      	str	r3, [r0, #8]
  404f8a:	60c3      	str	r3, [r0, #12]
  404f8c:	bf11      	iteee	ne
  404f8e:	f100 0210 	addne.w	r2, r0, #16
  404f92:	6103      	streq	r3, [r0, #16]
  404f94:	6143      	streq	r3, [r0, #20]
  404f96:	f100 0218 	addeq.w	r2, r0, #24
  404f9a:	2300      	movs	r3, #0
  404f9c:	6013      	str	r3, [r2, #0]
  404f9e:	6053      	str	r3, [r2, #4]
  404fa0:	6093      	str	r3, [r2, #8]
  404fa2:	4620      	mov	r0, r4
  404fa4:	bd10      	pop	{r4, pc}
  404fa6:	4602      	mov	r2, r0
  404fa8:	e7f7      	b.n	404f9a <_calloc_r+0x3e>
  404faa:	2100      	movs	r1, #0
  404fac:	f7fc fd30 	bl	401a10 <memset>
  404fb0:	4620      	mov	r0, r4
  404fb2:	bd10      	pop	{r4, pc}
  404fb4:	f100 0208 	add.w	r2, r0, #8
  404fb8:	e7ef      	b.n	404f9a <_calloc_r+0x3e>
  404fba:	bf00      	nop

00404fbc <_malloc_trim_r>:
  404fbc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  404fbe:	4f24      	ldr	r7, [pc, #144]	; (405050 <_malloc_trim_r+0x94>)
  404fc0:	460c      	mov	r4, r1
  404fc2:	4606      	mov	r6, r0
  404fc4:	f7ff fb5e 	bl	404684 <__malloc_lock>
  404fc8:	68bb      	ldr	r3, [r7, #8]
  404fca:	685d      	ldr	r5, [r3, #4]
  404fcc:	f5c4 617e 	rsb	r1, r4, #4064	; 0xfe0
  404fd0:	310f      	adds	r1, #15
  404fd2:	f025 0503 	bic.w	r5, r5, #3
  404fd6:	4429      	add	r1, r5
  404fd8:	f421 617f 	bic.w	r1, r1, #4080	; 0xff0
  404fdc:	f021 010f 	bic.w	r1, r1, #15
  404fe0:	f5a1 5480 	sub.w	r4, r1, #4096	; 0x1000
  404fe4:	f5b4 5f80 	cmp.w	r4, #4096	; 0x1000
  404fe8:	db07      	blt.n	404ffa <_malloc_trim_r+0x3e>
  404fea:	2100      	movs	r1, #0
  404fec:	4630      	mov	r0, r6
  404fee:	f7ff fe4f 	bl	404c90 <_sbrk_r>
  404ff2:	68bb      	ldr	r3, [r7, #8]
  404ff4:	442b      	add	r3, r5
  404ff6:	4298      	cmp	r0, r3
  404ff8:	d004      	beq.n	405004 <_malloc_trim_r+0x48>
  404ffa:	4630      	mov	r0, r6
  404ffc:	f7ff fb48 	bl	404690 <__malloc_unlock>
  405000:	2000      	movs	r0, #0
  405002:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  405004:	4261      	negs	r1, r4
  405006:	4630      	mov	r0, r6
  405008:	f7ff fe42 	bl	404c90 <_sbrk_r>
  40500c:	3001      	adds	r0, #1
  40500e:	d00d      	beq.n	40502c <_malloc_trim_r+0x70>
  405010:	4b10      	ldr	r3, [pc, #64]	; (405054 <_malloc_trim_r+0x98>)
  405012:	68ba      	ldr	r2, [r7, #8]
  405014:	6819      	ldr	r1, [r3, #0]
  405016:	1b2d      	subs	r5, r5, r4
  405018:	f045 0501 	orr.w	r5, r5, #1
  40501c:	4630      	mov	r0, r6
  40501e:	1b09      	subs	r1, r1, r4
  405020:	6055      	str	r5, [r2, #4]
  405022:	6019      	str	r1, [r3, #0]
  405024:	f7ff fb34 	bl	404690 <__malloc_unlock>
  405028:	2001      	movs	r0, #1
  40502a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
  40502c:	2100      	movs	r1, #0
  40502e:	4630      	mov	r0, r6
  405030:	f7ff fe2e 	bl	404c90 <_sbrk_r>
  405034:	68ba      	ldr	r2, [r7, #8]
  405036:	1a83      	subs	r3, r0, r2
  405038:	2b0f      	cmp	r3, #15
  40503a:	ddde      	ble.n	404ffa <_malloc_trim_r+0x3e>
  40503c:	4c06      	ldr	r4, [pc, #24]	; (405058 <_malloc_trim_r+0x9c>)
  40503e:	4905      	ldr	r1, [pc, #20]	; (405054 <_malloc_trim_r+0x98>)
  405040:	6824      	ldr	r4, [r4, #0]
  405042:	f043 0301 	orr.w	r3, r3, #1
  405046:	1b00      	subs	r0, r0, r4
  405048:	6053      	str	r3, [r2, #4]
  40504a:	6008      	str	r0, [r1, #0]
  40504c:	e7d5      	b.n	404ffa <_malloc_trim_r+0x3e>
  40504e:	bf00      	nop
  405050:	20400454 	.word	0x20400454
  405054:	20400c70 	.word	0x20400c70
  405058:	2040085c 	.word	0x2040085c

0040505c <_free_r>:
  40505c:	2900      	cmp	r1, #0
  40505e:	d044      	beq.n	4050ea <_free_r+0x8e>
  405060:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  405064:	460d      	mov	r5, r1
  405066:	4680      	mov	r8, r0
  405068:	f7ff fb0c 	bl	404684 <__malloc_lock>
  40506c:	f855 7c04 	ldr.w	r7, [r5, #-4]
  405070:	4969      	ldr	r1, [pc, #420]	; (405218 <_free_r+0x1bc>)
  405072:	f027 0301 	bic.w	r3, r7, #1
  405076:	f1a5 0408 	sub.w	r4, r5, #8
  40507a:	18e2      	adds	r2, r4, r3
  40507c:	688e      	ldr	r6, [r1, #8]
  40507e:	6850      	ldr	r0, [r2, #4]
  405080:	42b2      	cmp	r2, r6
  405082:	f020 0003 	bic.w	r0, r0, #3
  405086:	d05e      	beq.n	405146 <_free_r+0xea>
  405088:	07fe      	lsls	r6, r7, #31
  40508a:	6050      	str	r0, [r2, #4]
  40508c:	d40b      	bmi.n	4050a6 <_free_r+0x4a>
  40508e:	f855 7c08 	ldr.w	r7, [r5, #-8]
  405092:	1be4      	subs	r4, r4, r7
  405094:	f101 0e08 	add.w	lr, r1, #8
  405098:	68a5      	ldr	r5, [r4, #8]
  40509a:	4575      	cmp	r5, lr
  40509c:	443b      	add	r3, r7
  40509e:	d06d      	beq.n	40517c <_free_r+0x120>
  4050a0:	68e7      	ldr	r7, [r4, #12]
  4050a2:	60ef      	str	r7, [r5, #12]
  4050a4:	60bd      	str	r5, [r7, #8]
  4050a6:	1815      	adds	r5, r2, r0
  4050a8:	686d      	ldr	r5, [r5, #4]
  4050aa:	07ed      	lsls	r5, r5, #31
  4050ac:	d53e      	bpl.n	40512c <_free_r+0xd0>
  4050ae:	f043 0201 	orr.w	r2, r3, #1
  4050b2:	6062      	str	r2, [r4, #4]
  4050b4:	50e3      	str	r3, [r4, r3]
  4050b6:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
  4050ba:	d217      	bcs.n	4050ec <_free_r+0x90>
  4050bc:	08db      	lsrs	r3, r3, #3
  4050be:	1c58      	adds	r0, r3, #1
  4050c0:	109a      	asrs	r2, r3, #2
  4050c2:	684d      	ldr	r5, [r1, #4]
  4050c4:	f851 7030 	ldr.w	r7, [r1, r0, lsl #3]
  4050c8:	60a7      	str	r7, [r4, #8]
  4050ca:	2301      	movs	r3, #1
  4050cc:	4093      	lsls	r3, r2
  4050ce:	eb01 02c0 	add.w	r2, r1, r0, lsl #3
  4050d2:	432b      	orrs	r3, r5
  4050d4:	3a08      	subs	r2, #8
  4050d6:	60e2      	str	r2, [r4, #12]
  4050d8:	604b      	str	r3, [r1, #4]
  4050da:	f841 4030 	str.w	r4, [r1, r0, lsl #3]
  4050de:	60fc      	str	r4, [r7, #12]
  4050e0:	4640      	mov	r0, r8
  4050e2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  4050e6:	f7ff bad3 	b.w	404690 <__malloc_unlock>
  4050ea:	4770      	bx	lr
  4050ec:	0a5a      	lsrs	r2, r3, #9
  4050ee:	2a04      	cmp	r2, #4
  4050f0:	d852      	bhi.n	405198 <_free_r+0x13c>
  4050f2:	099a      	lsrs	r2, r3, #6
  4050f4:	f102 0739 	add.w	r7, r2, #57	; 0x39
  4050f8:	00ff      	lsls	r7, r7, #3
  4050fa:	f102 0538 	add.w	r5, r2, #56	; 0x38
  4050fe:	19c8      	adds	r0, r1, r7
  405100:	59ca      	ldr	r2, [r1, r7]
  405102:	3808      	subs	r0, #8
  405104:	4290      	cmp	r0, r2
  405106:	d04f      	beq.n	4051a8 <_free_r+0x14c>
  405108:	6851      	ldr	r1, [r2, #4]
  40510a:	f021 0103 	bic.w	r1, r1, #3
  40510e:	428b      	cmp	r3, r1
  405110:	d232      	bcs.n	405178 <_free_r+0x11c>
  405112:	6892      	ldr	r2, [r2, #8]
  405114:	4290      	cmp	r0, r2
  405116:	d1f7      	bne.n	405108 <_free_r+0xac>
  405118:	68c3      	ldr	r3, [r0, #12]
  40511a:	60a0      	str	r0, [r4, #8]
  40511c:	60e3      	str	r3, [r4, #12]
  40511e:	609c      	str	r4, [r3, #8]
  405120:	60c4      	str	r4, [r0, #12]
  405122:	4640      	mov	r0, r8
  405124:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
  405128:	f7ff bab2 	b.w	404690 <__malloc_unlock>
  40512c:	6895      	ldr	r5, [r2, #8]
  40512e:	4f3b      	ldr	r7, [pc, #236]	; (40521c <_free_r+0x1c0>)
  405130:	42bd      	cmp	r5, r7
  405132:	4403      	add	r3, r0
  405134:	d040      	beq.n	4051b8 <_free_r+0x15c>
  405136:	68d0      	ldr	r0, [r2, #12]
  405138:	60e8      	str	r0, [r5, #12]
  40513a:	f043 0201 	orr.w	r2, r3, #1
  40513e:	6085      	str	r5, [r0, #8]
  405140:	6062      	str	r2, [r4, #4]
  405142:	50e3      	str	r3, [r4, r3]
  405144:	e7b7      	b.n	4050b6 <_free_r+0x5a>
  405146:	07ff      	lsls	r7, r7, #31
  405148:	4403      	add	r3, r0
  40514a:	d407      	bmi.n	40515c <_free_r+0x100>
  40514c:	f855 2c08 	ldr.w	r2, [r5, #-8]
  405150:	1aa4      	subs	r4, r4, r2
  405152:	4413      	add	r3, r2
  405154:	68a0      	ldr	r0, [r4, #8]
  405156:	68e2      	ldr	r2, [r4, #12]
  405158:	60c2      	str	r2, [r0, #12]
  40515a:	6090      	str	r0, [r2, #8]
  40515c:	4a30      	ldr	r2, [pc, #192]	; (405220 <_free_r+0x1c4>)
  40515e:	6812      	ldr	r2, [r2, #0]
  405160:	f043 0001 	orr.w	r0, r3, #1
  405164:	4293      	cmp	r3, r2
  405166:	6060      	str	r0, [r4, #4]
  405168:	608c      	str	r4, [r1, #8]
  40516a:	d3b9      	bcc.n	4050e0 <_free_r+0x84>
  40516c:	4b2d      	ldr	r3, [pc, #180]	; (405224 <_free_r+0x1c8>)
  40516e:	4640      	mov	r0, r8
  405170:	6819      	ldr	r1, [r3, #0]
  405172:	f7ff ff23 	bl	404fbc <_malloc_trim_r>
  405176:	e7b3      	b.n	4050e0 <_free_r+0x84>
  405178:	4610      	mov	r0, r2
  40517a:	e7cd      	b.n	405118 <_free_r+0xbc>
  40517c:	1811      	adds	r1, r2, r0
  40517e:	6849      	ldr	r1, [r1, #4]
  405180:	07c9      	lsls	r1, r1, #31
  405182:	d444      	bmi.n	40520e <_free_r+0x1b2>
  405184:	6891      	ldr	r1, [r2, #8]
  405186:	68d2      	ldr	r2, [r2, #12]
  405188:	60ca      	str	r2, [r1, #12]
  40518a:	4403      	add	r3, r0
  40518c:	f043 0001 	orr.w	r0, r3, #1
  405190:	6091      	str	r1, [r2, #8]
  405192:	6060      	str	r0, [r4, #4]
  405194:	50e3      	str	r3, [r4, r3]
  405196:	e7a3      	b.n	4050e0 <_free_r+0x84>
  405198:	2a14      	cmp	r2, #20
  40519a:	d816      	bhi.n	4051ca <_free_r+0x16e>
  40519c:	f102 075c 	add.w	r7, r2, #92	; 0x5c
  4051a0:	00ff      	lsls	r7, r7, #3
  4051a2:	f102 055b 	add.w	r5, r2, #91	; 0x5b
  4051a6:	e7aa      	b.n	4050fe <_free_r+0xa2>
  4051a8:	10aa      	asrs	r2, r5, #2
  4051aa:	2301      	movs	r3, #1
  4051ac:	684d      	ldr	r5, [r1, #4]
  4051ae:	4093      	lsls	r3, r2
  4051b0:	432b      	orrs	r3, r5
  4051b2:	604b      	str	r3, [r1, #4]
  4051b4:	4603      	mov	r3, r0
  4051b6:	e7b0      	b.n	40511a <_free_r+0xbe>
  4051b8:	f043 0201 	orr.w	r2, r3, #1
  4051bc:	614c      	str	r4, [r1, #20]
  4051be:	610c      	str	r4, [r1, #16]
  4051c0:	60e5      	str	r5, [r4, #12]
  4051c2:	60a5      	str	r5, [r4, #8]
  4051c4:	6062      	str	r2, [r4, #4]
  4051c6:	50e3      	str	r3, [r4, r3]
  4051c8:	e78a      	b.n	4050e0 <_free_r+0x84>
  4051ca:	2a54      	cmp	r2, #84	; 0x54
  4051cc:	d806      	bhi.n	4051dc <_free_r+0x180>
  4051ce:	0b1a      	lsrs	r2, r3, #12
  4051d0:	f102 076f 	add.w	r7, r2, #111	; 0x6f
  4051d4:	00ff      	lsls	r7, r7, #3
  4051d6:	f102 056e 	add.w	r5, r2, #110	; 0x6e
  4051da:	e790      	b.n	4050fe <_free_r+0xa2>
  4051dc:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
  4051e0:	d806      	bhi.n	4051f0 <_free_r+0x194>
  4051e2:	0bda      	lsrs	r2, r3, #15
  4051e4:	f102 0778 	add.w	r7, r2, #120	; 0x78
  4051e8:	00ff      	lsls	r7, r7, #3
  4051ea:	f102 0577 	add.w	r5, r2, #119	; 0x77
  4051ee:	e786      	b.n	4050fe <_free_r+0xa2>
  4051f0:	f240 5054 	movw	r0, #1364	; 0x554
  4051f4:	4282      	cmp	r2, r0
  4051f6:	d806      	bhi.n	405206 <_free_r+0x1aa>
  4051f8:	0c9a      	lsrs	r2, r3, #18
  4051fa:	f102 077d 	add.w	r7, r2, #125	; 0x7d
  4051fe:	00ff      	lsls	r7, r7, #3
  405200:	f102 057c 	add.w	r5, r2, #124	; 0x7c
  405204:	e77b      	b.n	4050fe <_free_r+0xa2>
  405206:	f44f 777e 	mov.w	r7, #1016	; 0x3f8
  40520a:	257e      	movs	r5, #126	; 0x7e
  40520c:	e777      	b.n	4050fe <_free_r+0xa2>
  40520e:	f043 0101 	orr.w	r1, r3, #1
  405212:	6061      	str	r1, [r4, #4]
  405214:	6013      	str	r3, [r2, #0]
  405216:	e763      	b.n	4050e0 <_free_r+0x84>
  405218:	20400454 	.word	0x20400454
  40521c:	2040045c 	.word	0x2040045c
  405220:	20400860 	.word	0x20400860
  405224:	20400ca0 	.word	0x20400ca0

00405228 <__ascii_mbtowc>:
  405228:	b082      	sub	sp, #8
  40522a:	b149      	cbz	r1, 405240 <__ascii_mbtowc+0x18>
  40522c:	b15a      	cbz	r2, 405246 <__ascii_mbtowc+0x1e>
  40522e:	b16b      	cbz	r3, 40524c <__ascii_mbtowc+0x24>
  405230:	7813      	ldrb	r3, [r2, #0]
  405232:	600b      	str	r3, [r1, #0]
  405234:	7812      	ldrb	r2, [r2, #0]
  405236:	1c10      	adds	r0, r2, #0
  405238:	bf18      	it	ne
  40523a:	2001      	movne	r0, #1
  40523c:	b002      	add	sp, #8
  40523e:	4770      	bx	lr
  405240:	a901      	add	r1, sp, #4
  405242:	2a00      	cmp	r2, #0
  405244:	d1f3      	bne.n	40522e <__ascii_mbtowc+0x6>
  405246:	4610      	mov	r0, r2
  405248:	b002      	add	sp, #8
  40524a:	4770      	bx	lr
  40524c:	f06f 0001 	mvn.w	r0, #1
  405250:	e7f4      	b.n	40523c <__ascii_mbtowc+0x14>
  405252:	bf00      	nop

00405254 <memmove>:
  405254:	4288      	cmp	r0, r1
  405256:	b5f0      	push	{r4, r5, r6, r7, lr}
  405258:	d90d      	bls.n	405276 <memmove+0x22>
  40525a:	188b      	adds	r3, r1, r2
  40525c:	4298      	cmp	r0, r3
  40525e:	d20a      	bcs.n	405276 <memmove+0x22>
  405260:	1884      	adds	r4, r0, r2
  405262:	2a00      	cmp	r2, #0
  405264:	d051      	beq.n	40530a <memmove+0xb6>
  405266:	4622      	mov	r2, r4
  405268:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
  40526c:	f802 4d01 	strb.w	r4, [r2, #-1]!
  405270:	4299      	cmp	r1, r3
  405272:	d1f9      	bne.n	405268 <memmove+0x14>
  405274:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405276:	2a0f      	cmp	r2, #15
  405278:	d948      	bls.n	40530c <memmove+0xb8>
  40527a:	ea41 0300 	orr.w	r3, r1, r0
  40527e:	079b      	lsls	r3, r3, #30
  405280:	d146      	bne.n	405310 <memmove+0xbc>
  405282:	f100 0410 	add.w	r4, r0, #16
  405286:	f101 0310 	add.w	r3, r1, #16
  40528a:	4615      	mov	r5, r2
  40528c:	f853 6c10 	ldr.w	r6, [r3, #-16]
  405290:	f844 6c10 	str.w	r6, [r4, #-16]
  405294:	f853 6c0c 	ldr.w	r6, [r3, #-12]
  405298:	f844 6c0c 	str.w	r6, [r4, #-12]
  40529c:	f853 6c08 	ldr.w	r6, [r3, #-8]
  4052a0:	f844 6c08 	str.w	r6, [r4, #-8]
  4052a4:	3d10      	subs	r5, #16
  4052a6:	f853 6c04 	ldr.w	r6, [r3, #-4]
  4052aa:	f844 6c04 	str.w	r6, [r4, #-4]
  4052ae:	2d0f      	cmp	r5, #15
  4052b0:	f103 0310 	add.w	r3, r3, #16
  4052b4:	f104 0410 	add.w	r4, r4, #16
  4052b8:	d8e8      	bhi.n	40528c <memmove+0x38>
  4052ba:	f1a2 0310 	sub.w	r3, r2, #16
  4052be:	f023 030f 	bic.w	r3, r3, #15
  4052c2:	f002 0e0f 	and.w	lr, r2, #15
  4052c6:	3310      	adds	r3, #16
  4052c8:	f1be 0f03 	cmp.w	lr, #3
  4052cc:	4419      	add	r1, r3
  4052ce:	4403      	add	r3, r0
  4052d0:	d921      	bls.n	405316 <memmove+0xc2>
  4052d2:	1f1e      	subs	r6, r3, #4
  4052d4:	460d      	mov	r5, r1
  4052d6:	4674      	mov	r4, lr
  4052d8:	3c04      	subs	r4, #4
  4052da:	f855 7b04 	ldr.w	r7, [r5], #4
  4052de:	f846 7f04 	str.w	r7, [r6, #4]!
  4052e2:	2c03      	cmp	r4, #3
  4052e4:	d8f8      	bhi.n	4052d8 <memmove+0x84>
  4052e6:	f1ae 0404 	sub.w	r4, lr, #4
  4052ea:	f024 0403 	bic.w	r4, r4, #3
  4052ee:	3404      	adds	r4, #4
  4052f0:	4421      	add	r1, r4
  4052f2:	4423      	add	r3, r4
  4052f4:	f002 0203 	and.w	r2, r2, #3
  4052f8:	b162      	cbz	r2, 405314 <memmove+0xc0>
  4052fa:	3b01      	subs	r3, #1
  4052fc:	440a      	add	r2, r1
  4052fe:	f811 4b01 	ldrb.w	r4, [r1], #1
  405302:	f803 4f01 	strb.w	r4, [r3, #1]!
  405306:	428a      	cmp	r2, r1
  405308:	d1f9      	bne.n	4052fe <memmove+0xaa>
  40530a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  40530c:	4603      	mov	r3, r0
  40530e:	e7f3      	b.n	4052f8 <memmove+0xa4>
  405310:	4603      	mov	r3, r0
  405312:	e7f2      	b.n	4052fa <memmove+0xa6>
  405314:	bdf0      	pop	{r4, r5, r6, r7, pc}
  405316:	4672      	mov	r2, lr
  405318:	e7ee      	b.n	4052f8 <memmove+0xa4>
  40531a:	bf00      	nop

0040531c <_realloc_r>:
  40531c:	2900      	cmp	r1, #0
  40531e:	f000 8095 	beq.w	40544c <_realloc_r+0x130>
  405322:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  405326:	460d      	mov	r5, r1
  405328:	4616      	mov	r6, r2
  40532a:	b083      	sub	sp, #12
  40532c:	4680      	mov	r8, r0
  40532e:	f106 070b 	add.w	r7, r6, #11
  405332:	f7ff f9a7 	bl	404684 <__malloc_lock>
  405336:	f855 ec04 	ldr.w	lr, [r5, #-4]
  40533a:	2f16      	cmp	r7, #22
  40533c:	f02e 0403 	bic.w	r4, lr, #3
  405340:	f1a5 0908 	sub.w	r9, r5, #8
  405344:	d83c      	bhi.n	4053c0 <_realloc_r+0xa4>
  405346:	2210      	movs	r2, #16
  405348:	4617      	mov	r7, r2
  40534a:	42be      	cmp	r6, r7
  40534c:	d83d      	bhi.n	4053ca <_realloc_r+0xae>
  40534e:	4294      	cmp	r4, r2
  405350:	da43      	bge.n	4053da <_realloc_r+0xbe>
  405352:	4bc4      	ldr	r3, [pc, #784]	; (405664 <_realloc_r+0x348>)
  405354:	6899      	ldr	r1, [r3, #8]
  405356:	eb09 0004 	add.w	r0, r9, r4
  40535a:	4288      	cmp	r0, r1
  40535c:	f000 80b4 	beq.w	4054c8 <_realloc_r+0x1ac>
  405360:	6843      	ldr	r3, [r0, #4]
  405362:	f023 0101 	bic.w	r1, r3, #1
  405366:	4401      	add	r1, r0
  405368:	6849      	ldr	r1, [r1, #4]
  40536a:	07c9      	lsls	r1, r1, #31
  40536c:	d54c      	bpl.n	405408 <_realloc_r+0xec>
  40536e:	f01e 0f01 	tst.w	lr, #1
  405372:	f000 809b 	beq.w	4054ac <_realloc_r+0x190>
  405376:	4631      	mov	r1, r6
  405378:	4640      	mov	r0, r8
  40537a:	f7fe fde7 	bl	403f4c <_malloc_r>
  40537e:	4606      	mov	r6, r0
  405380:	2800      	cmp	r0, #0
  405382:	d03a      	beq.n	4053fa <_realloc_r+0xde>
  405384:	f855 3c04 	ldr.w	r3, [r5, #-4]
  405388:	f023 0301 	bic.w	r3, r3, #1
  40538c:	444b      	add	r3, r9
  40538e:	f1a0 0208 	sub.w	r2, r0, #8
  405392:	429a      	cmp	r2, r3
  405394:	f000 8121 	beq.w	4055da <_realloc_r+0x2be>
  405398:	1f22      	subs	r2, r4, #4
  40539a:	2a24      	cmp	r2, #36	; 0x24
  40539c:	f200 8107 	bhi.w	4055ae <_realloc_r+0x292>
  4053a0:	2a13      	cmp	r2, #19
  4053a2:	f200 80db 	bhi.w	40555c <_realloc_r+0x240>
  4053a6:	4603      	mov	r3, r0
  4053a8:	462a      	mov	r2, r5
  4053aa:	6811      	ldr	r1, [r2, #0]
  4053ac:	6019      	str	r1, [r3, #0]
  4053ae:	6851      	ldr	r1, [r2, #4]
  4053b0:	6059      	str	r1, [r3, #4]
  4053b2:	6892      	ldr	r2, [r2, #8]
  4053b4:	609a      	str	r2, [r3, #8]
  4053b6:	4629      	mov	r1, r5
  4053b8:	4640      	mov	r0, r8
  4053ba:	f7ff fe4f 	bl	40505c <_free_r>
  4053be:	e01c      	b.n	4053fa <_realloc_r+0xde>
  4053c0:	f027 0707 	bic.w	r7, r7, #7
  4053c4:	2f00      	cmp	r7, #0
  4053c6:	463a      	mov	r2, r7
  4053c8:	dabf      	bge.n	40534a <_realloc_r+0x2e>
  4053ca:	2600      	movs	r6, #0
  4053cc:	230c      	movs	r3, #12
  4053ce:	4630      	mov	r0, r6
  4053d0:	f8c8 3000 	str.w	r3, [r8]
  4053d4:	b003      	add	sp, #12
  4053d6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  4053da:	462e      	mov	r6, r5
  4053dc:	1be3      	subs	r3, r4, r7
  4053de:	2b0f      	cmp	r3, #15
  4053e0:	d81e      	bhi.n	405420 <_realloc_r+0x104>
  4053e2:	f8d9 3004 	ldr.w	r3, [r9, #4]
  4053e6:	f003 0301 	and.w	r3, r3, #1
  4053ea:	4323      	orrs	r3, r4
  4053ec:	444c      	add	r4, r9
  4053ee:	f8c9 3004 	str.w	r3, [r9, #4]
  4053f2:	6863      	ldr	r3, [r4, #4]
  4053f4:	f043 0301 	orr.w	r3, r3, #1
  4053f8:	6063      	str	r3, [r4, #4]
  4053fa:	4640      	mov	r0, r8
  4053fc:	f7ff f948 	bl	404690 <__malloc_unlock>
  405400:	4630      	mov	r0, r6
  405402:	b003      	add	sp, #12
  405404:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
  405408:	f023 0303 	bic.w	r3, r3, #3
  40540c:	18e1      	adds	r1, r4, r3
  40540e:	4291      	cmp	r1, r2
  405410:	db1f      	blt.n	405452 <_realloc_r+0x136>
  405412:	68c3      	ldr	r3, [r0, #12]
  405414:	6882      	ldr	r2, [r0, #8]
  405416:	462e      	mov	r6, r5
  405418:	60d3      	str	r3, [r2, #12]
  40541a:	460c      	mov	r4, r1
  40541c:	609a      	str	r2, [r3, #8]
  40541e:	e7dd      	b.n	4053dc <_realloc_r+0xc0>
  405420:	f8d9 2004 	ldr.w	r2, [r9, #4]
  405424:	eb09 0107 	add.w	r1, r9, r7
  405428:	f002 0201 	and.w	r2, r2, #1
  40542c:	444c      	add	r4, r9
  40542e:	f043 0301 	orr.w	r3, r3, #1
  405432:	4317      	orrs	r7, r2
  405434:	f8c9 7004 	str.w	r7, [r9, #4]
  405438:	604b      	str	r3, [r1, #4]
  40543a:	6863      	ldr	r3, [r4, #4]
  40543c:	f043 0301 	orr.w	r3, r3, #1
  405440:	3108      	adds	r1, #8
  405442:	6063      	str	r3, [r4, #4]
  405444:	4640      	mov	r0, r8
  405446:	f7ff fe09 	bl	40505c <_free_r>
  40544a:	e7d6      	b.n	4053fa <_realloc_r+0xde>
  40544c:	4611      	mov	r1, r2
  40544e:	f7fe bd7d 	b.w	403f4c <_malloc_r>
  405452:	f01e 0f01 	tst.w	lr, #1
  405456:	d18e      	bne.n	405376 <_realloc_r+0x5a>
  405458:	f855 1c08 	ldr.w	r1, [r5, #-8]
  40545c:	eba9 0a01 	sub.w	sl, r9, r1
  405460:	f8da 1004 	ldr.w	r1, [sl, #4]
  405464:	f021 0103 	bic.w	r1, r1, #3
  405468:	440b      	add	r3, r1
  40546a:	4423      	add	r3, r4
  40546c:	4293      	cmp	r3, r2
  40546e:	db25      	blt.n	4054bc <_realloc_r+0x1a0>
  405470:	68c2      	ldr	r2, [r0, #12]
  405472:	6881      	ldr	r1, [r0, #8]
  405474:	4656      	mov	r6, sl
  405476:	60ca      	str	r2, [r1, #12]
  405478:	6091      	str	r1, [r2, #8]
  40547a:	f8da 100c 	ldr.w	r1, [sl, #12]
  40547e:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405482:	1f22      	subs	r2, r4, #4
  405484:	2a24      	cmp	r2, #36	; 0x24
  405486:	60c1      	str	r1, [r0, #12]
  405488:	6088      	str	r0, [r1, #8]
  40548a:	f200 8094 	bhi.w	4055b6 <_realloc_r+0x29a>
  40548e:	2a13      	cmp	r2, #19
  405490:	d96f      	bls.n	405572 <_realloc_r+0x256>
  405492:	6829      	ldr	r1, [r5, #0]
  405494:	f8ca 1008 	str.w	r1, [sl, #8]
  405498:	6869      	ldr	r1, [r5, #4]
  40549a:	f8ca 100c 	str.w	r1, [sl, #12]
  40549e:	2a1b      	cmp	r2, #27
  4054a0:	f200 80a2 	bhi.w	4055e8 <_realloc_r+0x2cc>
  4054a4:	3508      	adds	r5, #8
  4054a6:	f10a 0210 	add.w	r2, sl, #16
  4054aa:	e063      	b.n	405574 <_realloc_r+0x258>
  4054ac:	f855 3c08 	ldr.w	r3, [r5, #-8]
  4054b0:	eba9 0a03 	sub.w	sl, r9, r3
  4054b4:	f8da 1004 	ldr.w	r1, [sl, #4]
  4054b8:	f021 0103 	bic.w	r1, r1, #3
  4054bc:	1863      	adds	r3, r4, r1
  4054be:	4293      	cmp	r3, r2
  4054c0:	f6ff af59 	blt.w	405376 <_realloc_r+0x5a>
  4054c4:	4656      	mov	r6, sl
  4054c6:	e7d8      	b.n	40547a <_realloc_r+0x15e>
  4054c8:	6841      	ldr	r1, [r0, #4]
  4054ca:	f021 0b03 	bic.w	fp, r1, #3
  4054ce:	44a3      	add	fp, r4
  4054d0:	f107 0010 	add.w	r0, r7, #16
  4054d4:	4583      	cmp	fp, r0
  4054d6:	da56      	bge.n	405586 <_realloc_r+0x26a>
  4054d8:	f01e 0f01 	tst.w	lr, #1
  4054dc:	f47f af4b 	bne.w	405376 <_realloc_r+0x5a>
  4054e0:	f855 1c08 	ldr.w	r1, [r5, #-8]
  4054e4:	eba9 0a01 	sub.w	sl, r9, r1
  4054e8:	f8da 1004 	ldr.w	r1, [sl, #4]
  4054ec:	f021 0103 	bic.w	r1, r1, #3
  4054f0:	448b      	add	fp, r1
  4054f2:	4558      	cmp	r0, fp
  4054f4:	dce2      	bgt.n	4054bc <_realloc_r+0x1a0>
  4054f6:	4656      	mov	r6, sl
  4054f8:	f8da 100c 	ldr.w	r1, [sl, #12]
  4054fc:	f856 0f08 	ldr.w	r0, [r6, #8]!
  405500:	1f22      	subs	r2, r4, #4
  405502:	2a24      	cmp	r2, #36	; 0x24
  405504:	60c1      	str	r1, [r0, #12]
  405506:	6088      	str	r0, [r1, #8]
  405508:	f200 808f 	bhi.w	40562a <_realloc_r+0x30e>
  40550c:	2a13      	cmp	r2, #19
  40550e:	f240 808a 	bls.w	405626 <_realloc_r+0x30a>
  405512:	6829      	ldr	r1, [r5, #0]
  405514:	f8ca 1008 	str.w	r1, [sl, #8]
  405518:	6869      	ldr	r1, [r5, #4]
  40551a:	f8ca 100c 	str.w	r1, [sl, #12]
  40551e:	2a1b      	cmp	r2, #27
  405520:	f200 808a 	bhi.w	405638 <_realloc_r+0x31c>
  405524:	3508      	adds	r5, #8
  405526:	f10a 0210 	add.w	r2, sl, #16
  40552a:	6829      	ldr	r1, [r5, #0]
  40552c:	6011      	str	r1, [r2, #0]
  40552e:	6869      	ldr	r1, [r5, #4]
  405530:	6051      	str	r1, [r2, #4]
  405532:	68a9      	ldr	r1, [r5, #8]
  405534:	6091      	str	r1, [r2, #8]
  405536:	eb0a 0107 	add.w	r1, sl, r7
  40553a:	ebab 0207 	sub.w	r2, fp, r7
  40553e:	f042 0201 	orr.w	r2, r2, #1
  405542:	6099      	str	r1, [r3, #8]
  405544:	604a      	str	r2, [r1, #4]
  405546:	f8da 3004 	ldr.w	r3, [sl, #4]
  40554a:	f003 0301 	and.w	r3, r3, #1
  40554e:	431f      	orrs	r7, r3
  405550:	4640      	mov	r0, r8
  405552:	f8ca 7004 	str.w	r7, [sl, #4]
  405556:	f7ff f89b 	bl	404690 <__malloc_unlock>
  40555a:	e751      	b.n	405400 <_realloc_r+0xe4>
  40555c:	682b      	ldr	r3, [r5, #0]
  40555e:	6003      	str	r3, [r0, #0]
  405560:	686b      	ldr	r3, [r5, #4]
  405562:	6043      	str	r3, [r0, #4]
  405564:	2a1b      	cmp	r2, #27
  405566:	d82d      	bhi.n	4055c4 <_realloc_r+0x2a8>
  405568:	f100 0308 	add.w	r3, r0, #8
  40556c:	f105 0208 	add.w	r2, r5, #8
  405570:	e71b      	b.n	4053aa <_realloc_r+0x8e>
  405572:	4632      	mov	r2, r6
  405574:	6829      	ldr	r1, [r5, #0]
  405576:	6011      	str	r1, [r2, #0]
  405578:	6869      	ldr	r1, [r5, #4]
  40557a:	6051      	str	r1, [r2, #4]
  40557c:	68a9      	ldr	r1, [r5, #8]
  40557e:	6091      	str	r1, [r2, #8]
  405580:	461c      	mov	r4, r3
  405582:	46d1      	mov	r9, sl
  405584:	e72a      	b.n	4053dc <_realloc_r+0xc0>
  405586:	eb09 0107 	add.w	r1, r9, r7
  40558a:	ebab 0b07 	sub.w	fp, fp, r7
  40558e:	f04b 0201 	orr.w	r2, fp, #1
  405592:	6099      	str	r1, [r3, #8]
  405594:	604a      	str	r2, [r1, #4]
  405596:	f855 3c04 	ldr.w	r3, [r5, #-4]
  40559a:	f003 0301 	and.w	r3, r3, #1
  40559e:	431f      	orrs	r7, r3
  4055a0:	4640      	mov	r0, r8
  4055a2:	f845 7c04 	str.w	r7, [r5, #-4]
  4055a6:	f7ff f873 	bl	404690 <__malloc_unlock>
  4055aa:	462e      	mov	r6, r5
  4055ac:	e728      	b.n	405400 <_realloc_r+0xe4>
  4055ae:	4629      	mov	r1, r5
  4055b0:	f7ff fe50 	bl	405254 <memmove>
  4055b4:	e6ff      	b.n	4053b6 <_realloc_r+0x9a>
  4055b6:	4629      	mov	r1, r5
  4055b8:	4630      	mov	r0, r6
  4055ba:	461c      	mov	r4, r3
  4055bc:	46d1      	mov	r9, sl
  4055be:	f7ff fe49 	bl	405254 <memmove>
  4055c2:	e70b      	b.n	4053dc <_realloc_r+0xc0>
  4055c4:	68ab      	ldr	r3, [r5, #8]
  4055c6:	6083      	str	r3, [r0, #8]
  4055c8:	68eb      	ldr	r3, [r5, #12]
  4055ca:	60c3      	str	r3, [r0, #12]
  4055cc:	2a24      	cmp	r2, #36	; 0x24
  4055ce:	d017      	beq.n	405600 <_realloc_r+0x2e4>
  4055d0:	f100 0310 	add.w	r3, r0, #16
  4055d4:	f105 0210 	add.w	r2, r5, #16
  4055d8:	e6e7      	b.n	4053aa <_realloc_r+0x8e>
  4055da:	f850 3c04 	ldr.w	r3, [r0, #-4]
  4055de:	f023 0303 	bic.w	r3, r3, #3
  4055e2:	441c      	add	r4, r3
  4055e4:	462e      	mov	r6, r5
  4055e6:	e6f9      	b.n	4053dc <_realloc_r+0xc0>
  4055e8:	68a9      	ldr	r1, [r5, #8]
  4055ea:	f8ca 1010 	str.w	r1, [sl, #16]
  4055ee:	68e9      	ldr	r1, [r5, #12]
  4055f0:	f8ca 1014 	str.w	r1, [sl, #20]
  4055f4:	2a24      	cmp	r2, #36	; 0x24
  4055f6:	d00c      	beq.n	405612 <_realloc_r+0x2f6>
  4055f8:	3510      	adds	r5, #16
  4055fa:	f10a 0218 	add.w	r2, sl, #24
  4055fe:	e7b9      	b.n	405574 <_realloc_r+0x258>
  405600:	692b      	ldr	r3, [r5, #16]
  405602:	6103      	str	r3, [r0, #16]
  405604:	696b      	ldr	r3, [r5, #20]
  405606:	6143      	str	r3, [r0, #20]
  405608:	f105 0218 	add.w	r2, r5, #24
  40560c:	f100 0318 	add.w	r3, r0, #24
  405610:	e6cb      	b.n	4053aa <_realloc_r+0x8e>
  405612:	692a      	ldr	r2, [r5, #16]
  405614:	f8ca 2018 	str.w	r2, [sl, #24]
  405618:	696a      	ldr	r2, [r5, #20]
  40561a:	f8ca 201c 	str.w	r2, [sl, #28]
  40561e:	3518      	adds	r5, #24
  405620:	f10a 0220 	add.w	r2, sl, #32
  405624:	e7a6      	b.n	405574 <_realloc_r+0x258>
  405626:	4632      	mov	r2, r6
  405628:	e77f      	b.n	40552a <_realloc_r+0x20e>
  40562a:	4629      	mov	r1, r5
  40562c:	4630      	mov	r0, r6
  40562e:	9301      	str	r3, [sp, #4]
  405630:	f7ff fe10 	bl	405254 <memmove>
  405634:	9b01      	ldr	r3, [sp, #4]
  405636:	e77e      	b.n	405536 <_realloc_r+0x21a>
  405638:	68a9      	ldr	r1, [r5, #8]
  40563a:	f8ca 1010 	str.w	r1, [sl, #16]
  40563e:	68e9      	ldr	r1, [r5, #12]
  405640:	f8ca 1014 	str.w	r1, [sl, #20]
  405644:	2a24      	cmp	r2, #36	; 0x24
  405646:	d003      	beq.n	405650 <_realloc_r+0x334>
  405648:	3510      	adds	r5, #16
  40564a:	f10a 0218 	add.w	r2, sl, #24
  40564e:	e76c      	b.n	40552a <_realloc_r+0x20e>
  405650:	692a      	ldr	r2, [r5, #16]
  405652:	f8ca 2018 	str.w	r2, [sl, #24]
  405656:	696a      	ldr	r2, [r5, #20]
  405658:	f8ca 201c 	str.w	r2, [sl, #28]
  40565c:	3518      	adds	r5, #24
  40565e:	f10a 0220 	add.w	r2, sl, #32
  405662:	e762      	b.n	40552a <_realloc_r+0x20e>
  405664:	20400454 	.word	0x20400454

00405668 <__ascii_wctomb>:
  405668:	b121      	cbz	r1, 405674 <__ascii_wctomb+0xc>
  40566a:	2aff      	cmp	r2, #255	; 0xff
  40566c:	d804      	bhi.n	405678 <__ascii_wctomb+0x10>
  40566e:	700a      	strb	r2, [r1, #0]
  405670:	2001      	movs	r0, #1
  405672:	4770      	bx	lr
  405674:	4608      	mov	r0, r1
  405676:	4770      	bx	lr
  405678:	238a      	movs	r3, #138	; 0x8a
  40567a:	6003      	str	r3, [r0, #0]
  40567c:	f04f 30ff 	mov.w	r0, #4294967295
  405680:	4770      	bx	lr
  405682:	bf00      	nop

00405684 <__aeabi_drsub>:
  405684:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
  405688:	e002      	b.n	405690 <__adddf3>
  40568a:	bf00      	nop

0040568c <__aeabi_dsub>:
  40568c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

00405690 <__adddf3>:
  405690:	b530      	push	{r4, r5, lr}
  405692:	ea4f 0441 	mov.w	r4, r1, lsl #1
  405696:	ea4f 0543 	mov.w	r5, r3, lsl #1
  40569a:	ea94 0f05 	teq	r4, r5
  40569e:	bf08      	it	eq
  4056a0:	ea90 0f02 	teqeq	r0, r2
  4056a4:	bf1f      	itttt	ne
  4056a6:	ea54 0c00 	orrsne.w	ip, r4, r0
  4056aa:	ea55 0c02 	orrsne.w	ip, r5, r2
  4056ae:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
  4056b2:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  4056b6:	f000 80e2 	beq.w	40587e <__adddf3+0x1ee>
  4056ba:	ea4f 5454 	mov.w	r4, r4, lsr #21
  4056be:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
  4056c2:	bfb8      	it	lt
  4056c4:	426d      	neglt	r5, r5
  4056c6:	dd0c      	ble.n	4056e2 <__adddf3+0x52>
  4056c8:	442c      	add	r4, r5
  4056ca:	ea80 0202 	eor.w	r2, r0, r2
  4056ce:	ea81 0303 	eor.w	r3, r1, r3
  4056d2:	ea82 0000 	eor.w	r0, r2, r0
  4056d6:	ea83 0101 	eor.w	r1, r3, r1
  4056da:	ea80 0202 	eor.w	r2, r0, r2
  4056de:	ea81 0303 	eor.w	r3, r1, r3
  4056e2:	2d36      	cmp	r5, #54	; 0x36
  4056e4:	bf88      	it	hi
  4056e6:	bd30      	pophi	{r4, r5, pc}
  4056e8:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  4056ec:	ea4f 3101 	mov.w	r1, r1, lsl #12
  4056f0:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
  4056f4:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
  4056f8:	d002      	beq.n	405700 <__adddf3+0x70>
  4056fa:	4240      	negs	r0, r0
  4056fc:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  405700:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
  405704:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405708:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
  40570c:	d002      	beq.n	405714 <__adddf3+0x84>
  40570e:	4252      	negs	r2, r2
  405710:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
  405714:	ea94 0f05 	teq	r4, r5
  405718:	f000 80a7 	beq.w	40586a <__adddf3+0x1da>
  40571c:	f1a4 0401 	sub.w	r4, r4, #1
  405720:	f1d5 0e20 	rsbs	lr, r5, #32
  405724:	db0d      	blt.n	405742 <__adddf3+0xb2>
  405726:	fa02 fc0e 	lsl.w	ip, r2, lr
  40572a:	fa22 f205 	lsr.w	r2, r2, r5
  40572e:	1880      	adds	r0, r0, r2
  405730:	f141 0100 	adc.w	r1, r1, #0
  405734:	fa03 f20e 	lsl.w	r2, r3, lr
  405738:	1880      	adds	r0, r0, r2
  40573a:	fa43 f305 	asr.w	r3, r3, r5
  40573e:	4159      	adcs	r1, r3
  405740:	e00e      	b.n	405760 <__adddf3+0xd0>
  405742:	f1a5 0520 	sub.w	r5, r5, #32
  405746:	f10e 0e20 	add.w	lr, lr, #32
  40574a:	2a01      	cmp	r2, #1
  40574c:	fa03 fc0e 	lsl.w	ip, r3, lr
  405750:	bf28      	it	cs
  405752:	f04c 0c02 	orrcs.w	ip, ip, #2
  405756:	fa43 f305 	asr.w	r3, r3, r5
  40575a:	18c0      	adds	r0, r0, r3
  40575c:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
  405760:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405764:	d507      	bpl.n	405776 <__adddf3+0xe6>
  405766:	f04f 0e00 	mov.w	lr, #0
  40576a:	f1dc 0c00 	rsbs	ip, ip, #0
  40576e:	eb7e 0000 	sbcs.w	r0, lr, r0
  405772:	eb6e 0101 	sbc.w	r1, lr, r1
  405776:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
  40577a:	d31b      	bcc.n	4057b4 <__adddf3+0x124>
  40577c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
  405780:	d30c      	bcc.n	40579c <__adddf3+0x10c>
  405782:	0849      	lsrs	r1, r1, #1
  405784:	ea5f 0030 	movs.w	r0, r0, rrx
  405788:	ea4f 0c3c 	mov.w	ip, ip, rrx
  40578c:	f104 0401 	add.w	r4, r4, #1
  405790:	ea4f 5244 	mov.w	r2, r4, lsl #21
  405794:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
  405798:	f080 809a 	bcs.w	4058d0 <__adddf3+0x240>
  40579c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
  4057a0:	bf08      	it	eq
  4057a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  4057a6:	f150 0000 	adcs.w	r0, r0, #0
  4057aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  4057ae:	ea41 0105 	orr.w	r1, r1, r5
  4057b2:	bd30      	pop	{r4, r5, pc}
  4057b4:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
  4057b8:	4140      	adcs	r0, r0
  4057ba:	eb41 0101 	adc.w	r1, r1, r1
  4057be:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  4057c2:	f1a4 0401 	sub.w	r4, r4, #1
  4057c6:	d1e9      	bne.n	40579c <__adddf3+0x10c>
  4057c8:	f091 0f00 	teq	r1, #0
  4057cc:	bf04      	itt	eq
  4057ce:	4601      	moveq	r1, r0
  4057d0:	2000      	moveq	r0, #0
  4057d2:	fab1 f381 	clz	r3, r1
  4057d6:	bf08      	it	eq
  4057d8:	3320      	addeq	r3, #32
  4057da:	f1a3 030b 	sub.w	r3, r3, #11
  4057de:	f1b3 0220 	subs.w	r2, r3, #32
  4057e2:	da0c      	bge.n	4057fe <__adddf3+0x16e>
  4057e4:	320c      	adds	r2, #12
  4057e6:	dd08      	ble.n	4057fa <__adddf3+0x16a>
  4057e8:	f102 0c14 	add.w	ip, r2, #20
  4057ec:	f1c2 020c 	rsb	r2, r2, #12
  4057f0:	fa01 f00c 	lsl.w	r0, r1, ip
  4057f4:	fa21 f102 	lsr.w	r1, r1, r2
  4057f8:	e00c      	b.n	405814 <__adddf3+0x184>
  4057fa:	f102 0214 	add.w	r2, r2, #20
  4057fe:	bfd8      	it	le
  405800:	f1c2 0c20 	rsble	ip, r2, #32
  405804:	fa01 f102 	lsl.w	r1, r1, r2
  405808:	fa20 fc0c 	lsr.w	ip, r0, ip
  40580c:	bfdc      	itt	le
  40580e:	ea41 010c 	orrle.w	r1, r1, ip
  405812:	4090      	lslle	r0, r2
  405814:	1ae4      	subs	r4, r4, r3
  405816:	bfa2      	ittt	ge
  405818:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
  40581c:	4329      	orrge	r1, r5
  40581e:	bd30      	popge	{r4, r5, pc}
  405820:	ea6f 0404 	mvn.w	r4, r4
  405824:	3c1f      	subs	r4, #31
  405826:	da1c      	bge.n	405862 <__adddf3+0x1d2>
  405828:	340c      	adds	r4, #12
  40582a:	dc0e      	bgt.n	40584a <__adddf3+0x1ba>
  40582c:	f104 0414 	add.w	r4, r4, #20
  405830:	f1c4 0220 	rsb	r2, r4, #32
  405834:	fa20 f004 	lsr.w	r0, r0, r4
  405838:	fa01 f302 	lsl.w	r3, r1, r2
  40583c:	ea40 0003 	orr.w	r0, r0, r3
  405840:	fa21 f304 	lsr.w	r3, r1, r4
  405844:	ea45 0103 	orr.w	r1, r5, r3
  405848:	bd30      	pop	{r4, r5, pc}
  40584a:	f1c4 040c 	rsb	r4, r4, #12
  40584e:	f1c4 0220 	rsb	r2, r4, #32
  405852:	fa20 f002 	lsr.w	r0, r0, r2
  405856:	fa01 f304 	lsl.w	r3, r1, r4
  40585a:	ea40 0003 	orr.w	r0, r0, r3
  40585e:	4629      	mov	r1, r5
  405860:	bd30      	pop	{r4, r5, pc}
  405862:	fa21 f004 	lsr.w	r0, r1, r4
  405866:	4629      	mov	r1, r5
  405868:	bd30      	pop	{r4, r5, pc}
  40586a:	f094 0f00 	teq	r4, #0
  40586e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
  405872:	bf06      	itte	eq
  405874:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
  405878:	3401      	addeq	r4, #1
  40587a:	3d01      	subne	r5, #1
  40587c:	e74e      	b.n	40571c <__adddf3+0x8c>
  40587e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  405882:	bf18      	it	ne
  405884:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
  405888:	d029      	beq.n	4058de <__adddf3+0x24e>
  40588a:	ea94 0f05 	teq	r4, r5
  40588e:	bf08      	it	eq
  405890:	ea90 0f02 	teqeq	r0, r2
  405894:	d005      	beq.n	4058a2 <__adddf3+0x212>
  405896:	ea54 0c00 	orrs.w	ip, r4, r0
  40589a:	bf04      	itt	eq
  40589c:	4619      	moveq	r1, r3
  40589e:	4610      	moveq	r0, r2
  4058a0:	bd30      	pop	{r4, r5, pc}
  4058a2:	ea91 0f03 	teq	r1, r3
  4058a6:	bf1e      	ittt	ne
  4058a8:	2100      	movne	r1, #0
  4058aa:	2000      	movne	r0, #0
  4058ac:	bd30      	popne	{r4, r5, pc}
  4058ae:	ea5f 5c54 	movs.w	ip, r4, lsr #21
  4058b2:	d105      	bne.n	4058c0 <__adddf3+0x230>
  4058b4:	0040      	lsls	r0, r0, #1
  4058b6:	4149      	adcs	r1, r1
  4058b8:	bf28      	it	cs
  4058ba:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
  4058be:	bd30      	pop	{r4, r5, pc}
  4058c0:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
  4058c4:	bf3c      	itt	cc
  4058c6:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
  4058ca:	bd30      	popcc	{r4, r5, pc}
  4058cc:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  4058d0:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
  4058d4:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  4058d8:	f04f 0000 	mov.w	r0, #0
  4058dc:	bd30      	pop	{r4, r5, pc}
  4058de:	ea7f 5c64 	mvns.w	ip, r4, asr #21
  4058e2:	bf1a      	itte	ne
  4058e4:	4619      	movne	r1, r3
  4058e6:	4610      	movne	r0, r2
  4058e8:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
  4058ec:	bf1c      	itt	ne
  4058ee:	460b      	movne	r3, r1
  4058f0:	4602      	movne	r2, r0
  4058f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  4058f6:	bf06      	itte	eq
  4058f8:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
  4058fc:	ea91 0f03 	teqeq	r1, r3
  405900:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
  405904:	bd30      	pop	{r4, r5, pc}
  405906:	bf00      	nop

00405908 <__aeabi_ui2d>:
  405908:	f090 0f00 	teq	r0, #0
  40590c:	bf04      	itt	eq
  40590e:	2100      	moveq	r1, #0
  405910:	4770      	bxeq	lr
  405912:	b530      	push	{r4, r5, lr}
  405914:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405918:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40591c:	f04f 0500 	mov.w	r5, #0
  405920:	f04f 0100 	mov.w	r1, #0
  405924:	e750      	b.n	4057c8 <__adddf3+0x138>
  405926:	bf00      	nop

00405928 <__aeabi_i2d>:
  405928:	f090 0f00 	teq	r0, #0
  40592c:	bf04      	itt	eq
  40592e:	2100      	moveq	r1, #0
  405930:	4770      	bxeq	lr
  405932:	b530      	push	{r4, r5, lr}
  405934:	f44f 6480 	mov.w	r4, #1024	; 0x400
  405938:	f104 0432 	add.w	r4, r4, #50	; 0x32
  40593c:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
  405940:	bf48      	it	mi
  405942:	4240      	negmi	r0, r0
  405944:	f04f 0100 	mov.w	r1, #0
  405948:	e73e      	b.n	4057c8 <__adddf3+0x138>
  40594a:	bf00      	nop

0040594c <__aeabi_f2d>:
  40594c:	0042      	lsls	r2, r0, #1
  40594e:	ea4f 01e2 	mov.w	r1, r2, asr #3
  405952:	ea4f 0131 	mov.w	r1, r1, rrx
  405956:	ea4f 7002 	mov.w	r0, r2, lsl #28
  40595a:	bf1f      	itttt	ne
  40595c:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
  405960:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405964:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
  405968:	4770      	bxne	lr
  40596a:	f092 0f00 	teq	r2, #0
  40596e:	bf14      	ite	ne
  405970:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
  405974:	4770      	bxeq	lr
  405976:	b530      	push	{r4, r5, lr}
  405978:	f44f 7460 	mov.w	r4, #896	; 0x380
  40597c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
  405980:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405984:	e720      	b.n	4057c8 <__adddf3+0x138>
  405986:	bf00      	nop

00405988 <__aeabi_ul2d>:
  405988:	ea50 0201 	orrs.w	r2, r0, r1
  40598c:	bf08      	it	eq
  40598e:	4770      	bxeq	lr
  405990:	b530      	push	{r4, r5, lr}
  405992:	f04f 0500 	mov.w	r5, #0
  405996:	e00a      	b.n	4059ae <__aeabi_l2d+0x16>

00405998 <__aeabi_l2d>:
  405998:	ea50 0201 	orrs.w	r2, r0, r1
  40599c:	bf08      	it	eq
  40599e:	4770      	bxeq	lr
  4059a0:	b530      	push	{r4, r5, lr}
  4059a2:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
  4059a6:	d502      	bpl.n	4059ae <__aeabi_l2d+0x16>
  4059a8:	4240      	negs	r0, r0
  4059aa:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
  4059ae:	f44f 6480 	mov.w	r4, #1024	; 0x400
  4059b2:	f104 0432 	add.w	r4, r4, #50	; 0x32
  4059b6:	ea5f 5c91 	movs.w	ip, r1, lsr #22
  4059ba:	f43f aedc 	beq.w	405776 <__adddf3+0xe6>
  4059be:	f04f 0203 	mov.w	r2, #3
  4059c2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4059c6:	bf18      	it	ne
  4059c8:	3203      	addne	r2, #3
  4059ca:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
  4059ce:	bf18      	it	ne
  4059d0:	3203      	addne	r2, #3
  4059d2:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
  4059d6:	f1c2 0320 	rsb	r3, r2, #32
  4059da:	fa00 fc03 	lsl.w	ip, r0, r3
  4059de:	fa20 f002 	lsr.w	r0, r0, r2
  4059e2:	fa01 fe03 	lsl.w	lr, r1, r3
  4059e6:	ea40 000e 	orr.w	r0, r0, lr
  4059ea:	fa21 f102 	lsr.w	r1, r1, r2
  4059ee:	4414      	add	r4, r2
  4059f0:	e6c1      	b.n	405776 <__adddf3+0xe6>
  4059f2:	bf00      	nop

004059f4 <__aeabi_dmul>:
  4059f4:	b570      	push	{r4, r5, r6, lr}
  4059f6:	f04f 0cff 	mov.w	ip, #255	; 0xff
  4059fa:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  4059fe:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405a02:	bf1d      	ittte	ne
  405a04:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405a08:	ea94 0f0c 	teqne	r4, ip
  405a0c:	ea95 0f0c 	teqne	r5, ip
  405a10:	f000 f8de 	bleq	405bd0 <__aeabi_dmul+0x1dc>
  405a14:	442c      	add	r4, r5
  405a16:	ea81 0603 	eor.w	r6, r1, r3
  405a1a:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
  405a1e:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
  405a22:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
  405a26:	bf18      	it	ne
  405a28:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
  405a2c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405a30:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
  405a34:	d038      	beq.n	405aa8 <__aeabi_dmul+0xb4>
  405a36:	fba0 ce02 	umull	ip, lr, r0, r2
  405a3a:	f04f 0500 	mov.w	r5, #0
  405a3e:	fbe1 e502 	umlal	lr, r5, r1, r2
  405a42:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
  405a46:	fbe0 e503 	umlal	lr, r5, r0, r3
  405a4a:	f04f 0600 	mov.w	r6, #0
  405a4e:	fbe1 5603 	umlal	r5, r6, r1, r3
  405a52:	f09c 0f00 	teq	ip, #0
  405a56:	bf18      	it	ne
  405a58:	f04e 0e01 	orrne.w	lr, lr, #1
  405a5c:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
  405a60:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
  405a64:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
  405a68:	d204      	bcs.n	405a74 <__aeabi_dmul+0x80>
  405a6a:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
  405a6e:	416d      	adcs	r5, r5
  405a70:	eb46 0606 	adc.w	r6, r6, r6
  405a74:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
  405a78:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
  405a7c:	ea4f 20c5 	mov.w	r0, r5, lsl #11
  405a80:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
  405a84:	ea4f 2ece 	mov.w	lr, lr, lsl #11
  405a88:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405a8c:	bf88      	it	hi
  405a8e:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405a92:	d81e      	bhi.n	405ad2 <__aeabi_dmul+0xde>
  405a94:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
  405a98:	bf08      	it	eq
  405a9a:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
  405a9e:	f150 0000 	adcs.w	r0, r0, #0
  405aa2:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405aa6:	bd70      	pop	{r4, r5, r6, pc}
  405aa8:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
  405aac:	ea46 0101 	orr.w	r1, r6, r1
  405ab0:	ea40 0002 	orr.w	r0, r0, r2
  405ab4:	ea81 0103 	eor.w	r1, r1, r3
  405ab8:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
  405abc:	bfc2      	ittt	gt
  405abe:	ebd4 050c 	rsbsgt	r5, r4, ip
  405ac2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405ac6:	bd70      	popgt	{r4, r5, r6, pc}
  405ac8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405acc:	f04f 0e00 	mov.w	lr, #0
  405ad0:	3c01      	subs	r4, #1
  405ad2:	f300 80ab 	bgt.w	405c2c <__aeabi_dmul+0x238>
  405ad6:	f114 0f36 	cmn.w	r4, #54	; 0x36
  405ada:	bfde      	ittt	le
  405adc:	2000      	movle	r0, #0
  405ade:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
  405ae2:	bd70      	pople	{r4, r5, r6, pc}
  405ae4:	f1c4 0400 	rsb	r4, r4, #0
  405ae8:	3c20      	subs	r4, #32
  405aea:	da35      	bge.n	405b58 <__aeabi_dmul+0x164>
  405aec:	340c      	adds	r4, #12
  405aee:	dc1b      	bgt.n	405b28 <__aeabi_dmul+0x134>
  405af0:	f104 0414 	add.w	r4, r4, #20
  405af4:	f1c4 0520 	rsb	r5, r4, #32
  405af8:	fa00 f305 	lsl.w	r3, r0, r5
  405afc:	fa20 f004 	lsr.w	r0, r0, r4
  405b00:	fa01 f205 	lsl.w	r2, r1, r5
  405b04:	ea40 0002 	orr.w	r0, r0, r2
  405b08:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
  405b0c:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
  405b10:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405b14:	fa21 f604 	lsr.w	r6, r1, r4
  405b18:	eb42 0106 	adc.w	r1, r2, r6
  405b1c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405b20:	bf08      	it	eq
  405b22:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405b26:	bd70      	pop	{r4, r5, r6, pc}
  405b28:	f1c4 040c 	rsb	r4, r4, #12
  405b2c:	f1c4 0520 	rsb	r5, r4, #32
  405b30:	fa00 f304 	lsl.w	r3, r0, r4
  405b34:	fa20 f005 	lsr.w	r0, r0, r5
  405b38:	fa01 f204 	lsl.w	r2, r1, r4
  405b3c:	ea40 0002 	orr.w	r0, r0, r2
  405b40:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405b44:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
  405b48:	f141 0100 	adc.w	r1, r1, #0
  405b4c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405b50:	bf08      	it	eq
  405b52:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405b56:	bd70      	pop	{r4, r5, r6, pc}
  405b58:	f1c4 0520 	rsb	r5, r4, #32
  405b5c:	fa00 f205 	lsl.w	r2, r0, r5
  405b60:	ea4e 0e02 	orr.w	lr, lr, r2
  405b64:	fa20 f304 	lsr.w	r3, r0, r4
  405b68:	fa01 f205 	lsl.w	r2, r1, r5
  405b6c:	ea43 0302 	orr.w	r3, r3, r2
  405b70:	fa21 f004 	lsr.w	r0, r1, r4
  405b74:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405b78:	fa21 f204 	lsr.w	r2, r1, r4
  405b7c:	ea20 0002 	bic.w	r0, r0, r2
  405b80:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
  405b84:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
  405b88:	bf08      	it	eq
  405b8a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
  405b8e:	bd70      	pop	{r4, r5, r6, pc}
  405b90:	f094 0f00 	teq	r4, #0
  405b94:	d10f      	bne.n	405bb6 <__aeabi_dmul+0x1c2>
  405b96:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
  405b9a:	0040      	lsls	r0, r0, #1
  405b9c:	eb41 0101 	adc.w	r1, r1, r1
  405ba0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405ba4:	bf08      	it	eq
  405ba6:	3c01      	subeq	r4, #1
  405ba8:	d0f7      	beq.n	405b9a <__aeabi_dmul+0x1a6>
  405baa:	ea41 0106 	orr.w	r1, r1, r6
  405bae:	f095 0f00 	teq	r5, #0
  405bb2:	bf18      	it	ne
  405bb4:	4770      	bxne	lr
  405bb6:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
  405bba:	0052      	lsls	r2, r2, #1
  405bbc:	eb43 0303 	adc.w	r3, r3, r3
  405bc0:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
  405bc4:	bf08      	it	eq
  405bc6:	3d01      	subeq	r5, #1
  405bc8:	d0f7      	beq.n	405bba <__aeabi_dmul+0x1c6>
  405bca:	ea43 0306 	orr.w	r3, r3, r6
  405bce:	4770      	bx	lr
  405bd0:	ea94 0f0c 	teq	r4, ip
  405bd4:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405bd8:	bf18      	it	ne
  405bda:	ea95 0f0c 	teqne	r5, ip
  405bde:	d00c      	beq.n	405bfa <__aeabi_dmul+0x206>
  405be0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405be4:	bf18      	it	ne
  405be6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405bea:	d1d1      	bne.n	405b90 <__aeabi_dmul+0x19c>
  405bec:	ea81 0103 	eor.w	r1, r1, r3
  405bf0:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405bf4:	f04f 0000 	mov.w	r0, #0
  405bf8:	bd70      	pop	{r4, r5, r6, pc}
  405bfa:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405bfe:	bf06      	itte	eq
  405c00:	4610      	moveq	r0, r2
  405c02:	4619      	moveq	r1, r3
  405c04:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405c08:	d019      	beq.n	405c3e <__aeabi_dmul+0x24a>
  405c0a:	ea94 0f0c 	teq	r4, ip
  405c0e:	d102      	bne.n	405c16 <__aeabi_dmul+0x222>
  405c10:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
  405c14:	d113      	bne.n	405c3e <__aeabi_dmul+0x24a>
  405c16:	ea95 0f0c 	teq	r5, ip
  405c1a:	d105      	bne.n	405c28 <__aeabi_dmul+0x234>
  405c1c:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
  405c20:	bf1c      	itt	ne
  405c22:	4610      	movne	r0, r2
  405c24:	4619      	movne	r1, r3
  405c26:	d10a      	bne.n	405c3e <__aeabi_dmul+0x24a>
  405c28:	ea81 0103 	eor.w	r1, r1, r3
  405c2c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
  405c30:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405c34:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
  405c38:	f04f 0000 	mov.w	r0, #0
  405c3c:	bd70      	pop	{r4, r5, r6, pc}
  405c3e:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
  405c42:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
  405c46:	bd70      	pop	{r4, r5, r6, pc}

00405c48 <__aeabi_ddiv>:
  405c48:	b570      	push	{r4, r5, r6, lr}
  405c4a:	f04f 0cff 	mov.w	ip, #255	; 0xff
  405c4e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
  405c52:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
  405c56:	bf1d      	ittte	ne
  405c58:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
  405c5c:	ea94 0f0c 	teqne	r4, ip
  405c60:	ea95 0f0c 	teqne	r5, ip
  405c64:	f000 f8a7 	bleq	405db6 <__aeabi_ddiv+0x16e>
  405c68:	eba4 0405 	sub.w	r4, r4, r5
  405c6c:	ea81 0e03 	eor.w	lr, r1, r3
  405c70:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405c74:	ea4f 3101 	mov.w	r1, r1, lsl #12
  405c78:	f000 8088 	beq.w	405d8c <__aeabi_ddiv+0x144>
  405c7c:	ea4f 3303 	mov.w	r3, r3, lsl #12
  405c80:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
  405c84:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
  405c88:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
  405c8c:	ea4f 2202 	mov.w	r2, r2, lsl #8
  405c90:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
  405c94:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
  405c98:	ea4f 2600 	mov.w	r6, r0, lsl #8
  405c9c:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
  405ca0:	429d      	cmp	r5, r3
  405ca2:	bf08      	it	eq
  405ca4:	4296      	cmpeq	r6, r2
  405ca6:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
  405caa:	f504 7440 	add.w	r4, r4, #768	; 0x300
  405cae:	d202      	bcs.n	405cb6 <__aeabi_ddiv+0x6e>
  405cb0:	085b      	lsrs	r3, r3, #1
  405cb2:	ea4f 0232 	mov.w	r2, r2, rrx
  405cb6:	1ab6      	subs	r6, r6, r2
  405cb8:	eb65 0503 	sbc.w	r5, r5, r3
  405cbc:	085b      	lsrs	r3, r3, #1
  405cbe:	ea4f 0232 	mov.w	r2, r2, rrx
  405cc2:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
  405cc6:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
  405cca:	ebb6 0e02 	subs.w	lr, r6, r2
  405cce:	eb75 0e03 	sbcs.w	lr, r5, r3
  405cd2:	bf22      	ittt	cs
  405cd4:	1ab6      	subcs	r6, r6, r2
  405cd6:	4675      	movcs	r5, lr
  405cd8:	ea40 000c 	orrcs.w	r0, r0, ip
  405cdc:	085b      	lsrs	r3, r3, #1
  405cde:	ea4f 0232 	mov.w	r2, r2, rrx
  405ce2:	ebb6 0e02 	subs.w	lr, r6, r2
  405ce6:	eb75 0e03 	sbcs.w	lr, r5, r3
  405cea:	bf22      	ittt	cs
  405cec:	1ab6      	subcs	r6, r6, r2
  405cee:	4675      	movcs	r5, lr
  405cf0:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
  405cf4:	085b      	lsrs	r3, r3, #1
  405cf6:	ea4f 0232 	mov.w	r2, r2, rrx
  405cfa:	ebb6 0e02 	subs.w	lr, r6, r2
  405cfe:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d02:	bf22      	ittt	cs
  405d04:	1ab6      	subcs	r6, r6, r2
  405d06:	4675      	movcs	r5, lr
  405d08:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
  405d0c:	085b      	lsrs	r3, r3, #1
  405d0e:	ea4f 0232 	mov.w	r2, r2, rrx
  405d12:	ebb6 0e02 	subs.w	lr, r6, r2
  405d16:	eb75 0e03 	sbcs.w	lr, r5, r3
  405d1a:	bf22      	ittt	cs
  405d1c:	1ab6      	subcs	r6, r6, r2
  405d1e:	4675      	movcs	r5, lr
  405d20:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
  405d24:	ea55 0e06 	orrs.w	lr, r5, r6
  405d28:	d018      	beq.n	405d5c <__aeabi_ddiv+0x114>
  405d2a:	ea4f 1505 	mov.w	r5, r5, lsl #4
  405d2e:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
  405d32:	ea4f 1606 	mov.w	r6, r6, lsl #4
  405d36:	ea4f 03c3 	mov.w	r3, r3, lsl #3
  405d3a:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
  405d3e:	ea4f 02c2 	mov.w	r2, r2, lsl #3
  405d42:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
  405d46:	d1c0      	bne.n	405cca <__aeabi_ddiv+0x82>
  405d48:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405d4c:	d10b      	bne.n	405d66 <__aeabi_ddiv+0x11e>
  405d4e:	ea41 0100 	orr.w	r1, r1, r0
  405d52:	f04f 0000 	mov.w	r0, #0
  405d56:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
  405d5a:	e7b6      	b.n	405cca <__aeabi_ddiv+0x82>
  405d5c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
  405d60:	bf04      	itt	eq
  405d62:	4301      	orreq	r1, r0
  405d64:	2000      	moveq	r0, #0
  405d66:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
  405d6a:	bf88      	it	hi
  405d6c:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
  405d70:	f63f aeaf 	bhi.w	405ad2 <__aeabi_dmul+0xde>
  405d74:	ebb5 0c03 	subs.w	ip, r5, r3
  405d78:	bf04      	itt	eq
  405d7a:	ebb6 0c02 	subseq.w	ip, r6, r2
  405d7e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
  405d82:	f150 0000 	adcs.w	r0, r0, #0
  405d86:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
  405d8a:	bd70      	pop	{r4, r5, r6, pc}
  405d8c:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
  405d90:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
  405d94:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
  405d98:	bfc2      	ittt	gt
  405d9a:	ebd4 050c 	rsbsgt	r5, r4, ip
  405d9e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
  405da2:	bd70      	popgt	{r4, r5, r6, pc}
  405da4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
  405da8:	f04f 0e00 	mov.w	lr, #0
  405dac:	3c01      	subs	r4, #1
  405dae:	e690      	b.n	405ad2 <__aeabi_dmul+0xde>
  405db0:	ea45 0e06 	orr.w	lr, r5, r6
  405db4:	e68d      	b.n	405ad2 <__aeabi_dmul+0xde>
  405db6:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
  405dba:	ea94 0f0c 	teq	r4, ip
  405dbe:	bf08      	it	eq
  405dc0:	ea95 0f0c 	teqeq	r5, ip
  405dc4:	f43f af3b 	beq.w	405c3e <__aeabi_dmul+0x24a>
  405dc8:	ea94 0f0c 	teq	r4, ip
  405dcc:	d10a      	bne.n	405de4 <__aeabi_ddiv+0x19c>
  405dce:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
  405dd2:	f47f af34 	bne.w	405c3e <__aeabi_dmul+0x24a>
  405dd6:	ea95 0f0c 	teq	r5, ip
  405dda:	f47f af25 	bne.w	405c28 <__aeabi_dmul+0x234>
  405dde:	4610      	mov	r0, r2
  405de0:	4619      	mov	r1, r3
  405de2:	e72c      	b.n	405c3e <__aeabi_dmul+0x24a>
  405de4:	ea95 0f0c 	teq	r5, ip
  405de8:	d106      	bne.n	405df8 <__aeabi_ddiv+0x1b0>
  405dea:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
  405dee:	f43f aefd 	beq.w	405bec <__aeabi_dmul+0x1f8>
  405df2:	4610      	mov	r0, r2
  405df4:	4619      	mov	r1, r3
  405df6:	e722      	b.n	405c3e <__aeabi_dmul+0x24a>
  405df8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
  405dfc:	bf18      	it	ne
  405dfe:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
  405e02:	f47f aec5 	bne.w	405b90 <__aeabi_dmul+0x19c>
  405e06:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
  405e0a:	f47f af0d 	bne.w	405c28 <__aeabi_dmul+0x234>
  405e0e:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
  405e12:	f47f aeeb 	bne.w	405bec <__aeabi_dmul+0x1f8>
  405e16:	e712      	b.n	405c3e <__aeabi_dmul+0x24a>

00405e18 <__gedf2>:
  405e18:	f04f 3cff 	mov.w	ip, #4294967295
  405e1c:	e006      	b.n	405e2c <__cmpdf2+0x4>
  405e1e:	bf00      	nop

00405e20 <__ledf2>:
  405e20:	f04f 0c01 	mov.w	ip, #1
  405e24:	e002      	b.n	405e2c <__cmpdf2+0x4>
  405e26:	bf00      	nop

00405e28 <__cmpdf2>:
  405e28:	f04f 0c01 	mov.w	ip, #1
  405e2c:	f84d cd04 	str.w	ip, [sp, #-4]!
  405e30:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405e34:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e38:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405e3c:	bf18      	it	ne
  405e3e:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
  405e42:	d01b      	beq.n	405e7c <__cmpdf2+0x54>
  405e44:	b001      	add	sp, #4
  405e46:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
  405e4a:	bf0c      	ite	eq
  405e4c:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
  405e50:	ea91 0f03 	teqne	r1, r3
  405e54:	bf02      	ittt	eq
  405e56:	ea90 0f02 	teqeq	r0, r2
  405e5a:	2000      	moveq	r0, #0
  405e5c:	4770      	bxeq	lr
  405e5e:	f110 0f00 	cmn.w	r0, #0
  405e62:	ea91 0f03 	teq	r1, r3
  405e66:	bf58      	it	pl
  405e68:	4299      	cmppl	r1, r3
  405e6a:	bf08      	it	eq
  405e6c:	4290      	cmpeq	r0, r2
  405e6e:	bf2c      	ite	cs
  405e70:	17d8      	asrcs	r0, r3, #31
  405e72:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
  405e76:	f040 0001 	orr.w	r0, r0, #1
  405e7a:	4770      	bx	lr
  405e7c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405e80:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e84:	d102      	bne.n	405e8c <__cmpdf2+0x64>
  405e86:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405e8a:	d107      	bne.n	405e9c <__cmpdf2+0x74>
  405e8c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405e90:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405e94:	d1d6      	bne.n	405e44 <__cmpdf2+0x1c>
  405e96:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405e9a:	d0d3      	beq.n	405e44 <__cmpdf2+0x1c>
  405e9c:	f85d 0b04 	ldr.w	r0, [sp], #4
  405ea0:	4770      	bx	lr
  405ea2:	bf00      	nop

00405ea4 <__aeabi_cdrcmple>:
  405ea4:	4684      	mov	ip, r0
  405ea6:	4610      	mov	r0, r2
  405ea8:	4662      	mov	r2, ip
  405eaa:	468c      	mov	ip, r1
  405eac:	4619      	mov	r1, r3
  405eae:	4663      	mov	r3, ip
  405eb0:	e000      	b.n	405eb4 <__aeabi_cdcmpeq>
  405eb2:	bf00      	nop

00405eb4 <__aeabi_cdcmpeq>:
  405eb4:	b501      	push	{r0, lr}
  405eb6:	f7ff ffb7 	bl	405e28 <__cmpdf2>
  405eba:	2800      	cmp	r0, #0
  405ebc:	bf48      	it	mi
  405ebe:	f110 0f00 	cmnmi.w	r0, #0
  405ec2:	bd01      	pop	{r0, pc}

00405ec4 <__aeabi_dcmpeq>:
  405ec4:	f84d ed08 	str.w	lr, [sp, #-8]!
  405ec8:	f7ff fff4 	bl	405eb4 <__aeabi_cdcmpeq>
  405ecc:	bf0c      	ite	eq
  405ece:	2001      	moveq	r0, #1
  405ed0:	2000      	movne	r0, #0
  405ed2:	f85d fb08 	ldr.w	pc, [sp], #8
  405ed6:	bf00      	nop

00405ed8 <__aeabi_dcmplt>:
  405ed8:	f84d ed08 	str.w	lr, [sp, #-8]!
  405edc:	f7ff ffea 	bl	405eb4 <__aeabi_cdcmpeq>
  405ee0:	bf34      	ite	cc
  405ee2:	2001      	movcc	r0, #1
  405ee4:	2000      	movcs	r0, #0
  405ee6:	f85d fb08 	ldr.w	pc, [sp], #8
  405eea:	bf00      	nop

00405eec <__aeabi_dcmple>:
  405eec:	f84d ed08 	str.w	lr, [sp, #-8]!
  405ef0:	f7ff ffe0 	bl	405eb4 <__aeabi_cdcmpeq>
  405ef4:	bf94      	ite	ls
  405ef6:	2001      	movls	r0, #1
  405ef8:	2000      	movhi	r0, #0
  405efa:	f85d fb08 	ldr.w	pc, [sp], #8
  405efe:	bf00      	nop

00405f00 <__aeabi_dcmpge>:
  405f00:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f04:	f7ff ffce 	bl	405ea4 <__aeabi_cdrcmple>
  405f08:	bf94      	ite	ls
  405f0a:	2001      	movls	r0, #1
  405f0c:	2000      	movhi	r0, #0
  405f0e:	f85d fb08 	ldr.w	pc, [sp], #8
  405f12:	bf00      	nop

00405f14 <__aeabi_dcmpgt>:
  405f14:	f84d ed08 	str.w	lr, [sp, #-8]!
  405f18:	f7ff ffc4 	bl	405ea4 <__aeabi_cdrcmple>
  405f1c:	bf34      	ite	cc
  405f1e:	2001      	movcc	r0, #1
  405f20:	2000      	movcs	r0, #0
  405f22:	f85d fb08 	ldr.w	pc, [sp], #8
  405f26:	bf00      	nop

00405f28 <__aeabi_dcmpun>:
  405f28:	ea4f 0c41 	mov.w	ip, r1, lsl #1
  405f2c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f30:	d102      	bne.n	405f38 <__aeabi_dcmpun+0x10>
  405f32:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
  405f36:	d10a      	bne.n	405f4e <__aeabi_dcmpun+0x26>
  405f38:	ea4f 0c43 	mov.w	ip, r3, lsl #1
  405f3c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
  405f40:	d102      	bne.n	405f48 <__aeabi_dcmpun+0x20>
  405f42:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
  405f46:	d102      	bne.n	405f4e <__aeabi_dcmpun+0x26>
  405f48:	f04f 0000 	mov.w	r0, #0
  405f4c:	4770      	bx	lr
  405f4e:	f04f 0001 	mov.w	r0, #1
  405f52:	4770      	bx	lr

00405f54 <__aeabi_d2iz>:
  405f54:	ea4f 0241 	mov.w	r2, r1, lsl #1
  405f58:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
  405f5c:	d215      	bcs.n	405f8a <__aeabi_d2iz+0x36>
  405f5e:	d511      	bpl.n	405f84 <__aeabi_d2iz+0x30>
  405f60:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
  405f64:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
  405f68:	d912      	bls.n	405f90 <__aeabi_d2iz+0x3c>
  405f6a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
  405f6e:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
  405f72:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
  405f76:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
  405f7a:	fa23 f002 	lsr.w	r0, r3, r2
  405f7e:	bf18      	it	ne
  405f80:	4240      	negne	r0, r0
  405f82:	4770      	bx	lr
  405f84:	f04f 0000 	mov.w	r0, #0
  405f88:	4770      	bx	lr
  405f8a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
  405f8e:	d105      	bne.n	405f9c <__aeabi_d2iz+0x48>
  405f90:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
  405f94:	bf08      	it	eq
  405f96:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
  405f9a:	4770      	bx	lr
  405f9c:	f04f 0000 	mov.w	r0, #0
  405fa0:	4770      	bx	lr
  405fa2:	bf00      	nop

00405fa4 <sysfont_glyphs>:
	...
  405fc4:	0030 0030 0030 0030 0030 0030 0000 0030     0.0.0.0.0.0...0.
  405fd4:	0030 0000 0000 0000 0000 0000 006c 006c     0...........l.l.
  405fe4:	006c 006c 0000 0000 0000 0000 0000 0000     l.l.............
	...
  405ffc:	0000 0028 0028 007c 0028 0028 007c 0028     ..(.(.|.(.(.|.(.
  40600c:	0028 0000 0000 0000 0000 0000 0010 003c     (.............<.
  40601c:	0040 0020 0010 0008 0004 0078 0010 0000     @. .......x.....
	...
  406034:	0000 007c 00a4 00a8 0050 0028 0054 0094     ..|.....P.(.T...
  406044:	0088 0000 0000 0000 0000 0000 0060 0090     ............`...
  406054:	0090 0090 0060 0094 0088 0088 0070 0000     ....`.......p...
	...
  40606c:	0010 0010 0010 0000 0000 0000 0000 0000     ................
	...
  406088:	0008 0010 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406098:	0010 0008 0000 0000 0000 0000 0020 0010     ............ ...
  4060a8:	0008 0008 0008 0008 0008 0008 0010 0020     .............. .
  4060b8:	0000 0000 0000 0028 0010 007c 0010 0028     ......(...|...(.
	...
  4060e0:	0010 0010 0010 00fe 0010 0010 0010 0000     ................
	...
  406108:	0010 0030 0020 0000 0000 0000 0000 0000     ..0. ...........
  406118:	0000 0000 0000 007c 0000 0000 0000 0000     ......|.........
	...
  40613c:	0000 0030 0030 0000 0000 0000 0000 0000     ..0.0...........
  40614c:	0000 0008 0008 0010 0010 0020 0020 0040     .......... . .@.
  40615c:	0040 0000 0000 0000 0000 0000 0000 0078     @.............x.
  40616c:	0084 008c 0094 00a4 00c4 0084 0078 0000     ............x...
	...
  406184:	0000 0010 0030 0050 0010 0010 0010 0010     ....0.P.........
  406194:	007c 0000 0000 0000 0000 0000 0000 0070     |.............p.
  4061a4:	0088 0008 0010 0020 0040 0080 00f8 0000     ...... .@.......
	...
  4061bc:	0000 0070 0088 0008 0030 0008 0008 0088     ..p.....0.......
  4061cc:	0070 0000 0000 0000 0000 0000 0000 0008     p...............
  4061dc:	0018 0028 0048 0088 00fc 0008 0008 0000     ..(.H...........
	...
  4061f4:	0000 0078 0080 0080 00f0 0008 0008 0008     ..x.............
  406204:	00f0 0000 0000 0000 0000 0000 0000 0030     ..............0.
  406214:	0040 0080 00f0 0088 0088 0088 0070 0000     @...........p...
	...
  40622c:	0000 00f8 0008 0010 0010 0020 0020 0040     .......... . .@.
  40623c:	0040 0000 0000 0000 0000 0000 0000 0070     @.............p.
  40624c:	0088 0088 0070 0088 0088 0088 0070 0000     ....p.......p...
	...
  406264:	0000 0070 0088 0088 0088 0078 0008 0010     ..p.......x.....
  406274:	0060 0000 0000 0000 0000 0000 0000 0000     `...............
  406284:	0000 0030 0030 0000 0000 0030 0030 0000     ..0.0.....0.0...
	...
  4062a0:	0000 0030 0030 0000 0000 0030 0030 0060     ..0.0.....0.0.`.
  4062b0:	0040 0000 0000 0000 0000 0000 0008 0010     @...............
  4062c0:	0020 0040 0020 0010 0008 0000 0000 0000      .@. ...........
	...
  4062dc:	007c 0000 007c 0000 0000 0000 0000 0000     |...|...........
	...
  4062f4:	0040 0020 0010 0008 0010 0020 0040 0000     @. ....... .@...
	...
  40630c:	0000 0030 0048 0008 0010 0020 0000 0000     ..0.H..... .....
  40631c:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
  40632c:	003c 0042 009a 00aa 00aa 00be 0080 0078     <.B...........x.
	...
  406344:	0000 0010 0028 0028 0044 007c 0044 0044     ....(.(.D.|.D.D.
  406354:	0044 0000 0000 0000 0000 0000 0000 00f8     D...............
  406364:	0084 0084 00f8 0084 0084 0084 00f8 0000     ................
	...
  40637c:	0000 003c 0040 0080 0080 0080 0080 0040     ..<.@.........@.
  40638c:	003c 0000 0000 0000 0000 0000 0000 00f0     <...............
  40639c:	0088 0084 0084 0084 0084 0088 00f0 0000     ................
	...
  4063b4:	0000 00f8 0080 0080 00f0 0080 0080 0080     ................
  4063c4:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  4063d4:	0080 0080 00f8 0080 0080 0080 0080 0000     ................
	...
  4063ec:	0000 003c 0040 0080 0080 009c 0084 0044     ..<.@.........D.
  4063fc:	0038 0000 0000 0000 0000 0000 0000 0088     8...............
  40640c:	0088 0088 00f8 0088 0088 0088 0088 0000     ................
	...
  406424:	0000 00f8 0020 0020 0020 0020 0020 0020     .... . . . . . .
  406434:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  406444:	0008 0008 0008 0008 0008 0008 00f0 0000     ................
	...
  40645c:	0000 0084 0088 0090 00a0 00d0 0088 0084     ................
  40646c:	0084 0000 0000 0000 0000 0000 0000 0080     ................
  40647c:	0080 0080 0080 0080 0080 0080 00fc 0000     ................
	...
  406494:	0000 0084 00cc 00cc 00b4 00b4 0084 0084     ................
  4064a4:	0084 0000 0000 0000 0000 0000 0000 0084     ................
  4064b4:	00c4 00c4 00a4 00a4 0094 0094 008c 0000     ................
	...
  4064cc:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  4064dc:	0078 0000 0000 0000 0000 0000 0000 00f8     x...............
  4064ec:	0084 0084 0084 00f8 0080 0080 0080 0000     ................
	...
  406504:	0000 0078 0084 0084 0084 0084 0084 0084     ..x.............
  406514:	0078 0020 0018 0000 0000 0000 0000 00f8     x. .............
  406524:	0084 0084 0084 00f8 0088 0084 0084 0000     ................
	...
  40653c:	0000 007c 0080 0080 0060 0018 0004 0004     ..|.....`.......
  40654c:	00f8 0000 0000 0000 0000 0000 0000 00f8     ................
  40655c:	0020 0020 0020 0020 0020 0020 0020 0000      . . . . . . ...
	...
  406574:	0000 0084 0084 0084 0084 0084 0084 0084     ................
  406584:	0078 0000 0000 0000 0000 0000 0000 0084     x...............
  406594:	0084 0084 0048 0048 0048 0030 0030 0000     ....H.H.H.0.0...
	...
  4065ac:	0000 0088 00a8 00a8 00a8 00a8 00a8 0050     ..............P.
  4065bc:	0050 0000 0000 0000 0000 0000 0000 0088     P...............
  4065cc:	0088 0050 0020 0020 0050 0088 0088 0000     ..P. . .P.......
	...
  4065e4:	0000 0088 0088 0088 0050 0050 0020 0020     ........P.P. . .
  4065f4:	0020 0000 0000 0000 0000 0000 0000 00fc      ...............
  406604:	0004 0008 0010 0020 0040 0080 00fc 0000     ...... .@.......
	...
  40661c:	0070 0040 0040 0040 0040 0040 0040 0040     p.@.@.@.@.@.@.@.
  40662c:	0040 0040 0070 0000 0000 0000 0040 0040     @.@.p.......@.@.
  40663c:	0020 0020 0020 0010 0010 0010 0008 0008      . . ...........
	...
  406654:	0038 0008 0008 0008 0008 0008 0008 0008     8...............
  406664:	0008 0008 0038 0000 0000 0000 0010 0028     ....8.........(.
  406674:	0044 0000 0000 0000 0000 0000 0000 0000     D...............
	...
  40669c:	0038 0000 0000 0000 0000 0000 0000 0020     8............. .
  4066ac:	0010 0000 0000 0000 0000 0000 0000 0000     ................
	...
  4066c8:	0000 0070 0008 0008 0078 0088 007c 0000     ..p.....x...|...
	...
  4066e0:	0080 0080 0080 00f8 0084 0084 0084 0084     ................
  4066f0:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406700:	0000 0078 0080 0080 0080 0080 0078 0000     ..x.........x...
	...
  406718:	0004 0004 0004 007c 0084 0084 0084 008c     ......|.........
  406728:	0074 0000 0000 0000 0000 0000 0000 0000     t...............
  406738:	0000 0078 0084 00fc 0080 0080 007c 0000     ..x.........|...
	...
  406750:	001c 0020 0020 00fc 0020 0020 0020 0020     .. . ... . . . .
  406760:	00fc 0000 0000 0000 0000 0000 0000 0000     ................
  406770:	0000 007c 0084 0084 0084 0084 007c 0004     ..|.........|...
  406780:	0078 0000 0000 0000 0080 0080 0080 00b8     x...............
  406790:	00c4 0084 0084 0084 0084 0000 0000 0000     ................
  4067a0:	0000 0000 0000 0010 0000 0070 0010 0010     ..........p.....
  4067b0:	0010 0010 007c 0000 0000 0000 0000 0000     ....|...........
  4067c0:	0000 0008 0000 0078 0008 0008 0008 0008     ......x.........
  4067d0:	0008 0008 0008 0070 0000 0000 0080 0080     ......p.........
  4067e0:	0080 0088 0090 00a0 00d0 0088 0088 0000     ................
	...
  4067f8:	00e0 0020 0020 0020 0020 0020 0020 0020     .. . . . . . . .
  406808:	00f8 0000 0000 0000 0000 0000 0000 0000     ................
  406818:	0000 00a4 00fc 00a4 00a4 00a4 00a4 0000     ................
	...
  406834:	0000 00b8 00c4 0084 0084 0084 0084 0000     ................
	...
  406850:	0000 0078 0084 0084 0084 0084 0078 0000     ..x.........x...
	...
  40686c:	0000 00b8 00c4 0084 0084 0084 00f8 0080     ................
  40687c:	0080 0000 0000 0000 0000 0000 0000 007c     ..............|.
  40688c:	0084 0084 0084 0084 007c 0004 0004 0000     ........|.......
	...
  4068a4:	0000 00d8 0060 0040 0040 0040 00f0 0000     ....`.@.@.@.....
	...
  4068c0:	0000 0078 0080 0040 0030 0008 00f0 0000     ..x...@.0.......
	...
  4068dc:	0020 00fc 0020 0020 0020 0020 001c 0000      ... . . . .....
	...
  4068f8:	0000 0088 0088 0088 0088 0088 007c 0000     ............|...
	...
  406914:	0000 0084 0084 0084 0048 0048 0030 0000     ........H.H.0...
	...
  406930:	0000 0088 00a8 00a8 00a8 00a8 0050 0000     ............P...
	...
  40694c:	0000 0088 0050 0020 0020 0050 0088 0000     ....P. . .P.....
	...
  406968:	0000 0084 0084 0048 0048 0030 0010 0020     ......H.H.0... .
  406978:	0040 0000 0000 0000 0000 0000 0000 00f8     @...............
  406988:	0008 0010 0020 0040 00f8 0000 0000 0000     .... .@.........
  406998:	0000 0000 0010 0020 0020 0010 0020 0020     ...... . ... . .
  4069a8:	0010 0020 0020 0010 0000 0000 0000 0000     .. . ...........
  4069b8:	0010 0010 0010 0010 0000 0000 0010 0010     ................
  4069c8:	0010 0010 0000 0000 0000 0000 0020 0010     ............ ...
  4069d8:	0010 0020 0010 0010 0020 0010 0010 0020     .. ..... ..... .
  4069e8:	0000 0000 7266 7165 2520 0064               ....freq %d.

004069f4 <_global_impure_ptr>:
  4069f4:	0028 2040 4e49 0046 6e69 0066 414e 004e     (.@ INF.inf.NAN.
  406a04:	616e 006e 3130 3332 3534 3736 3938 4241     nan.0123456789AB
  406a14:	4443 4645 0000 0000 3130 3332 3534 3736     CDEF....01234567
  406a24:	3938 6261 6463 6665 0000 0000 6e28 6c75     89abcdef....(nul
  406a34:	296c 0000 0030 0000                         l)..0...

00406a3c <blanks.7223>:
  406a3c:	2020 2020 2020 2020 2020 2020 2020 2020                     

00406a4c <zeroes.7224>:
  406a4c:	3030 3030 3030 3030 3030 3030 3030 3030     0000000000000000
  406a5c:	6e49 6966 696e 7974 0000 0000 614e 004e     Infinity....NaN.
  406a6c:	0000 0000                                   ....

00406a70 <__mprec_bigtens>:
  406a70:	8000 37e0 c379 4341 6e17 b505 b8b5 4693     ...7y.AC.n.....F
  406a80:	f9f5 e93f 4f03 4d38 1d32 f930 7748 5a82     ..?..O8M2.0.Hw.Z
  406a90:	bf3c 7f73 4fdd 7515                         <.s..O.u

00406a98 <__mprec_tens>:
  406a98:	0000 0000 0000 3ff0 0000 0000 0000 4024     .......?......$@
  406aa8:	0000 0000 0000 4059 0000 0000 4000 408f     ......Y@.....@.@
  406ab8:	0000 0000 8800 40c3 0000 0000 6a00 40f8     .......@.....j.@
  406ac8:	0000 0000 8480 412e 0000 0000 12d0 4163     .......A......cA
  406ad8:	0000 0000 d784 4197 0000 0000 cd65 41cd     .......A....e..A
  406ae8:	0000 2000 a05f 4202 0000 e800 4876 4237     ... _..B....vH7B
  406af8:	0000 a200 1a94 426d 0000 e540 309c 42a2     ......mB..@..0.B
  406b08:	0000 1e90 bcc4 42d6 0000 2634 6bf5 430c     .......B..4&.k.C
  406b18:	8000 37e0 c379 4341 a000 85d8 3457 4376     ...7y.AC....W4vC
  406b28:	c800 674e c16d 43ab 3d00 6091 58e4 43e1     ..Ngm..C.=.`.X.C
  406b38:	8c40 78b5 af1d 4415 ef50 d6e2 1ae4 444b     @..x...DP.....KD
  406b48:	d592 064d f0cf 4480 4af6 c7e1 2d02 44b5     ..M....D.J...-.D
  406b58:	9db4 79d9 7843 44ea                         ...yCx.D

00406b60 <p05.6055>:
  406b60:	0005 0000 0019 0000 007d 0000 0043 0000     ........}...C...
  406b70:	4f50 4953 0058 0000 002e 0000               POSIX.......

00406b7c <_ctype_>:
  406b7c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
  406b8c:	2020 2020 2020 2020 2020 2020 2020 2020                     
  406b9c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
  406bac:	0410 0404 0404 0404 0404 1004 1010 1010     ................
  406bbc:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
  406bcc:	0101 0101 0101 0101 0101 0101 1010 1010     ................
  406bdc:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
  406bec:	0202 0202 0202 0202 0202 0202 1010 1010     ................
  406bfc:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...

00406c80 <_init>:
  406c80:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406c82:	bf00      	nop
  406c84:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406c86:	bc08      	pop	{r3}
  406c88:	469e      	mov	lr, r3
  406c8a:	4770      	bx	lr

00406c8c <__init_array_start>:
  406c8c:	00402f55 	.word	0x00402f55

00406c90 <__frame_dummy_init_array_entry>:
  406c90:	00400165                                e.@.

00406c94 <_fini>:
  406c94:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
  406c96:	bf00      	nop
  406c98:	bcf8      	pop	{r3, r4, r5, r6, r7}
  406c9a:	bc08      	pop	{r3}
  406c9c:	469e      	mov	lr, r3
  406c9e:	4770      	bx	lr

00406ca0 <__fini_array_start>:
  406ca0:	00400141 	.word	0x00400141

Disassembly of section .relocate:

20400000 <portable_delay_cycles>:
RAMFUNC
void portable_delay_cycles(unsigned long n)
{
	UNUSED(n);

	__asm (
20400000:	f3bf 8f5f 	dmb	sy
20400004:	3801      	subs	r0, #1
20400006:	d1fb      	bne.n	20400000 <portable_delay_cycles>
20400008:	4770      	bx	lr
	...

2040000c <sysfont>:
2040000c:	0000 0000 5fa4 0040 0e0a 7d20               ....._@... }

20400018 <g_interrupt_enabled>:
20400018:	0001 0000                                   ....

2040001c <SystemCoreClock>:
2040001c:	0900 003d                                   ..=.

20400020 <_impure_ptr>:
20400020:	0028 2040 0000 0000                         (.@ ....

20400028 <impure_data>:
20400028:	0000 0000 0314 2040 037c 2040 03e4 2040     ......@ |.@ ..@ 
	...
204000d0:	0001 0000 0000 0000 330e abcd 1234 e66d     .........3..4.m.
204000e0:	deec 0005 000b 0000 0000 0000 0000 0000     ................
	...

20400450 <__atexit_recursive_mutex>:
20400450:	0ca8 2040                                   ..@ 

20400454 <__malloc_av_>:
	...
2040045c:	0454 2040 0454 2040 045c 2040 045c 2040     T.@ T.@ \.@ \.@ 
2040046c:	0464 2040 0464 2040 046c 2040 046c 2040     d.@ d.@ l.@ l.@ 
2040047c:	0474 2040 0474 2040 047c 2040 047c 2040     t.@ t.@ |.@ |.@ 
2040048c:	0484 2040 0484 2040 048c 2040 048c 2040     ..@ ..@ ..@ ..@ 
2040049c:	0494 2040 0494 2040 049c 2040 049c 2040     ..@ ..@ ..@ ..@ 
204004ac:	04a4 2040 04a4 2040 04ac 2040 04ac 2040     ..@ ..@ ..@ ..@ 
204004bc:	04b4 2040 04b4 2040 04bc 2040 04bc 2040     ..@ ..@ ..@ ..@ 
204004cc:	04c4 2040 04c4 2040 04cc 2040 04cc 2040     ..@ ..@ ..@ ..@ 
204004dc:	04d4 2040 04d4 2040 04dc 2040 04dc 2040     ..@ ..@ ..@ ..@ 
204004ec:	04e4 2040 04e4 2040 04ec 2040 04ec 2040     ..@ ..@ ..@ ..@ 
204004fc:	04f4 2040 04f4 2040 04fc 2040 04fc 2040     ..@ ..@ ..@ ..@ 
2040050c:	0504 2040 0504 2040 050c 2040 050c 2040     ..@ ..@ ..@ ..@ 
2040051c:	0514 2040 0514 2040 051c 2040 051c 2040     ..@ ..@ ..@ ..@ 
2040052c:	0524 2040 0524 2040 052c 2040 052c 2040     $.@ $.@ ,.@ ,.@ 
2040053c:	0534 2040 0534 2040 053c 2040 053c 2040     4.@ 4.@ <.@ <.@ 
2040054c:	0544 2040 0544 2040 054c 2040 054c 2040     D.@ D.@ L.@ L.@ 
2040055c:	0554 2040 0554 2040 055c 2040 055c 2040     T.@ T.@ \.@ \.@ 
2040056c:	0564 2040 0564 2040 056c 2040 056c 2040     d.@ d.@ l.@ l.@ 
2040057c:	0574 2040 0574 2040 057c 2040 057c 2040     t.@ t.@ |.@ |.@ 
2040058c:	0584 2040 0584 2040 058c 2040 058c 2040     ..@ ..@ ..@ ..@ 
2040059c:	0594 2040 0594 2040 059c 2040 059c 2040     ..@ ..@ ..@ ..@ 
204005ac:	05a4 2040 05a4 2040 05ac 2040 05ac 2040     ..@ ..@ ..@ ..@ 
204005bc:	05b4 2040 05b4 2040 05bc 2040 05bc 2040     ..@ ..@ ..@ ..@ 
204005cc:	05c4 2040 05c4 2040 05cc 2040 05cc 2040     ..@ ..@ ..@ ..@ 
204005dc:	05d4 2040 05d4 2040 05dc 2040 05dc 2040     ..@ ..@ ..@ ..@ 
204005ec:	05e4 2040 05e4 2040 05ec 2040 05ec 2040     ..@ ..@ ..@ ..@ 
204005fc:	05f4 2040 05f4 2040 05fc 2040 05fc 2040     ..@ ..@ ..@ ..@ 
2040060c:	0604 2040 0604 2040 060c 2040 060c 2040     ..@ ..@ ..@ ..@ 
2040061c:	0614 2040 0614 2040 061c 2040 061c 2040     ..@ ..@ ..@ ..@ 
2040062c:	0624 2040 0624 2040 062c 2040 062c 2040     $.@ $.@ ,.@ ,.@ 
2040063c:	0634 2040 0634 2040 063c 2040 063c 2040     4.@ 4.@ <.@ <.@ 
2040064c:	0644 2040 0644 2040 064c 2040 064c 2040     D.@ D.@ L.@ L.@ 
2040065c:	0654 2040 0654 2040 065c 2040 065c 2040     T.@ T.@ \.@ \.@ 
2040066c:	0664 2040 0664 2040 066c 2040 066c 2040     d.@ d.@ l.@ l.@ 
2040067c:	0674 2040 0674 2040 067c 2040 067c 2040     t.@ t.@ |.@ |.@ 
2040068c:	0684 2040 0684 2040 068c 2040 068c 2040     ..@ ..@ ..@ ..@ 
2040069c:	0694 2040 0694 2040 069c 2040 069c 2040     ..@ ..@ ..@ ..@ 
204006ac:	06a4 2040 06a4 2040 06ac 2040 06ac 2040     ..@ ..@ ..@ ..@ 
204006bc:	06b4 2040 06b4 2040 06bc 2040 06bc 2040     ..@ ..@ ..@ ..@ 
204006cc:	06c4 2040 06c4 2040 06cc 2040 06cc 2040     ..@ ..@ ..@ ..@ 
204006dc:	06d4 2040 06d4 2040 06dc 2040 06dc 2040     ..@ ..@ ..@ ..@ 
204006ec:	06e4 2040 06e4 2040 06ec 2040 06ec 2040     ..@ ..@ ..@ ..@ 
204006fc:	06f4 2040 06f4 2040 06fc 2040 06fc 2040     ..@ ..@ ..@ ..@ 
2040070c:	0704 2040 0704 2040 070c 2040 070c 2040     ..@ ..@ ..@ ..@ 
2040071c:	0714 2040 0714 2040 071c 2040 071c 2040     ..@ ..@ ..@ ..@ 
2040072c:	0724 2040 0724 2040 072c 2040 072c 2040     $.@ $.@ ,.@ ,.@ 
2040073c:	0734 2040 0734 2040 073c 2040 073c 2040     4.@ 4.@ <.@ <.@ 
2040074c:	0744 2040 0744 2040 074c 2040 074c 2040     D.@ D.@ L.@ L.@ 
2040075c:	0754 2040 0754 2040 075c 2040 075c 2040     T.@ T.@ \.@ \.@ 
2040076c:	0764 2040 0764 2040 076c 2040 076c 2040     d.@ d.@ l.@ l.@ 
2040077c:	0774 2040 0774 2040 077c 2040 077c 2040     t.@ t.@ |.@ |.@ 
2040078c:	0784 2040 0784 2040 078c 2040 078c 2040     ..@ ..@ ..@ ..@ 
2040079c:	0794 2040 0794 2040 079c 2040 079c 2040     ..@ ..@ ..@ ..@ 
204007ac:	07a4 2040 07a4 2040 07ac 2040 07ac 2040     ..@ ..@ ..@ ..@ 
204007bc:	07b4 2040 07b4 2040 07bc 2040 07bc 2040     ..@ ..@ ..@ ..@ 
204007cc:	07c4 2040 07c4 2040 07cc 2040 07cc 2040     ..@ ..@ ..@ ..@ 
204007dc:	07d4 2040 07d4 2040 07dc 2040 07dc 2040     ..@ ..@ ..@ ..@ 
204007ec:	07e4 2040 07e4 2040 07ec 2040 07ec 2040     ..@ ..@ ..@ ..@ 
204007fc:	07f4 2040 07f4 2040 07fc 2040 07fc 2040     ..@ ..@ ..@ ..@ 
2040080c:	0804 2040 0804 2040 080c 2040 080c 2040     ..@ ..@ ..@ ..@ 
2040081c:	0814 2040 0814 2040 081c 2040 081c 2040     ..@ ..@ ..@ ..@ 
2040082c:	0824 2040 0824 2040 082c 2040 082c 2040     $.@ $.@ ,.@ ,.@ 
2040083c:	0834 2040 0834 2040 083c 2040 083c 2040     4.@ 4.@ <.@ <.@ 
2040084c:	0844 2040 0844 2040 084c 2040 084c 2040     D.@ D.@ L.@ L.@ 

2040085c <__malloc_sbrk_base>:
2040085c:	ffff ffff                                   ....

20400860 <__malloc_trim_threshold>:
20400860:	0000 0002                                   ....

20400864 <__global_locale>:
20400864:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400884:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008a4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008c4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
204008e4:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400904:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400924:	0043 0000 0000 0000 0000 0000 0000 0000     C...............
	...
20400944:	5669 0040 5229 0040 0000 0000 6b7c 0040     iV@.)R@.....|k@.
20400954:	6b78 0040 6a18 0040 6a18 0040 6a18 0040     xk@..j@..j@..j@.
20400964:	6a18 0040 6a18 0040 6a18 0040 6a18 0040     .j@..j@..j@..j@.
20400974:	6a18 0040 6a18 0040 ffff ffff ffff ffff     .j@..j@.........
20400984:	ffff ffff ffff 0000 0001 5341 4943 0049     ..........ASCII.
	...
204009ac:	0000 5341 4943 0049 0000 0000 0000 0000     ..ASCII.........
	...
